generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model cdCategoriaDireccion {
  id_categoria_direccion Int                @id(map: "PK__cdCatego__8A63559DD65626AC") @db.SmallInt
  descripcion            String?            @db.VarChar(100)
  fecha_modificacion     DateTime?          @db.DateTime
  estado                 Boolean?
  cdDireccionxRuta       cdDireccionxRuta[]
}

model cdCobradorxRuta {
  id_empresa         Int         @db.SmallInt
  id_cobrador        BigInt
  id_ruta            Int         @db.SmallInt
  fecha_modificacion DateTime    @db.Date
  IC_Cobrador        IC_Cobrador @relation(fields: [id_cobrador], references: [idCobrador], onUpdate: NoAction, map: "FK__cdCobrado__id_co__3B36AB95")
  IC_Empresa         IC_Empresa  @relation(fields: [id_empresa], references: [idEmpresa], onUpdate: NoAction, map: "FK__cdCobrado__id_co__3B36AB96")
  cdRuta             cdRuta      @relation(fields: [id_ruta], references: [id_ruta], onUpdate: NoAction, map: "FK__cdCobrado__id_ru__3C2ACFCE")

  @@id([id_empresa, id_cobrador, id_ruta], map: "pk_cdCobradorxRuta")
}

model cdDireccionHistoria {
  idDireccionHistoria BigInt             @id(map: "PK_cdDireccionHistoria") @default(autoincrement())
  idEmpresa           Int                @db.SmallInt
  idCliente           BigInt
  direccion           String?            @db.NVarChar(500)
  cod_Zona            Int?
  cod_Municipio       Int?
  id_tipoDireccion    BigInt?
  usuario             String?            @db.NVarChar(60)
  colonia             String?            @db.NVarChar(120)
  refUbicacion        String?            @db.NVarChar(500)
  estado              Boolean?
  FechaRegistro       DateTime?          @db.DateTime
  DireccionLetras     String?            @db.VarChar(Max)
  idCobradorInactiva  BigInt?
  FechaInactiva       DateTime?          @db.DateTime
  IC_Cliente          IC_Cliente         @relation(fields: [idCliente, idEmpresa], references: [idCliente, idEmpresa], onUpdate: NoAction, map: "FK_cdDireccionHistoria_IC_Cliente")
  cdTipoDireccion     cdTipoDireccion?   @relation(fields: [id_tipoDireccion], references: [id_TipoDireccion], onDelete: NoAction, onUpdate: NoAction, map: "FK_cdDireccionHistoria_cdTipoDireccion")
  cdDireccionxRuta    cdDireccionxRuta?
  Ic_Juicio           Ic_Juicio[]
  ic_print_history    ic_print_history[]
  IC_visita           IC_visita[]

  @@index([idCliente, idEmpresa, estado], map: "IDX_cdDireccionHistoria")
  @@index([cod_Municipio, direccion, id_tipoDireccion, idEmpresa, idCliente], map: "idx_direccion_historica")
}

model cdDireccionxRuta {
  id_direccion_historia BigInt                @id(map: "PK__cdDirecc__04AA547526A662B5")
  id_ruta               Int?                  @db.SmallInt
  id_estado_dir         Int?                  @db.SmallInt
  fecha_ing             DateTime?             @db.DateTime
  fecha_mod             DateTime?             @db.DateTime
  id_categoria_dir      Int?                  @db.SmallInt
  usuario_validacion    String?               @db.VarChar(50)
  sn_revalidacion       Boolean?
  fecha_revalidacion    DateTime?             @db.DateTime
  usuario_revalidacion  String?               @db.VarChar(50)
  usuario_modificacion  String?               @db.VarChar(50)
  cdCategoriaDireccion  cdCategoriaDireccion? @relation(fields: [id_categoria_dir], references: [id_categoria_direccion], onDelete: NoAction, onUpdate: NoAction, map: "FK__cdDirecci__id_ca__48B16D9B")
  cdDireccionHistoria   cdDireccionHistoria   @relation(fields: [id_direccion_historia], references: [idDireccionHistoria], onUpdate: NoAction, map: "FK__direccionruta_direccionhistoria")
  cdEstadoDireccion     cdEstadoDireccion?    @relation(fields: [id_estado_dir], references: [id_estado_dir], onDelete: NoAction, onUpdate: NoAction, map: "FK__ic_estado_direccion__DirxRuta")
  cdRuta                cdRuta?               @relation(fields: [id_ruta], references: [id_ruta], onDelete: NoAction, onUpdate: NoAction, map: "FK__cdDirecci__id_ru__5654B625")

  @@index([id_categoria_dir], map: "IDX_cdDireccionxRuta")
}

model cdEstadoDireccion {
  id_estado_dir      Int                @id(map: "PK__cdEstado__04CFB54DB60FB48D") @db.SmallInt
  descripcion        String?            @db.VarChar(100)
  fecha_modificacion DateTime?          @db.DateTime
  cdDireccionxRuta   cdDireccionxRuta[]
}

model cdRuta {
  id_ruta          Int                @id(map: "PK__cdRuta__33C9344FA0B9C9A5") @db.SmallInt
  nombre           String?            @db.VarChar(150)
  ubicacion        String?            @db.VarChar(150)
  descripcion      String?            @db.VarChar(150)
  estado           Boolean?
  cdCobradorxRuta  cdCobradorxRuta[]
  cdDireccionxRuta cdDireccionxRuta[]
  cdRuta_Zona      cdRuta_Zona[]      @ignore
  ic_print_history ic_print_history[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cdRuta_Zona {
  cod_municipio Int?
  cod_zona      Int?    @db.SmallInt
  cod_ruta      Int?    @db.SmallInt
  GNMUNI        GNMUNI? @relation(fields: [cod_municipio], references: [codigomuni], onDelete: NoAction, onUpdate: NoAction, map: "FK__cdRuta_Zo__cod_m__62BA8D0A")
  cdRuta        cdRuta? @relation(fields: [cod_ruta], references: [id_ruta], onDelete: NoAction, onUpdate: NoAction, map: "FK__cdRuta_Zo__cod_r__63AEB143")

  @@ignore
}

model cdTipoDireccion {
  id_TipoDireccion    BigInt                @id(map: "PK_cdTipoDireccion")
  descripcion         String?               @db.NVarChar(120)
  cdDireccionHistoria cdDireccionHistoria[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cdZonaRoja {
  cod_municipio Int?
  cod_zona      Int?     @db.SmallInt
  colonia       String?  @db.VarChar(150)
  estado        Boolean?
  GNMUNI        GNMUNI?  @relation(fields: [cod_municipio], references: [codigomuni], onDelete: NoAction, onUpdate: NoAction, map: "fk_cdRutaZona__gnmuni")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model errorJson {
  IdErrorJson Int       @default(autoincrement())
  json        String?   @db.NText
  Fecha       DateTime? @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model ErrorLog {
  Host          String?   @db.VarChar(150)
  App           String?   @db.VarChar(150)
  Date          DateTime? @db.DateTime
  ErroLine      String?   @db.VarChar(150)
  Message       String?   @db.VarChar(2000)
  ProcedureName String?   @db.VarChar(350)

  @@ignore
}

model exl_datatypes {
  datatype_id Int     @id(map: "PK__exl_data__04EAF740A0D6E338")
  description String? @db.VarChar(100)
}

model exl_detail {
  load_id         Int
  column_id       Int
  sheet_name      String?  @db.VarChar(100)
  column_name     String?  @db.VarChar(100)
  column_datatype String?  @db.VarChar(100)
  required        Boolean?

  @@id([load_id, column_id], map: "PK__exl_deta__E6FE140B9AFBAC4C")
}

model exl_header {
  load_id                   Int       @id(map: "PK__exl_head__08CE0C5AB1C94CDD")
  title                     String?   @db.VarChar(200)
  description               String?   @db.VarChar(1000)
  creation_date             DateTime? @db.SmallDateTime
  last_update               DateTime? @db.SmallDateTime
  created_by                String?   @db.VarChar(50)
  load_process              String?   @db.VarChar(100)
  validation_process        String?   @db.VarChar(100)
  book_url                  String?   @db.VarChar(500)
  allow_scheduled_execution Int?
}

model exl_process_data {
  process_id  Int
  load_id     Int
  sheet_name  String  @db.VarChar(100)
  column_name String  @db.VarChar(100)
  row_id      Int
  data_value  String? @db.VarChar(1250)
  data_format String? @db.VarChar(100)

  @@id([process_id, sheet_name, column_name, row_id], map: "PK__exl_proc__E40D9CED730A1DDA")
}

model exl_process_error {
  process_id  Int?
  error_id    BigInt  @id(map: "pk_exl_process_error") @default(autoincrement())
  sheet_name  String? @db.VarChar(100)
  column_name String? @db.VarChar(100)
  row_id      Int?
  data_value  String? @db.VarChar(500)
  error_desc  String? @db.NVarChar(Max)

  @@index([process_id], map: "idx_exl_process_error")
}

model exl_process_header {
  process_id                                                  Int        @id(map: "PK__exl_proc__9446C3E137EE3724")
  load_id                                                     Int?
  description                                                 String?    @db.VarChar(1000)
  execution_time                                              DateTime?  @db.DateTime
  execution_start                                             DateTime?  @db.DateTime
  execution_finish                                            DateTime?  @db.DateTime
  progress                                                    Int?
  user_id                                                     String?    @db.VarChar(100)
  book_url                                                    String?    @db.VarChar(1000)
  process_state                                               Int?
  is_valid                                                    Int?
  execution_timereal                                          DateTime?  @db.DateTime
  TasaCambio                                                  Decimal?   @db.Decimal(10, 7)
  IdMoneda                                                    Int?       @db.SmallInt
  IdMonedaEquivalente                                         Int?       @db.SmallInt
  ic_Moneda_exl_process_header_IdMonedaToic_Moneda            ic_Moneda? @relation("exl_process_header_IdMonedaToic_Moneda", fields: [IdMoneda], references: [idMoneda], onDelete: NoAction, onUpdate: NoAction, map: "FK_IdMoneraOrigenExlProcHeader")
  ic_Moneda_exl_process_header_IdMonedaEquivalenteToic_Moneda ic_Moneda? @relation("exl_process_header_IdMonedaEquivalenteToic_Moneda", fields: [IdMonedaEquivalente], references: [idMoneda], onDelete: NoAction, onUpdate: NoAction, map: "FK_IdMoneraEqExlProcHeader")
}

model exl_process_log {
  process_id  Int
  log_id      Int
  log_date    DateTime? @db.DateTime
  description String?   @db.VarChar(500)

  @@id([process_id, log_id], map: "PK__exl_proc__8DA4FA9F9E15B37F")
}

model exl_process_progress {
  process_id       Int  @id(map: "PK__exl_proc__9446C3E12EBC60B3")
  process_count    Int?
  process_executed Int?
}

model exl_process_state {
  state_id    Int     @id(map: "PK__exl_proc__81A474171EA6E80E")
  description String? @db.VarChar(100)
  icon        String? @db.VarChar(100)
  color       String? @db.VarChar(100)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_desasignacion_cartera19535 {
  process_id  Int?
  row_id      Int
  idempresa   String? @db.VarChar(1250)
  idmoneda    String? @db.VarChar(1250)
  noprestamo  String? @db.VarChar(1250)
  observacion String? @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_desasignacion_cartera19537 {
  process_id  Int?
  row_id      Int
  idempresa   String? @db.VarChar(1250)
  idmoneda    String? @db.VarChar(1250)
  noprestamo  String? @db.VarChar(1250)
  observacion String? @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_pagos_CHEPE19240 {
  process_id            Int?
  row_id                Int
  Pago_Con_IVA          String? @map("$ Pago Con IVA") @db.VarChar(1250)
  Reversiones_Con_IVA   String? @map("$ Reversiones Con IVA") @db.VarChar(1250)
  Agrupador             String? @db.VarChar(1250)
  Codigo_de_Transaccion String? @map("Codigo de Transaccion") @db.VarChar(1250)
  Fecha_Contable        String? @map("Fecha Contable") @db.VarChar(1250)
  Fecha_de_Pago         String? @map("Fecha de Pago") @db.VarChar(1250)
  GC                    String? @db.VarChar(1250)
  Marca                 String? @db.VarChar(1250)
  Mes                   String? @db.VarChar(1250)
  Moneda                String? @db.VarChar(1250)
  Pagare                String? @db.VarChar(1250)
  Q_Pago_Con_IVA        String? @map("Q Pago Con IVA") @db.VarChar(1250)
  Q_Reversiones_Con_IVA String? @map("Q Reversiones Con IVA") @db.VarChar(1250)
  Supervisor            String? @db.VarChar(1250)
  Tasa_de_Cambio        String? @map("Tasa de Cambio") @db.VarChar(1250)
  Tipo                  String? @db.VarChar(1250)
  Tipo_de_Transaccion   String? @map("Tipo de Transaccion") @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_pagos_CHEPE19250 {
  process_id            Int?
  row_id                Int
  Pago_Con_IVA          String? @map("$ Pago Con IVA") @db.VarChar(1250)
  Reversiones_Con_IVA   String? @map("$ Reversiones Con IVA") @db.VarChar(1250)
  Agrupador             String? @db.VarChar(1250)
  Codigo_de_Transaccion String? @map("Codigo de Transaccion") @db.VarChar(1250)
  Fecha_Contable        String? @map("Fecha Contable") @db.VarChar(1250)
  Fecha_de_Pago         String? @map("Fecha de Pago") @db.VarChar(1250)
  GC                    String? @db.VarChar(1250)
  Marca                 String? @db.VarChar(1250)
  Mes                   String? @db.VarChar(1250)
  Moneda                String? @db.VarChar(1250)
  Pagare                String? @db.VarChar(1250)
  Q_Pago_Con_IVA        String? @map("Q Pago Con IVA") @db.VarChar(1250)
  Q_Reversiones_Con_IVA String? @map("Q Reversiones Con IVA") @db.VarChar(1250)
  Supervisor            String? @db.VarChar(1250)
  Tasa_de_Cambio        String? @map("Tasa de Cambio") @db.VarChar(1250)
  Tipo                  String? @db.VarChar(1250)
  Tipo_de_Transaccion   String? @map("Tipo de Transaccion") @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_pagos_CHEPE19326 {
  process_id            Int?
  row_id                Int
  Pago_Con_IVA          String? @map("$ Pago Con IVA") @db.VarChar(1250)
  Reversiones_Con_IVA   String? @map("$ Reversiones Con IVA") @db.VarChar(1250)
  Agrupador             String? @db.VarChar(1250)
  Codigo_de_Transaccion String? @map("Codigo de Transaccion") @db.VarChar(1250)
  Fecha_Contable        String? @map("Fecha Contable") @db.VarChar(1250)
  Fecha_de_Pago         String? @map("Fecha de Pago") @db.VarChar(1250)
  GC                    String? @db.VarChar(1250)
  Marca                 String? @db.VarChar(1250)
  Mes                   String? @db.VarChar(1250)
  Moneda                String? @db.VarChar(1250)
  Pagare                String? @db.VarChar(1250)
  Q_Pago_Con_IVA        String? @map("Q Pago Con IVA") @db.VarChar(1250)
  Q_Reversiones_Con_IVA String? @map("Q Reversiones Con IVA") @db.VarChar(1250)
  Supervisor            String? @db.VarChar(1250)
  Tasa_de_Cambio        String? @map("Tasa de Cambio") @db.VarChar(1250)
  Tipo                  String? @db.VarChar(1250)
  Tipo_de_Transaccion   String? @map("Tipo de Transaccion") @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_pagos_CHEPE19430 {
  process_id            Int?
  row_id                Int
  Pago_Con_IVA          String? @map("$ Pago Con IVA") @db.VarChar(1250)
  Reversiones_Con_IVA   String? @map("$ Reversiones Con IVA") @db.VarChar(1250)
  Agrupador             String? @db.VarChar(1250)
  Codigo_de_Transaccion String? @map("Codigo de Transaccion") @db.VarChar(1250)
  Fecha_Contable        String? @map("Fecha Contable") @db.VarChar(1250)
  Fecha_de_Pago         String? @map("Fecha de Pago") @db.VarChar(1250)
  GC                    String? @db.VarChar(1250)
  Marca                 String? @db.VarChar(1250)
  Mes                   String? @db.VarChar(1250)
  Moneda                String? @db.VarChar(1250)
  Pagare                String? @db.VarChar(1250)
  Q_Pago_Con_IVA        String? @map("Q Pago Con IVA") @db.VarChar(1250)
  Q_Reversiones_Con_IVA String? @map("Q Reversiones Con IVA") @db.VarChar(1250)
  Supervisor            String? @db.VarChar(1250)
  Tasa_de_Cambio        String? @map("Tasa de Cambio") @db.VarChar(1250)
  Tipo                  String? @db.VarChar(1250)
  Tipo_de_Transaccion   String? @map("Tipo de Transaccion") @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_pagos_CHEPE19441 {
  process_id            Int?
  row_id                Int
  Pago_Con_IVA          String? @map("$ Pago Con IVA") @db.VarChar(1250)
  Reversiones_Con_IVA   String? @map("$ Reversiones Con IVA") @db.VarChar(1250)
  Agrupador             String? @db.VarChar(1250)
  Codigo_de_Transaccion String? @map("Codigo de Transaccion") @db.VarChar(1250)
  Fecha_Contable        String? @map("Fecha Contable") @db.VarChar(1250)
  Fecha_de_Pago         String? @map("Fecha de Pago") @db.VarChar(1250)
  GC                    String? @db.VarChar(1250)
  Marca                 String? @db.VarChar(1250)
  Mes                   String? @db.VarChar(1250)
  Moneda                String? @db.VarChar(1250)
  Pagare                String? @db.VarChar(1250)
  Q_Pago_Con_IVA        String? @map("Q Pago Con IVA") @db.VarChar(1250)
  Q_Reversiones_Con_IVA String? @map("Q Reversiones Con IVA") @db.VarChar(1250)
  Supervisor            String? @db.VarChar(1250)
  Tasa_de_Cambio        String? @map("Tasa de Cambio") @db.VarChar(1250)
  Tipo                  String? @db.VarChar(1250)
  Tipo_de_Transaccion   String? @map("Tipo de Transaccion") @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_pagos_CHEPE19460 {
  process_id            Int?
  row_id                Int
  Pago_Con_IVA          String? @map("$ Pago Con IVA") @db.VarChar(1250)
  Reversiones_Con_IVA   String? @map("$ Reversiones Con IVA") @db.VarChar(1250)
  Agrupador             String? @db.VarChar(1250)
  Codigo_de_Transaccion String? @map("Codigo de Transaccion") @db.VarChar(1250)
  Fecha_Contable        String? @map("Fecha Contable") @db.VarChar(1250)
  Fecha_de_Pago         String? @map("Fecha de Pago") @db.VarChar(1250)
  GC                    String? @db.VarChar(1250)
  Marca                 String? @db.VarChar(1250)
  Mes                   String? @db.VarChar(1250)
  Moneda                String? @db.VarChar(1250)
  Pagare                String? @db.VarChar(1250)
  Q_Pago_Con_IVA        String? @map("Q Pago Con IVA") @db.VarChar(1250)
  Q_Reversiones_Con_IVA String? @map("Q Reversiones Con IVA") @db.VarChar(1250)
  Supervisor            String? @db.VarChar(1250)
  Tasa_de_Cambio        String? @map("Tasa de Cambio") @db.VarChar(1250)
  Tipo                  String? @db.VarChar(1250)
  Tipo_de_Transaccion   String? @map("Tipo de Transaccion") @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exl_temp_pagos_CHEPE19502 {
  process_id            Int?
  row_id                Int
  Pago_Con_IVA          String? @map("$ Pago Con IVA") @db.VarChar(1250)
  Reversiones_Con_IVA   String? @map("$ Reversiones Con IVA") @db.VarChar(1250)
  Agrupador             String? @db.VarChar(1250)
  Codigo_de_Transaccion String? @map("Codigo de Transaccion") @db.VarChar(1250)
  Fecha_Contable        String? @map("Fecha Contable") @db.VarChar(1250)
  Fecha_de_Pago         String? @map("Fecha de Pago") @db.VarChar(1250)
  GC                    String? @db.VarChar(1250)
  Marca                 String? @db.VarChar(1250)
  Mes                   String? @db.VarChar(1250)
  Moneda                String? @db.VarChar(1250)
  Pagare                String? @db.VarChar(1250)
  Q_Pago_Con_IVA        String? @map("Q Pago Con IVA") @db.VarChar(1250)
  Q_Reversiones_Con_IVA String? @map("Q Reversiones Con IVA") @db.VarChar(1250)
  Supervisor            String? @db.VarChar(1250)
  Tasa_de_Cambio        String? @map("Tasa de Cambio") @db.VarChar(1250)
  Tipo                  String? @db.VarChar(1250)
  Tipo_de_Transaccion   String? @map("Tipo de Transaccion") @db.VarChar(1250)

  @@ignore
}

model GN_EMPRESA {
  GNIDEMPRESA Int          @id(map: "PK__GN_EMPRESA__5E3FF0B0") @db.SmallInt
  EMPNOMBRE   String       @db.VarChar(75)
  DIRECCION   String       @db.VarChar(200)
  Telefono    String?      @db.VarChar(50)
  STATUS      Int?         @db.SmallInt
  IC_Empresa  IC_Empresa[]
}

model GN_PROGRAMA {
  Id_Programa         Int                   @id(map: "PK_GN_PROGRAMA") @db.SmallInt
  nodoPadre           Int?
  nodoHijo            Int?
  nombrePadre         String?               @db.VarChar(100)
  nombreHijo          String?               @db.VarChar(100)
  forma               String                @db.VarChar(100)
  Observaciones       String?               @db.VarChar(500)
  IC_PROGRAMASXPERFIL IC_PROGRAMASXPERFIL[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model GN_SISTEMA_ {
  idSistema   BigInt  @default(autoincrement())
  Nombre      String? @db.NVarChar(100)
  Descripcion String? @db.NVarChar(300)

  @@ignore
}

model GNDEPA {
  codigopais     Int
  codigodep      Int
  nombre         String    @db.VarChar(100)
  registrocedula String    @db.VarChar(4)
  gncodigoE83    Int?
  idregion       Int?
  GNPAIS         GNPAIS    @relation(fields: [codigopais], references: [codigopais], onUpdate: NoAction, map: "FK_GNDEPA_GNPAIS")
  GNREGION       GNREGION? @relation(fields: [codigopais, idregion], references: [codigopais, idregion], onUpdate: NoAction, map: "fk_idregion")
  GNMUNI         GNMUNI[]

  @@id([codigopais, codigodep], map: "PK_GNDEPA")
}

model GNMUNI {
  codigopais           Int
  codigomuni           Int                    @id(map: "PK_GNMUNI")
  nombre               String                 @db.VarChar(255)
  codigoE83            Int?
  codigodep            Int
  GNDEPA               GNDEPA                 @relation(fields: [codigopais, codigodep], references: [codigopais, codigodep], onUpdate: NoAction, map: "FK_GNMUNI_GNDEPA1")
  cdRuta_Zona          cdRuta_Zona[]          @ignore
  cdZonaRoja           cdZonaRoja[]           @ignore
  GNMUNI_EQ            GNMUNI_EQ[]
  IC_DireccionCompania IC_DireccionCompania[]
}

model GNMUNI_EQ {
  id_empresa          Int        @db.SmallInt
  nombre_eq           String     @db.VarChar(255)
  cod_muni            Int?
  estado              Boolean?
  fecha_actualizacion DateTime?  @db.DateTime
  GNMUNI              GNMUNI?    @relation(fields: [cod_muni], references: [codigomuni], onDelete: NoAction, onUpdate: NoAction, map: "fk_GNMUNI_EQ__GNMUNI_CM")
  IC_Empresa          IC_Empresa @relation(fields: [id_empresa], references: [idEmpresa], onUpdate: NoAction, map: "fk_GNMUNI_EQ__GNMUNI_IE")

  @@id([id_empresa, nombre_eq], map: "PK__GNMUNI_E__0830E0E385E13A33")
}

model GNPAIS {
  codigopais   Int      @id(map: "PK_GNPAIS")
  nombre       String   @db.VarChar(100)
  moneda       Int
  nacionalidad String   @db.VarChar(100)
  formatofecha String   @db.VarChar(20)
  activo       Boolean
  abrev        String   @db.VarChar(50)
  abrev2       String   @db.VarChar(50)
  tipocambio   Float
  GNDEPA       GNDEPA[]
}

model GNREGION {
  codigopais  Int
  idregion    Int
  Descripcion String   @db.NChar(30)
  GNDEPA      GNDEPA[]

  @@id([codigopais, idregion], map: "PK_GNREGION")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model history_mis_promerica {
  idClienteEmpresa    String?   @db.VarChar(50)
  noPrestamo          String?   @db.VarChar(50)
  nombreCompleto      String?   @db.VarChar(400)
  Gestor              String?   @db.VarChar(100)
  Codigo_Primario     String?   @db.VarChar(100)
  Codigo_Secundario   String?   @db.VarChar(100)
  montoAdeudado       Float?    @db.Money
  ComentarioCuenta    String?   @db.VarChar(100)
  fechaInicioPrestamo DateTime? @db.DateTime
  cod_departamento    String?   @db.VarChar(100)
  Descripcion         String?   @db.VarChar(50)
  FechaOperacion      DateTime? @db.DateTime

  @@ignore
}

model ic_account_status_history {
  id_status_history   BigInt              @default(autoincrement())
  company_id          Int                 @db.SmallInt
  currency_id         Int                 @db.SmallInt
  account             String              @db.VarChar(50)
  status_code         String              @db.VarChar(50)
  status_date         DateTime            @db.Date
  comments            String?             @db.VarChar(100)
  IC_Cuenta           IC_Cuenta           @relation(fields: [company_id, currency_id, account], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "fk_ic_account_status_history__ic_cuenta1")
  IC_StatusCompromiso IC_StatusCompromiso @relation(fields: [status_code], references: [codStatus], onUpdate: NoAction, map: "fk_ic_account_status_history__IC_StatusCompromiso")

  @@id([company_id, currency_id, account, status_code, status_date], map: "pk_ic_account_status_history")
  @@index([company_id, account, status_date], map: "idx_ic_account_status_history")
}

model IC_Actividad {
  Id_Actividad    Int        @id(map: "PK_IC_ACTIVIDADES")
  Descripcion     String     @db.VarChar(50)
  TiempoPermitido Int?
  IC_Login        IC_Login[]
}

model IC_ActividadActual {
  idCobrador  BigInt      @id(map: "PK_IC_Actividad_Actual")
  idEmpresa   Int?        @db.SmallInt
  idMoneda    Int?        @db.SmallInt
  noPrestamo  String?     @db.VarChar(50)
  FechaVista  DateTime?   @db.DateTime
  IC_Cobrador IC_Cobrador @relation(fields: [idCobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_IC_Actividad_Actual_IC_Cobrador")
  IC_Cuenta   IC_Cuenta?  @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_ActividadActual_IC_Cuenta")
}

model IC_Agencia {
  idEmpresa               Int                       @db.SmallInt
  idAgencia               Int                       @default(1, map: "DF_IC_Agencia_idAgencia") @db.SmallInt
  nombre                  String?                   @db.VarChar(300)
  Direccion               String?                   @db.VarChar(300)
  Telefono                String?                   @db.VarChar(60)
  Estado                  Boolean                   @default(false, map: "DF_IC_Agencia_Estado")
  Central                 Boolean?
  IC_Empresa              IC_Empresa                @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_Agencia_IC_Empresa")
  IC_AgenciaMeta          IC_AgenciaMeta[]
  ic_rendimiento_banrural ic_rendimiento_banrural[]

  @@id([idAgencia, idEmpresa], map: "PK_IC_Agencia")
}

model IC_AgenciaMeta {
  idEmpresa            Int             @db.SmallInt
  idAgencia            Int             @db.SmallInt
  AnioMeta             String          @db.VarChar(50)
  MesMeta              String          @db.VarChar(50)
  MontoMeta            Float?          @db.Money
  Usuario              String?         @db.VarChar(50)
  FechaMeta            DateTime?       @db.DateTime
  Estado               Boolean?
  hostname             String?         @db.VarChar(50)
  IC_Agencia           IC_Agencia      @relation(fields: [idAgencia, idEmpresa], references: [idAgencia, idEmpresa], onUpdate: NoAction, map: "FK_IC_MetaAgencia_IC_MetaAgencia")
  IC_AgenciaMeta       IC_AgenciaMeta  @relation("IC_AgenciaMetaToIC_AgenciaMeta_idEmpresa_idAgencia_AnioMeta_MesMeta", fields: [idEmpresa, idAgencia, AnioMeta, MesMeta], references: [idEmpresa, idAgencia, AnioMeta, MesMeta], onUpdate: NoAction, map: "FK_IC_AgenciaMeta_IC_AgenciaMeta")
  other_IC_AgenciaMeta IC_AgenciaMeta? @relation("IC_AgenciaMetaToIC_AgenciaMeta_idEmpresa_idAgencia_AnioMeta_MesMeta")

  @@id([idEmpresa, idAgencia, AnioMeta, MesMeta], map: "PK_IC_AgenciaMeta")
}

model IC_AgenciaMetaHistoria {
  idEmpresa Int       @db.SmallInt
  idAgencia Int       @db.SmallInt
  AnioMeta  String    @db.VarChar(50)
  MesMeta   String    @db.VarChar(50)
  Fecha     DateTime  @db.DateTime
  MontoMeta Float?    @db.Money
  FechaMeta DateTime? @db.DateTime
  Usuario   String?   @db.VarChar(50)
  Estado    Boolean?
  Host      String?   @db.VarChar(50)
  Accion    String?   @db.VarChar(50)

  @@id([idEmpresa, idAgencia, AnioMeta, MesMeta, Fecha], map: "PK_IC_AgenciaMetaHistoria")
}

model IC_Banco {
  IdBanco     String  @id(map: "PK_IC_Banco") @db.Char(3)
  Nombre      String  @db.NVarChar(50)
  NombreCorto String  @db.VarChar(100)
  Estado      Boolean
}

model ic_bitacora_archivos {
  id                   Int         @id(map: "PK__ic_bitac__3213E83F015422C3")
  id_empresa           Int?        @db.SmallInt
  ruta_archivo         String?     @db.NVarChar(100)
  tipo_archivo         String?     @db.NVarChar(100)
  fecha_registro       DateTime?   @db.DateTime
  comentario           String?     @db.NVarChar(100)
  cuentas_nuevas       Int?
  cuentas_actualizadas Int?
  cuentas_canceladas   Int?
  cuentas_activas      Int?
  IC_Empresa           IC_Empresa? @relation(fields: [id_empresa], references: [idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK__ic_bitaco__id_em__09E968C4")
}

model Ic_Boleta_Pago {
  idRegistro                Int                       @default(autoincrement())
  idEmpresa                 Int                       @db.SmallInt
  idMoneda                  Int                       @db.SmallInt
  noPrestamo                String                    @db.VarChar(50)
  noBoleta                  String?                   @db.VarChar(50)
  montoDeposito             Float?                    @db.Money
  fechaDeposito             DateTime?                 @db.DateTime
  agenciaDeposito           String?                   @db.VarChar(100)
  observaciones             String?                   @db.VarChar(200)
  fechaRecuperacion         DateTime?                 @db.DateTime
  idProceso                 Int
  fechaIngreso              DateTime?                 @db.DateTime
  fechaModificacion         DateTime?                 @db.DateTime
  usuarioCarga              String?                   @db.VarChar(50)
  sn_validacion             Boolean
  sn_validacion_operaciones Boolean
  ImagenBoleta              Bytes?                    @db.Image
  idcatalogoestatus         Int?
  idtransaccion             Int?
  idcomentarioboleta        Int?
  idFormaPago               Int?
  estado                    Boolean?
  noBoletaAntigua           String?                   @db.VarChar(50)
  img                       String?                   @db.VarChar(1000)
  drive                     String?                   @db.VarChar(1000)
  IC_Cuenta                 IC_Cuenta                 @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_Ic_Boleta_Pago_IC_Cuenta")
  IC_FormaDePago            IC_FormaDePago?           @relation(fields: [idFormaPago], references: [idFormaPago], onDelete: NoAction, onUpdate: NoAction, map: "FK_Ic_Boleta_Pago_ic_FormatoDePago")
  ic_EstatusBoleta          ic_EstatusBoleta?         @relation(fields: [idcatalogoestatus], references: [Idestatus], onDelete: NoAction, onUpdate: NoAction, map: "FK_Ic_Boleta_Pago_ic_EstatusBoleta")
  ic_ComentarioBoleta       ic_ComentarioBoleta?      @relation(fields: [idcomentarioboleta], references: [idcomentarioboleta], onDelete: NoAction, onUpdate: NoAction, map: "FK_Ic_Boleta_Pago_ic_ComentarioBoleta")
  ic_TipoTransaccionBoleta  ic_TipoTransaccionBoleta? @relation(fields: [idtransaccion], references: [idtransaccion], onDelete: NoAction, onUpdate: NoAction, map: "FK_Ic_Boleta_Pago_ic_TipoTransaccionBoleta")

  @@id([idRegistro, idProceso], map: "PK_Ic_Boleta_Pago")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_CACUOTAATRASADA {
  CaCredito   String  @db.VarChar(50)
  Catotal     String? @db.VarChar(50)
  CaNocuota   String  @db.VarChar(10)
  CaCapital   String? @db.VarChar(50)
  CaInteres   String? @db.VarChar(50)
  Cafechapago String? @db.VarChar(50)

  @@ignore
}

model Ic_campoFormato {
  idCampo          Int                @id(map: "PK_Ic_campoFormato")
  CampoNombre      String?            @db.VarChar(50)
  Descripcion      String?            @db.VarChar(150)
  Ic_CampoXFormato Ic_CampoXFormato[]
}

model Ic_CampoXFormato {
  idEmpresa       Int             @db.SmallInt
  idFormato       String          @db.Char(3)
  idCampo         Int
  font            String          @db.VarChar(150)
  Size            Int
  bold            Boolean
  Etiqueta        String          @db.VarChar(50)
  PosX            BigInt?
  PosY            BigInt?
  Ic_campoFormato Ic_campoFormato @relation(fields: [idCampo], references: [idCampo], onUpdate: NoAction, map: "FK_Ic_CampoXFormato_Ic_campoFormato")
  IC_Formato      IC_Formato      @relation(fields: [idEmpresa, idFormato], references: [IdEmpresa, IdFormato], onUpdate: NoAction, map: "FK_Ic_CampoXFormato_IC_Formato")

  @@id([idEmpresa, idFormato, idCampo], map: "PK_Ic_CampoXFormato")
}

model IC_CapitalAsignado {
  MonthAsignado   Int       @db.SmallInt
  YearAsignado    Int       @db.SmallInt
  idEmpresa       Int       @db.SmallInt
  idMoneda        Int       @db.SmallInt
  noPrestamo      String    @db.VarChar(50)
  FechaAsignado   DateTime  @db.DateTime
  saldoCapital    Decimal   @db.Decimal(19, 2)
  saldoVencido    Decimal?  @db.Decimal(19, 2)
  idcobrador      Int?
  idclasificacion Int?
  IC_Cuenta       IC_Cuenta @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_CapitalAsignado_IC_Cuenta")

  @@id([MonthAsignado, YearAsignado, idEmpresa, idMoneda, noPrestamo], map: "PK_IC_CapitalAsignado")
}

model ic_carta {
  idcarta          Int               @id(map: "PK__ic_carta__6339AFF7")
  idempresa        Int?              @db.SmallInt
  cartadescripcion String?           @db.VarChar(100)
  cartaStatus      Int?
  DireccionCarta   String?           @db.VarChar(300)
  Parametros       String?           @db.VarChar(2000)
  ArchivoOrigen    String?           @db.VarChar(50)
  ArchivoDestino   String?           @db.VarChar(50)
  HojaOrigen       String?           @db.VarChar(50)
  IC_Empresa       IC_Empresa?       @relation(fields: [idempresa], references: [idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_ic_carta_IC_Empresa")
  IC_CartaXVisita  IC_CartaXVisita[]
}

model IC_CartaXVisita {
  idCartaXvisita BigInt     @id(map: "PK__IC_CartaXVisita__52593CB8")
  idVisita       BigInt?
  idCarta        Int?
  ic_carta       ic_carta?  @relation(fields: [idCarta], references: [idcarta], onDelete: NoAction, onUpdate: NoAction, map: "FK__IC_CartaX__idCar__69E6AD86")
  IC_visita      IC_visita? @relation(fields: [idVisita], references: [idVisita], onDelete: NoAction, onUpdate: NoAction, map: "FK__IC_CartaX__idVis__68F2894D")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_CarteraExterna {
  IDEMPRESA              Int       @db.SmallInt
  IDMONEDA               Int       @db.SmallInt
  COD_ESTATUS            String?   @db.NVarChar(255)
  IDCLIENTE              String    @db.NVarChar(50)
  NOMBRECOMPLETO         String    @db.NVarChar(255)
  PRIMERNOMBRE           String?   @db.NVarChar(150)
  SEGUNDONOMBRE          String?   @db.NVarChar(50)
  PRIMERAPELLIDO         String?   @db.NVarChar(50)
  SEGUNDOAPELLIDO        String?   @db.NVarChar(50)
  CEDULA                 String?   @db.NVarChar(30)
  FECHANACIMIENTO        DateTime? @db.DateTime
  NIT                    String?   @db.NChar(50)
  IDPRODUCTO             String?   @db.NVarChar(255)
  DIRECCION              String?   @db.NVarChar(255)
  COLONIA                String?   @db.NVarChar(100)
  ZONA                   Int?
  DEPARTAMENTO           String?   @db.NVarChar(100)
  MUNICIPIO              String?   @db.NVarChar(100)
  TELEFONO_CASA          String?   @db.NVarChar(50)
  TELEFONO_CASA2         String?   @db.NVarChar(50)
  TELEFONO_LABORAL2      String?   @db.NVarChar(50)
  TELEFONO_OTRO          String?   @db.NVarChar(50)
  TELEFONO_OTRO2         String?   @db.NVarChar(50)
  TELEFONO_FAX           String?   @db.NVarChar(50)
  REFERENCIA_1           String?   @db.NVarChar(100)
  TEL_REFERENCIA_1       String?   @db.NVarChar(50)
  REFERENCIA_2           String?   @db.NVarChar(100)
  TEL_REFERENCIA_2       String?   @db.NVarChar(50)
  REFERENCIA_3           String?   @db.NVarChar(100)
  TEL_REFERENCIA_3       String?   @db.NVarChar(50)
  REFERENCIA_4           String?   @db.NVarChar(100)
  TEL_REFERENCIA_4       String?   @db.NVarChar(50)
  ID_EMPRESA             String?   @db.NVarChar(20)
  IDTIPO_EMPRESA         String?   @db.NVarChar(20)
  NOMBRE_EMPRESA         String?   @db.NVarChar(255)
  DIRECCION_EMPRESA      String?   @db.NVarChar(255)
  COL_DE_EMPRESA         String?   @db.NVarChar(60)
  ZONA_EMPRESA           Int?
  DEPARTAMENTO_EMPRESA   String?   @db.NVarChar(255)
  MUNICIPIO_EMPRESA      String?   @db.NVarChar(255)
  PUESTO                 String?   @db.NVarChar(50)
  ID_AVAL                String?   @db.NVarChar(255)
  NOMBRE_AVAL            String?   @db.NVarChar(255)
  FECHA_NACIMIENTO_AVAL  DateTime? @db.DateTime
  DIRECCION_AVAL         String?   @db.NVarChar(255)
  COLONIA_AVAL           String?   @db.NVarChar(255)
  ZONA_AVAL              Int?
  DEPARTAMENTO_AVAL      String?   @db.NVarChar(255)
  MUNICIPIO_AVAL         String?   @db.NVarChar(255)
  TELEFONO_CASA_AVAL     String?   @db.NVarChar(50)
  TELEFONO_LABORAL1_AVAL String?   @db.NVarChar(50)
  TELEFONO_LABORAL2_AVAL String?   @db.NVarChar(50)
  TELEFONO_OTRO_AVAL     String?   @db.NVarChar(50)
  TELEFONO_OTRO2_AVAL    String?   @db.NVarChar(50)
  TELEFONO_FAX_AVAL      String?   @db.NVarChar(50)
  REFERENCIA_1_AVAL      String?   @db.NVarChar(255)
  TEL_REFERENCIA_1_AVAL  String?   @db.NVarChar(50)
  REFERENCIA_2_AVAL      String?   @db.NVarChar(255)
  TEL_REFERENCIA_2_AVAL  String?   @db.NVarChar(50)
  ID_EMPRESA_AVAL        String?   @db.NVarChar(255)
  IDTIPO_EMPRESA_AVAL    String?   @db.NVarChar(255)
  EMPRESA_AVAL           String?   @db.NVarChar(255)
  DIRECCION_EMPRESA_AVAL String?   @db.NVarChar(255)
  COLONIA_EMPRESA_AVAL   String?   @db.NVarChar(255)
  ZONA_EMPRESA_AVAL      Int?
  DEPARTAMENTO_EMP_AVAL  String?   @db.NVarChar(100)
  MUNICIPIO_EMP_AVAL     String?   @db.NVarChar(100)
  REGION                 String?   @db.NVarChar(100)
  AREA                   String?   @db.NVarChar(100)
  AGENCIA_COBRO          String?   @db.NVarChar(100)
  NOPRESTAMO             String    @db.NVarChar(50)
  SALDO_CAPITAL          Float     @db.Money
  INTERES                Float?    @db.Money
  GASTOSDECOBRANZA       Float?    @db.Money
  SALDO_ACTUAL           Float?    @db.Money
  MENSUALIDAD            Float?    @db.Money
  TASA                   Int?
  FECHAINICIOPRESTAMO    DateTime? @db.DateTime
  FECHACASTIGADO         DateTime? @db.DateTime
  MONTOULTIMOPAGO        Float?    @db.Money
  FECHAULTIMOPAGO        DateTime? @db.DateTime
  CUOTASPAGADAS          Int?
  CUOTASATRASADAS        Int?
  CUOTASPAGOSMORA        Int?
  CUOTASPACTADAS         Int?
  FECHACANCELACION       DateTime? @db.DateTime
  FECHAPROXIMOPAGO       DateTime? @db.DateTime
  COMENTARIOSOLICITUD    String?
  DIASDEATRASO           Int?
  JUICIO                 String?   @db.NVarChar(60)
  IDCOBRADOR             Int?
  FECHAOPERACION         DateTime? @db.DateTime
  FECHA_ACTUALIZACION    DateTime? @db.DateTime

  @@ignore
}

model IC_Clasificacion {
  idEmpresa            Int           @db.SmallInt
  idClasificacion      Int
  descripcion          String?       @db.VarChar(100)
  DiaInicio            Int?
  DiaFin               Int?
  Abreviacion          String?       @db.VarChar(50)
  distribuir           Boolean?
  metaGestion          BigInt?
  tiempoGestion        Decimal?      @db.Decimal(18, 0)
  SubTipoClasificacion Int?
  PorcentajeMeta       Decimal?      @db.Decimal(18, 5)
  IC_Cobrador          IC_Cobrador[]

  @@id([idClasificacion, idEmpresa], map: "PK_co_Clasificacion")
}

model IC_ClasificacionCartera {
  idEmpresa              Int                  @db.SmallInt
  idClasificacionCartera Int                  @db.SmallInt
  Descripcion            String?              @db.VarChar(50)
  Estado                 Boolean?
  IC_Empresa             IC_Empresa           @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_ClasificacionCartera_IC_Empresa")
  IC_Cuenta              IC_Cuenta[]
  ic_rendimiento_bam     ic_rendimiento_bam[]

  @@id([idEmpresa, idClasificacionCartera], map: "PK_IC_ClasificacionCartera")
}

model IC_ClasificacionCuenta {
  IdClasificacionCuenta Int         @id(map: "PK_ClasificacionCartera") @db.SmallInt
  Descripcion           String      @db.NVarChar(200)
  Estado                Boolean?
  IC_Cuenta             IC_Cuenta[]
}

model IC_Cliente {
  idEmpresa                   Int                           @db.SmallInt
  idCliente                   BigInt                        @default(autoincrement())
  codTipoCliente              String?                       @db.Char(2)
  identificacionCliente       String?                       @db.VarChar(50)
  tipoIdentificacion          String?                       @db.Char(2)
  identificacionSeguroSocial  String?                       @db.Char(40)
  primerNombre                String?                       @db.Char(150)
  segundoNombre               String?                       @db.Char(50)
  primerApellido              String?                       @db.Char(50)
  segundoApellido             String?                       @db.Char(50)
  nombreCompleto              String?                       @db.VarChar(400)
  lugarTrabajo                String?                       @db.VarChar(200)
  fechaNacimiento             DateTime?                     @db.DateTime
  nacionalidad                String?                       @db.Char(25)
  puestoCargo                 String?                       @db.VarChar(100)
  nit                         String?                       @db.VarChar(25)
  ultimaActualizacion         DateTime?                     @db.DateTime
  estadoCivil                 String?                       @db.Char(2)
  sexo                        String?                       @db.Char(2)
  idClienteEmpresa            String?                       @db.VarChar(100)
  Telcasa                     String?                       @db.VarChar(50)
  TelTrabajo                  String?                       @db.VarChar(50)
  Celular                     String?                       @db.VarChar(50)
  TelUno                      String?                       @db.VarChar(50)
  TelDos                      String?                       @db.VarChar(50)
  TelTres                     String?                       @db.VarChar(50)
  IDESTADOCLIENTE             String?                       @db.VarChar(100)
  idProfesion                 Int?                          @default(1, map: "DF_IC_Cliente_idProfesion")
  codigopaisEmision           Int?
  codigodepEmision            Int?
  codigomuniEmision           Int?
  email                       String?                       @db.VarChar(100)
  sn_nombre_verificado        Boolean?
  IC_EstadoCliente            IC_EstadoCliente?             @relation(fields: [IDESTADOCLIENTE], references: [idEstadoCliente], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Cliente_IC_EstadoCliente")
  IC_Profesion                IC_Profesion?                 @relation(fields: [idProfesion], references: [idProfesion], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Cliente_IC_Profesion")
  cdDireccionHistoria         cdDireccionHistoria[]
  IC_Conyuge                  IC_Conyuge?
  IC_Cuenta                   IC_Cuenta[]
  Ic_HistorialTrabajosCliente Ic_HistorialTrabajosCliente[]
  IC_Investigacion_Expediente IC_Investigacion_Expediente[] @ignore
  IC_Referencia               IC_Referencia[]

  @@id([idCliente, idEmpresa], map: "PK_IC_Cliente")
  @@index([idEmpresa, idClienteEmpresa], map: "idx_ic_cliente_ece")
  @@index([nombreCompleto, idEmpresa], map: "idx_ic_cliente_nombre")
  @@index([nombreCompleto], map: "idx_ic_cliente_nombrecompleto")
}

model IC_Cobrador {
  idCobrador                 BigInt                       @id(map: "PK_co_Gestor")
  idEmpresa                  Int?                         @db.SmallInt
  idClasificacion            Int?
  Nombre                     String?                      @db.VarChar(100)
  Usuario                    String?                      @db.VarChar(50)
  estado                     Boolean?
  CoNombre                   String?                      @db.Char(50)
  CoApellido                 String?                      @db.Char(50)
  idPerfil                   BigInt?
  Password                   Bytes?                       @db.Binary(50)
  TipoCobrador               Int?
  idAgencia                  Int                          @default(1, map: "DF_IC_Cobrador_idAgencia") @db.SmallInt
  superusuario               Boolean?
  usuarioBloqueado           Boolean?
  NoIntentoIncorrectos       Int?                         @db.SmallInt
  FechaCambioPass            DateTime?                    @db.DateTime
  PassAnterior1              Bytes?                       @db.Binary(50)
  PassAnterior2              Bytes?                       @db.Binary(50)
  PassAnterior3              Bytes?                       @db.Binary(50)
  FechaBloqueado             DateTime?                    @db.DateTime
  UsuarioReseteo             String?                      @db.VarChar(50)
  FechaReseteo               DateTime?                    @db.DateTime
  email                      String?                      @db.VarChar(50)
  extension                  String?                      @db.VarChar(50)
  VersionSic                 String?                      @db.VarChar(25)
  NombreCompleto             String?                      @db.VarChar(150)
  IC_Tipocobrador            IC_Tipocobrador?             @relation(fields: [TipoCobrador], references: [idTipocobrador], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Cobrador_IC_Tipocobrador")
  IC_Clasificacion           IC_Clasificacion?            @relation(fields: [idClasificacion, idEmpresa], references: [idClasificacion, idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Cobrador_IC_Clasificacion")
  IC_PERFIL                  IC_PERFIL?                   @relation(fields: [idPerfil], references: [idPerfil], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Cobrador_IC_PERFIL")
  cdCobradorxRuta            cdCobradorxRuta[]
  IC_ActividadActual         IC_ActividadActual?
  IC_CobradorXConfiguracion  IC_CobradorXConfiguracion[]
  IC_ConsultaExpediente      IC_ConsultaExpediente[]
  ic_DistribucionJuridico    ic_DistribucionJuridico[]    @ignore
  IC_Embargo                 IC_Embargo[]
  ic_EmpresaXCobrador        ic_EmpresaXCobrador[]
  Ic_EstatusMedida           Ic_EstatusMedida[]
  Ic_HistorialEstatusMedidas Ic_HistorialEstatusMedidas[]
  IC_HistoricoNotaPermanente IC_HistoricoNotaPermanente[]
  IC_HistoricoRazonMora      IC_HistoricoRazonMora[]
  Ic_InformacionNotificacion Ic_InformacionNotificacion[]
  Ic_InformacionTransaccion  Ic_InformacionTransaccion[]
  Ic_Juicio                  Ic_Juicio[]
  IC_Login                   IC_Login[]
  Ic_MedidasProceso          Ic_MedidasProceso[]
  ic_print_history           ic_print_history[]
  IC_PromesaPago             IC_PromesaPago[]
  IC_Reprogramacion          IC_Reprogramacion[]
  IC_visita                  IC_visita[]
  IC_VUELTACARTERA           IC_VUELTACARTERA[]
  PU_Perfil                  PU_Perfil[]
  reporte_bitacora           reporte_bitacora[]
  tuser_role                 tuser_role[]

  @@index([Usuario], map: "IX_IC_Cobrador")
  @@index([email], map: "idx_ic_cobrador_email")
}

model ic_cobrador_email {
  id_cobrador BigInt  @id(map: "PK__ic_cobra__950E6D8BF7082F88")
  txt_email   String? @db.VarChar(150)
}

model IC_CobradorXConfiguracion {
  idCobradorXConfiguracion     Int
  idEmpresa                    Int                           @db.SmallInt
  idTipodistribucion           Int
  idConfiguracionDistribucion  BigInt?
  idCobrador                   BigInt
  CobradorActivo               Int?
  usuario                      String?                       @db.VarChar(50)
  IC_Cobrador                  IC_Cobrador                   @relation(fields: [idCobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_IC_CobradorXConfiguracion_IC_Cobrador")
  IC_ConfiguracionDistribucion IC_ConfiguracionDistribucion? @relation(fields: [idEmpresa, idTipodistribucion, idConfiguracionDistribucion], references: [idEmpresa, idTipoDistribucion, idConfiguracionDistribucion], onUpdate: NoAction, map: "FK_IC_CobradorXConfiguracion_IC_ConfiguracionDistribucion")
  IC_DistribucionCobros        IC_DistribucionCobros[]

  @@id([idCobradorXConfiguracion, idEmpresa], map: "PK_IC_CobradorXConfiguracion")
  @@index([idEmpresa, idConfiguracionDistribucion, idCobrador], map: "idx_cobradorxconfiguracion_ecc")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_CobradorXConfiguracionHistoria {
  idCobradorXConfiguracion    Int?
  idEmpresa                   Int?      @db.SmallInt
  idTipodistribucion          Int?
  idConfiguracionDistribucion BigInt?
  idCobrador                  BigInt?
  CobradorActivo              Int?
  usuario                     String?   @db.VarChar(50)
  host                        String?   @db.VarChar(50)
  App                         String?   @db.NVarChar(500)
  fechaMovimiento             DateTime? @db.DateTime
  tipoMovimiento              String?   @db.VarChar(10)

  @@ignore
}

model IC_Codeudor {
  idEmpresa                  Int       @db.SmallInt
  noPrestamo                 String    @db.VarChar(50)
  idMoneda                   Int       @db.SmallInt
  idCodeudor                 String    @db.VarChar(50)
  identificacionCliente      String?   @db.Char(32)
  tipoIdentificacion         String?   @db.Char(2)
  identificacionSeguroSocial String?   @db.Char(15)
  primerNombre               String?   @db.Char(250)
  segundoNombre              String?   @db.Char(50)
  primerApellido             String?   @db.Char(50)
  segundoApellido            String?   @db.Char(50)
  lugarTrabajo               String?   @db.VarChar(255)
  direccionPrincipal         String?   @db.VarChar(300)
  direccionTrabajo           String?   @db.VarChar(300)
  fechaNacimiento            DateTime? @db.DateTime
  nacionalidad               String?   @db.Char(25)
  puestoCargo                String?   @db.VarChar(100)
  nit                        String?   @db.VarChar(25)
  ultimaActualizacion        DateTime? @db.DateTime
  estadoCivil                String?   @db.Char(2)
  sexo                       String?   @db.Char(2)
  depto                      Int?      @db.SmallInt
  municipio                  Int?      @db.SmallInt
  DireccionActualDom         String?   @db.VarChar(250)
  ZonaDom                    String?   @db.Char(10)
  DeptoDom                   String?   @db.Char(3)
  MuniDom                    String?   @db.Char(3)
  ColoniaDom                 String?   @db.VarChar(100)
  UbicacionDom               String?   @db.VarChar(100)
  DireccionLaboral           String?   @db.VarChar(250)
  ZonaLab                    String?   @db.Char(10)
  DeptoLab                   String?   @db.Char(3)
  MuniLab                    String?   @db.Char(3)
  ColoniaLab                 String?   @db.VarChar(100)
  UbicacionLab               String?   @db.VarChar(100)
  Telcasa                    String?   @db.VarChar(50)
  TelTrabajo                 String?   @db.VarChar(50)
  Celular                    String?   @db.VarChar(50)
  TelUno                     String?   @db.VarChar(50)
  TelDos                     String?   @db.VarChar(50)
  TelTres                    String?   @db.VarChar(50)
  IC_Cuenta                  IC_Cuenta @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_Codeudor_IC_Cuenta")

  @@id([idEmpresa, noPrestamo, idMoneda, idCodeudor], map: "PK_IC_Codeudor")
}

model ic_codigo_homologado {
  id_resultado                    Int?                             @db.SmallInt
  id_detalle                      Int?                             @db.SmallInt
  id_homologado                   Int?
  descripcion                     String?                          @db.VarChar(500)
  estado                          Boolean
  idEmpresa                       Int?
  denominacion                    Int?
  id_resultado_accion             Int?                             @db.SmallInt
  IdCodigoHomologado              BigInt                           @id(map: "PK__ic_codig__4859E47F8121A7A0")
  IC_ResultadoAccionDetalle       IC_ResultadoAccionDetalle?       @relation(fields: [id_detalle], references: [idResultadoAccionDetalle], onDelete: NoAction, onUpdate: NoAction, map: "fk_ic_codigo_homologado__IC_ResultadoAccionDetalle")
  IC_ResultadoAccionClasificacion IC_ResultadoAccionClasificacion? @relation(fields: [id_resultado], references: [IdResultadoAccionClasificacion], onDelete: NoAction, onUpdate: NoAction, map: "fk_ic_codigo_homologado__IC_ResultadoAccionClasificacion")
}

model ic_codigo_homologado_ctp {
  CodigoCliente             String                     @id(map: "PK__ic_codig__E0DD7E71FB89242C") @db.VarChar(20)
  id_detalle                Int?                       @db.SmallInt
  id_Empresa                Int?                       @db.SmallInt
  id_situacion              Int?
  estado                    Boolean
  IC_ResultadoAccionDetalle IC_ResultadoAccionDetalle? @relation(fields: [id_detalle], references: [idResultadoAccionDetalle], onDelete: NoAction, onUpdate: NoAction, map: "fk_ic_codigo_homologado_ctp_IC_ResultadoAccionDetalle")
  IC_SituacionCobro         IC_SituacionCobro?         @relation(fields: [id_situacion, id_Empresa], references: [idSituacionCobro, idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_ic_codigo_homologado_ctp_ic_SituacionCobro")
}

model IC_CodigoPais {
  IdCodigoPais               BigInt                       @id(map: "PK_CodigoPais") @default(autoincrement())
  NombrePais                 String                       @db.NVarChar(100)
  CodigoPais                 Int
  IC_TelefonosEmpresaCliente IC_TelefonosEmpresaCliente[]
}

model IC_Colonia {
  Idcolonia            Int                    @id(map: "PK_IC_Colonia")
  IdZona               Int
  NombreColonia        String?                @db.VarChar(1000)
  FechaRegistro        DateTime?              @db.DateTime
  UsuarioRegistro      String?                @db.VarChar(100)
  FechaBaja            DateTime?              @db.DateTime
  UsuarioBaja          String?                @db.VarChar(100)
  FechaModificacion    DateTime?              @db.DateTime
  UsuarioModificacion  String?                @db.VarChar(100)
  Estado               Boolean?
  IC_Zona              IC_Zona                @relation(fields: [IdZona], references: [IdZona], onUpdate: NoAction, map: "FK_IC_Colonia_IC_Zona")
  IC_DireccionCompania IC_DireccionCompania[]

  @@index([Idcolonia, IdZona], map: "idx_IC_Colonia")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_ComboPermiteGestion {
  codStatus             String?  @db.VarChar(50)
  IdSituacionExpediente Int?     @db.SmallInt
  CG_PuedeGestionar     Boolean?

  @@ignore
}

model ic_ComentarioBoleta {
  idcomentarioboleta Int              @id(map: "PK__ic_Comen__32DCCB9D1296BE79") @default(autoincrement())
  Descripcion        String?          @db.VarChar(50)
  Estatus            Boolean?
  Ic_Boleta_Pago     Ic_Boleta_Pago[]
}

model IC_ComentarioSolicitud {
  idEmpresa     Int       @db.SmallInt
  idMoneda      Int       @db.SmallInt
  noPrestamo    String    @db.VarChar(50)
  noComentario  Int
  Comentario    String?   @db.VarChar(200)
  fechaRegistro DateTime? @db.DateTime
  IC_Cuenta     IC_Cuenta @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_ComentarioSolicitud_IC_Cuenta")

  @@id([idEmpresa, idMoneda, noPrestamo, noComentario], map: "PK_IC_ComentarioSolicitud")
}

model IC_Compania {
  IdCompania           Int                    @id(map: "PK_IC_Compania")
  NombreCompania       String?                @db.VarChar(1000)
  NitCompania          String?                @db.VarChar(50)
  IdPatrono            BigInt?
  RazonSocial          String?                @db.VarChar(1000)
  FechaRegistro        DateTime?              @db.DateTime
  UsuarioRegistro      String?                @db.VarChar(100)
  FechaBaja            DateTime?              @db.DateTime
  UsuarioBaja          String?                @db.VarChar(100)
  FechaModificacion    DateTime?              @db.DateTime
  UsuarioModificacion  String?                @db.VarChar(100)
  Estado               Boolean?
  IC_DireccionCompania IC_DireccionCompania[]
  IC_EmailCompania     IC_EmailCompania[]
  IC_TelefonoCompania  IC_TelefonoCompania[]
}

model IC_ConfiguracionDistribucion {
  idEmpresa                   Int                          @db.SmallInt
  idTipoDistribucion          Int
  idConfiguracionDistribucion BigInt
  nombreConfiguracion         String?                      @db.VarChar(100)
  usuario                     String?                      @db.VarChar(30)
  FechaInicio                 DateTime?                    @db.DateTime
  FechaFin                    DateTime?                    @db.DateTime
  DistribucionEditada         Int?
  QueryDistribucion           String?                      @db.VarChar(3900)
  OrderDistribucion           String?                      @db.VarChar(3900)
  IC_Empresa                  IC_Empresa                   @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_ConfiguracionDistribucion_IC_Empresa")
  IC_CobradorXConfiguracion   IC_CobradorXConfiguracion[]
  ic_ParametroXConfiguracion  ic_ParametroXConfiguracion[]
  IC_VUELTACARTERA            IC_VUELTACARTERA[]

  @@id([idEmpresa, idTipoDistribucion, idConfiguracionDistribucion], map: "PK_IC_ConfiguracionDistribucion")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_ConfiguracionDistribucionHistoria {
  idCambio                    BigInt    @default(autoincrement())
  idEmpresa                   Int?      @db.SmallInt
  idTipoDistribucion          Int?
  idConfiguracionDistribucion BigInt?
  nombreConfiguracion         String?   @db.VarChar(100)
  Usuario                     String?   @db.VarChar(30)
  FechaInicio                 DateTime? @db.DateTime
  FechaFin                    DateTime? @db.DateTime
  DistribucionEditada         Int?
  QueryDistribucion           String?   @db.VarChar(3900)
  OrdenDistribucion           String?   @db.VarChar(3900)
  host                        String?   @db.VarChar(50)
  App                         String?   @db.NVarChar(500)
  FechaTran                   DateTime? @db.DateTime
  TipoTran                    String?   @db.VarChar(30)

  @@ignore
}

model IC_ConsultaExpediente {
  IdConsulta                   BigInt                         @id(map: "PK_ConsultaExpediente") @default(autoincrement())
  IdEmpresa                    Int                            @db.SmallInt
  IdMoneda                     Int                            @db.SmallInt
  NoPrestamo                   String                         @db.VarChar(50)
  HoraInicioExpediente         DateTime?                      @db.DateTime
  HoraFinExpediente            DateTime?                      @db.DateTime
  FechaOperacion               DateTime?                      @db.DateTime
  IdCobrador                   BigInt
  IC_Cobrador                  IC_Cobrador                    @relation(fields: [IdCobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_ConsultaExpedienteCobrador")
  IC_Empresa                   IC_Empresa                     @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_ConsultaExpedienteEmpresa")
  ic_Moneda                    ic_Moneda                      @relation(fields: [IdMoneda], references: [idMoneda], onUpdate: NoAction, map: "FK_ConsultaExpedienteMoneda")
  IC_ConsultaExpedienteDetalle IC_ConsultaExpedienteDetalle[]
  IC_Gestion                   IC_Gestion[]
}

model IC_ConsultaExpedienteDetalle {
  IdConsultaExpedienteDetalle BigInt                @id(map: "PK_ConsultaExpedienteDetalle") @default(autoincrement())
  IdIntento                   BigInt
  IdConsulta                  BigInt
  FechaOperacion              DateTime?             @db.DateTime
  IC_ConsultaExpediente       IC_ConsultaExpediente @relation(fields: [IdConsulta], references: [IdConsulta], onUpdate: NoAction, map: "FK_ConsultaExpedienteDetallef")
}

model IC_Convenio {
  idEmpresa            Int              @default(0, map: "DF_IC_Convenio_idEmpresa") @db.SmallInt
  idMoneda             Int              @default(0, map: "DF_IC_Convenio_idMoneda") @db.SmallInt
  noPrestamo           String           @default("", map: "DF_IC_Convenio_noPrestamo") @db.VarChar(50)
  idConvenio           Int              @default(0, map: "DF_IC_Convenio_idConvenio")
  idPaso               Int              @default(0, map: "DF_IC_Convenio_idPaso") @db.SmallInt
  DeduccionMora        Float            @default(0, map: "DF_IC_Convenio_DeduccionMora") @db.Money
  DeduccionInteres     Float            @default(0, map: "DF_IC_Convenio_DeduccionInteres") @db.Money
  DeduccionCapital     Float            @default(0, map: "DF_IC_Convenio_DeduccionCapital") @db.Money
  noCuotas             Int              @default(1, map: "DF_IC_Convenio_noCuotas") @db.SmallInt
  Vigente              Boolean          @default(true, map: "DF_IC_Convenio_Vigente")
  usuarioVigente       String           @default("", map: "DF_IC_Convenio_usuarioVigente") @db.VarChar(50)
  FechaVigencia        DateTime         @default(dbgenerated("0"), map: "DF_IC_Convenio_FechaVigencia") @db.DateTime
  ComentarioVigencia   String           @default("", map: "DF_IC_Convenio_ComentarioVigencia") @db.NText
  ComentarioAprobacion String           @default("", map: "DF_IC_Convenio_ComentarioAprobacion") @db.NText
  FechaPrimeraCuota    DateTime?        @default(dbgenerated("0"), map: "DF_IC_Convenio_FechaPrimeraCuota") @db.DateTime
  PrimeraCuota         Float?           @default(0, map: "DF_IC_Convenio_PrimeraCuota") @db.Money
  UsuarioModifico      String?          @default("", map: "DF_IC_Convenio_UsuarioModifico") @db.VarChar(50)
  FechaIngreso         DateTime?        @db.DateTime
  UltimaModificacion   DateTime?        @db.DateTime
  Excepcion            Boolean?
  PorcentajeAplicado   Decimal?         @db.Decimal(4, 4)
  Descuento            Float?           @db.Money
  SaldoConDescuento    Float?           @db.Money
  TotalAPagar          Float?           @db.Money
  TotalSinCuota        Float?           @db.Money
  FormaCalculo         Int?
  FechaCuotaPago       DateTime?        @db.Date
  DeudorPagaHonorarios Boolean?
  CostasProcesales     Float?           @db.Money
  Demanda              String?          @db.NVarChar(50)
  IC_Cuenta            IC_Cuenta        @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_Convenio_IC_Cuenta")
  IC_PlanPago          IC_PlanPago[]
  IC_PromesaPago       IC_PromesaPago[]

  @@id([idEmpresa, idMoneda, noPrestamo, idConvenio], map: "PK_IC_Convenio")
}

model IC_Conyuge {
  idEmpresa              Int        @db.SmallInt
  idCliente              BigInt
  identificacionConyugue String     @db.Char(32)
  nombreConyuge          String?    @db.VarChar(500)
  puesto                 String?    @db.VarChar(100)
  telefonoOficina        String?    @db.VarChar(20)
  direccionTrabajo       String?    @db.VarChar(300)
  IC_Cliente             IC_Cliente @relation(fields: [idCliente, idEmpresa], references: [idCliente, idEmpresa], onUpdate: NoAction, map: "FK_IC_Conyuge_IC_Cliente")

  @@id([idEmpresa, idCliente], map: "PK_IC_Conyuge")
}

model ic_CostasJudicialesBoletas {
  idCostas         Int     @id(map: "PK__ic_Costa__36A1870E94539A28") @default(autoincrement())
  idEmpresa        Int
  idMoneda         Int
  noPrestamo       String  @db.VarChar(50)
  noBoleta         String? @db.VarChar(50)
  MontoBoleta      Float?  @db.Money
  Desestimiento    Float?  @db.Money
  CostasJudiciales Float?  @db.Money
  Finiquito        Float?  @db.Money
}

model IC_Cuenta {
  idEmpresa                                                      Int                              @db.SmallInt
  idMoneda                                                       Int                              @db.SmallInt
  noPrestamo                                                     String                           @db.VarChar(50)
  idCliente                                                      BigInt
  codEstatus                                                     String?                          @db.VarChar(50)
  plazo                                                          Int?
  tasaIinteres                                                   Float?
  montoOriginal                                                  Float?                           @db.Money
  capacidadEndeudamiento                                         Float?
  fechaInicioPrestamo                                            DateTime?                        @db.DateTime
  fechaVencimiento                                               DateTime?                        @db.DateTime
  montoAdeudado                                                  Float?                           @db.Money
  mensualidad                                                    Float?                           @db.Money
  montoVencido                                                   Float?                           @db.Money
  montoVencidoCapital                                            Float?                           @db.Money
  montoVencidoInteres                                            Float?                           @db.Money
  montoVencidoMora                                               Float?                           @db.Money
  diasDeAtraso                                                   Int?
  fechaUltimoPago                                                DateTime?                        @db.DateTime
  montoUltimoPago                                                Float?                           @db.Money
  ultimoPagoCapital                                              Float?                           @db.Money
  ultimoPagoInteres                                              Float?                           @db.Money
  ultimoPagoMora                                                 Float?                           @db.Money
  cicloCorriente                                                 Float?                           @db.Money
  fechaProximoPago                                               DateTime?                        @db.DateTime
  fechaCuotaVencida                                              DateTime?                        @db.DateTime
  saldoActual                                                    Float?                           @db.Money
  saldoCapital                                                   Float?                           @db.Money
  saldoInteres                                                   Float?                           @db.Money
  saldoMora                                                      Float?                           @db.Money
  atrasoPromedio                                                 Int?
  atrasoMaximo                                                   Int?
  cuotasPagadas                                                  Int?
  cuotasAtrasadas                                                Int?
  cuotasPagosMora                                                Int?
  idEmpresaAdicional                                             BigInt?
  tipoProducto                                                   String                           @db.VarChar(50)
  cuotasPactadas                                                 Int?
  codigoAgencia                                                  String?                          @db.VarChar(50)
  diasAtrasoInteres                                              Int?
  revolvente                                                     String?                          @db.VarChar(50)
  diasAtrasoCapital                                              Int?
  comentarioSolicitud                                            String?                          @db.VarChar(1000)
  fechaActualizacion                                             DateTime?                        @db.DateTime
  fechaCancelacion                                               DateTime?                        @db.DateTime
  comentarioJuridico                                             String?                          @db.VarChar(1000)
  fechaJuridico                                                  DateTime?                        @db.DateTime
  usuarioRegistro                                                String?                          @db.VarChar(50)
  host                                                           String?                          @db.VarChar(50)
  GASTOSDECOBRANZA                                               Float?                           @db.Money
  renegociacion                                                  Int?
  MONTOVENCIDOAUX                                                Float?                           @db.Money
  IDGESTIONULTIMA                                                BigInt?
  FechaCastigo                                                   DateTime?                        @db.DateTime
  CapitalCastigado                                               Float?                           @db.Money
  MoraCastigado                                                  Float?                           @db.Money
  InteresCastigado                                               Float?                           @db.Money
  idClasificacionCartera                                         Int?                             @db.SmallInt
  MontoPagare                                                    Float?                           @db.Money
  CAPITALCONTABLE                                                Float?                           @db.Money
  ComentarioCuenta                                               String?                          @db.VarChar(1000)
  ComentarioCuenta2                                              String?                          @db.VarChar(50)
  ComentarioCuenta3                                              String?                          @db.VarChar(100)
  InteresAux                                                     Float?                           @db.Money
  ID_Primera_Gestion                                             BigInt?
  IdTipoGestion                                                  Int?                             @db.SmallInt
  IdProductoOrigen                                               Int?
  IdMorosidad                                                    Int?                             @db.SmallInt
  IdClasificacionCuenta                                          Int?                             @db.SmallInt
  IdSituacionExpediente                                          Int?                             @db.SmallInt
  IC_Gestion_IC_Cuenta_IDGESTIONULTIMAToIC_Gestion               IC_Gestion?                      @relation("IC_Cuenta_IDGESTIONULTIMAToIC_Gestion", fields: [IDGESTIONULTIMA], references: [idGestion], onDelete: NoAction, onUpdate: NoAction, map: "FK__IC_Cuenta__IDGES__164F3FA9")
  IC_Gestion_IC_Cuenta_ID_Primera_GestionToIC_Gestion            IC_Gestion?                      @relation("IC_Cuenta_ID_Primera_GestionToIC_Gestion", fields: [ID_Primera_Gestion], references: [idGestion], onDelete: NoAction, onUpdate: NoAction, map: "FK__IC_Cuenta__ID_Ul__1466F737")
  IC_ClasificacionCuenta                                         IC_ClasificacionCuenta?          @relation(fields: [IdClasificacionCuenta], references: [IdClasificacionCuenta], onDelete: NoAction, onUpdate: NoAction, map: "FK_ClasificacionCUENTA")
  IC_Morosidad                                                   IC_Morosidad?                    @relation(fields: [IdMorosidad, idEmpresa], references: [IdMorosidad, IdEmpresa], onUpdate: NoAction, map: "FK_MOROSIDADCUENTA")
  IC_ProductoOrigen                                              IC_ProductoOrigen?               @relation(fields: [IdProductoOrigen], references: [IdProductoOrigen], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductoOrigenCuenta")
  IC_TipoGestion                                                 IC_TipoGestion?                  @relation(fields: [IdTipoGestion], references: [IdTipoGestion], onDelete: NoAction, onUpdate: NoAction, map: "FK_TIPOGESTIONCUENTA")
  IC_StatusCompromiso                                            IC_StatusCompromiso?             @relation(fields: [codEstatus], references: [codStatus], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Cuenta_IC_StatusCompromiso")
  IC_Cliente                                                     IC_Cliente                       @relation(fields: [idCliente, idEmpresa], references: [idCliente, idEmpresa], onUpdate: NoAction, map: "FK_IC_Cuenta_IC_Cliente")
  IC_Empresa                                                     IC_Empresa                       @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "fk_ic_cuenta_empresa")
  IC_ClasificacionCartera                                        IC_ClasificacionCartera?         @relation(fields: [idEmpresa, idClasificacionCartera], references: [idEmpresa, idClasificacionCartera], onUpdate: NoAction, map: "FK_IC_Cuenta_IC_ClasificacionCartera")
  ic_Moneda                                                      ic_Moneda                        @relation(fields: [idMoneda], references: [idMoneda], onUpdate: NoAction, map: "FK_IC_Cuenta_ic_Moneda")
  IC_Producto                                                    IC_Producto                      @relation(fields: [tipoProducto, idEmpresa], references: [idProducto, idEmpresa], onUpdate: NoAction, map: "FK_IC_Cuenta_IC_Producto")
  ic_account_status_history                                      ic_account_status_history[]
  IC_ActividadActual                                             IC_ActividadActual[]
  Ic_Boleta_Pago                                                 Ic_Boleta_Pago[]
  IC_CapitalAsignado                                             IC_CapitalAsignado[]
  IC_Codeudor                                                    IC_Codeudor[]
  IC_ComentarioSolicitud                                         IC_ComentarioSolicitud[]
  IC_Convenio                                                    IC_Convenio[]
  IC_CuotaAtrasada                                               IC_CuotaAtrasada[]
  IC_DistribucionCobros                                          IC_DistribucionCobros[]
  IC_Finiquito                                                   IC_Finiquito[]
  IC_Gestion_IC_CuentaToIC_Gestion_idEmpresa_idMoneda_noPrestamo IC_Gestion[]                     @relation("IC_CuentaToIC_Gestion_idEmpresa_idMoneda_noPrestamo")
  IC_HistoricoNotaPermanente                                     IC_HistoricoNotaPermanente[]
  IC_HistoricoRazonMora                                          IC_HistoricoRazonMora[]
  IC_Investigacion_Expediente                                    IC_Investigacion_Expediente[]    @ignore
  Ic_Juicio                                                      Ic_Juicio[]
  IC_Movimiento                                                  IC_Movimiento[]
  IC_Pago                                                        IC_Pago[]
  IC_PagoDetalle                                                 IC_PagoDetalle[]
  IC_PromesaPago                                                 IC_PromesaPago[]
  IC_Reprogramacion                                              IC_Reprogramacion[]
  IC_SituacionExpedienteHistoria                                 IC_SituacionExpedienteHistoria[]

  @@id([idEmpresa, idMoneda, noPrestamo], map: "PK_IC_Cuenta")
  @@index([idCliente, idEmpresa, IdClasificacionCuenta], map: "IDX_IC_CUENTA")
  @@index([noPrestamo, idEmpresa, idMoneda], map: "IX_IC_Cuenta_Moneda")
  @@index([idEmpresa], map: "IX_IC_Cuenta_idEmpresa")
  @@index([idEmpresa, noPrestamo], map: "IX_IC_Cuenta_noprestamo")
  @@index([ID_Primera_Gestion], map: "idx_IdPrimeraGestion")
  @@index([IDGESTIONULTIMA], map: "idx_IdUltimaGestion")
  @@index([idCliente, montoVencido, renegociacion, saldoCapital, idEmpresa, codEstatus, diasDeAtraso, MONTOVENCIDOAUX], map: "idx_ic_cuenta_distribucion")
  @@index([idEmpresa, idCliente], map: "idx_ic_cuente_ec")
}

model IC_CuentaHistoriaAsignacion {
  AnioProcess            Int
  MesProcess             Int
  DiaProcess             Int
  idEmpresa              Int       @db.SmallInt
  idMoneda               Int       @db.SmallInt
  noPrestamo             String    @db.VarChar(50)
  idCliente              BigInt
  codEstatus             String?   @db.VarChar(50)
  plazo                  Int?
  tasaIinteres           Float?
  montoOriginal          Float?    @db.Money
  capacidadEndeudamiento Float?
  fechaInicioPrestamo    DateTime? @db.DateTime
  fechaVencimiento       DateTime? @db.DateTime
  montoAdeudado          Float?    @db.Money
  mensualidad            Float?    @db.Money
  montoVencido           Float?    @db.Money
  montoVencidoCapital    Float?    @db.Money
  montoVencidoInteres    Float?    @db.Money
  montoVencidoMora       Float?    @db.Money
  diasDeAtraso           Int?
  fechaUltimoPago        DateTime? @db.DateTime
  montoUltimoPago        Float?    @db.Money
  ultimoPagoCapital      Float?    @db.Money
  ultimoPagoInteres      Float?    @db.Money
  ultimoPagoMora         Float?    @db.Money
  cicloCorriente         Float?    @db.Money
  fechaProximoPago       DateTime? @db.DateTime
  fechaCuotaVencida      DateTime? @db.DateTime
  saldoActual            Float?    @db.Money
  saldoCapital           Float?    @db.Money
  saldoInteres           Float?    @db.Money
  saldoMora              Float?    @db.Money
  atrasoPromedio         Int?
  atrasoMaximo           Int?
  cuotasPagadas          Int?
  cuotasAtrasadas        Int?
  cuotasPagosMora        Int?
  idEmpresaAdicional     BigInt?
  tipoProducto           String    @db.VarChar(50)
  cuotasPactadas         Int?
  codigoAgencia          String?   @db.VarChar(50)
  diasAtrasoInteres      Int?
  revolvente             String?   @db.VarChar(50)
  diasAtrasoCapital      Int?
  comentarioSolicitud    String?   @db.VarChar(1000)
  fechaActualizacion     DateTime? @db.DateTime
  fechaCancelacion       DateTime? @db.DateTime
  comentarioJuridico     String?   @db.VarChar(1000)
  fechaJuridico          DateTime? @db.DateTime
  usuarioRegistro        String?   @db.VarChar(50)
  host                   String?   @db.VarChar(50)
  GASTOSDECOBRANZA       Float?    @db.Money
  renegociacion          Int?
  MONTOVENCIDOAUX        Float?    @db.Money
  IDGESTIONULTIMA        BigInt?
  FechaCastigo           DateTime? @db.DateTime
  CapitalCastigado       Float?    @db.Money
  MoraCastigado          Float?    @db.Money
  InteresCastigado       Float?    @db.Money
  idClasificacionCartera Int?      @db.SmallInt
  MontoPagare            Float?    @db.Money
  idCobrador             BigInt?
  FechaProcess           DateTime? @db.DateTime

  @@id([AnioProcess, MesProcess, DiaProcess, idEmpresa, idMoneda, noPrestamo], map: "PK_IC_Cuenta_Historia")
  @@index([FechaProcess], map: "Idx_FechaProceso")
}

model IC_CuotaAtrasada {
  idEmpresa           Int       @db.SmallInt
  idMoneda            Int       @default(1, map: "DF_IC_CuotaAtrasada_idMoneda") @db.SmallInt
  noPrestamo          String    @db.VarChar(50)
  noCuota             Int
  capital             Float?    @db.Money
  interes             Float?    @db.Money
  mora                Float?    @db.Money
  cobrosAdicionales_1 Float?    @db.Money
  cobrosAdicionales_2 Float?    @db.Money
  cobrosAdicionales_3 Float?    @db.Money
  cobrosAdicionales_4 Float?    @db.Money
  cobrosAdicionales_5 Float?    @db.Money
  cobrosAdicionales_6 Float?    @db.Money
  cobrosAdicionales_7 Float?    @db.Money
  fechaPago           DateTime? @db.DateTime
  statusCuota         String?   @db.Char(1)
  IC_Cuenta           IC_Cuenta @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_CuotaAtrasada_IC_Cuenta")

  @@id([idEmpresa, noCuota, idMoneda, noPrestamo], map: "PK_IC_CuotaAtrasada")
}

model IC_DescuentoConvenio {
  IdDescuentoConvenio Int                @id(map: "PK__IC_Descu__7B1A620D33C41F0C") @db.SmallInt
  IdEmpresa           Int?               @db.SmallInt
  IdProductoOrigen    Int?
  IdMorosidad         Int?               @db.SmallInt
  PorcentajeDescuento Decimal?           @db.Decimal(3, 2)
  Prioridad           Int?               @db.SmallInt
  Estado              Boolean?
  IC_Empresa          IC_Empresa?        @relation(fields: [IdEmpresa], references: [idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_DescuentoConvenio__IC_Empresa")
  IC_Morosidad        IC_Morosidad?      @relation(fields: [IdMorosidad, IdEmpresa], references: [IdMorosidad, IdEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_DescuentoConvenio__IC_Morosidad")
  IC_ProductoOrigen   IC_ProductoOrigen? @relation(fields: [IdProductoOrigen], references: [IdProductoOrigen], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_DescuentoConvenio__IC_ProductoOrigen")
}

model IC_DireccionCompania {
  IdDireccionCompania Int          @id(map: "PK_IC_DireccionCompania")
  Direccion           String?      @db.VarChar(1000)
  FechaRegistro       DateTime?    @db.DateTime
  UsuarioRegistro     String?      @db.VarChar(100)
  FechaBaja           DateTime?    @db.DateTime
  UsuarioBaja         String?      @db.VarChar(100)
  FechaModificacion   DateTime?    @db.DateTime
  UsuarioModificacion String?      @db.VarChar(100)
  Estado              Boolean?
  CodigoMuni          Int?
  IdZona              Int?
  IdColonia           Int?
  IdCompania          Int?
  Codigodep           Int?
  GNMUNI              GNMUNI?      @relation(fields: [CodigoMuni], references: [codigomuni], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_DireccionCompania_GNMUNI")
  IC_Colonia          IC_Colonia?  @relation(fields: [IdColonia], references: [Idcolonia], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_DireccionCompania_IC_Colonia")
  IC_Compania         IC_Compania? @relation(fields: [IdCompania], references: [IdCompania], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_DireccionCompania_IC_Compania")
  IC_Zona             IC_Zona?     @relation(fields: [IdZona], references: [IdZona], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_DireccionCompania_IC_Zona")
}

model IC_DistribucionCobros {
  idCobradorXConfiguracion    Int
  idEmpresa                   Int                       @db.SmallInt
  idMoneda                    Int                       @db.SmallInt
  noprestamo                  String                    @db.VarChar(50)
  idCobrador                  Int
  Observaciones               String?                   @db.VarChar(255)
  idConfiguracionDistribucion Int?
  idTipoDistribucion          Int?
  usuario                     String?                   @db.VarChar(50)
  statusGestionada            Int?
  idClasificacionDistri       Int?
  IdcobradorOrigen            Int?
  IC_CobradorXConfiguracion   IC_CobradorXConfiguracion @relation(fields: [idCobradorXConfiguracion, idEmpresa], references: [idCobradorXConfiguracion, idEmpresa], onUpdate: NoAction, map: "FK_IC_DistribucionCobros_IC_CobradorXConfiguracion")
  IC_Cuenta                   IC_Cuenta                 @relation(fields: [idEmpresa, idMoneda, noprestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_DistribucionCobros_IC_Cuenta")

  @@id([idCobradorXConfiguracion, idEmpresa, idMoneda, noprestamo, idCobrador], map: "PK_IC_DistribucionCobros")
  @@index([idEmpresa, noprestamo, idTipoDistribucion], map: "idx_distribucion_cobros_ini")
  @@index([statusGestionada, idEmpresa, idCobrador, idTipoDistribucion], map: "idx_ic_distribucioncobros")
  @@index([noprestamo], map: "idx_ic_distribucioncobros_noprestamo")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model ic_DistribucionJuridico {
  idempresa    Int?        @db.SmallInt
  idcobrador   BigInt
  Distribucion Int
  IC_Cobrador  IC_Cobrador @relation(fields: [idcobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_ic_DistribucionJuridico_IC_Cobrador")
  IC_Empresa   IC_Empresa? @relation(fields: [idempresa], references: [idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_ic_DistribucionJuridico_IC_Empresa")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model ic_eficiencia_diaria {
  id_empresa        Int?      @db.SmallInt
  id_moneda         Int?      @db.SmallInt
  no_prestamo       String?   @db.NVarChar(60)
  id_movimiento     BigInt?
  id_cobrador       Int?
  status_movimiento String?   @db.NVarChar(50)
  cuotas_atrasadas  Int?      @db.SmallInt
  fecha_movimiento  DateTime? @db.DateTime
  fecha_asign_cta   DateTime? @db.DateTime
  pago_min_cta      Float?    @db.Money
  monto_vencido     Float?    @db.Money
  contagio_cta      Float?    @db.Money
  fecha_operacion   DateTime? @db.DateTime

  @@ignore
}

model ic_eficiencia_historia {
  IdEmpresa           Int           @db.SmallInt
  IdMoneda            Int           @db.SmallInt
  IdMovimiento        BigInt
  NoPrestamo          String        @db.VarChar(50)
  IdCobrador          Int?          @db.SmallInt
  EstatusMovimiento   String?       @db.VarChar(50)
  MontoOriginal       Float?        @db.Money
  SaldoCapital        Float?        @db.Money
  SaldoInteres        Float?        @db.Money
  SaldoMora           Float?        @db.Money
  MontoAdeudado       Float?        @db.Money
  MontoVencido        Float?        @db.Money
  CuotasAtrasadas     Int?          @db.SmallInt
  DiasDeAtraso        Int?          @db.SmallInt
  FechaMovimiento     DateTime      @db.DateTime
  FechaOperacion      DateTime?     @db.DateTime
  FechaInicioPrestamo DateTime?     @db.DateTime
  FechaModificacion   DateTime?     @db.DateTime
  UsuarioModificacion String?       @db.VarChar(50)
  Comentario          String?       @db.VarChar(100)
  Estado              Boolean?
  CicloCorriente      Float?        @db.Money
  IC_Movimiento       IC_Movimiento @relation(fields: [IdEmpresa, IdMoneda, IdMovimiento, NoPrestamo], references: [IdEmpresa, IdMoneda, IdMovimiento, NoPrestamo], onUpdate: NoAction, map: "FK_ic_eficiencia_historia__ic_movimiento")

  @@id([IdEmpresa, IdMoneda, IdMovimiento, NoPrestamo, FechaMovimiento], map: "PK_ic_eficiencia_historia")
}

model IC_EmailCompania {
  IdEmailCompania     Int         @id(map: "IdEmailCompania")
  Email               String?     @db.VarChar(100)
  FechaRegistro       DateTime?   @db.DateTime
  UsuarioRegistro     String?     @db.VarChar(100)
  FechaBaja           DateTime?   @db.DateTime
  UsuarioBaja         String?     @db.VarChar(100)
  FechaModificacion   DateTime?   @db.DateTime
  UsuarioModificacion String?     @db.VarChar(100)
  IdCompania          Int
  Estado              Boolean?
  IC_Compania         IC_Compania @relation(fields: [IdCompania], references: [IdCompania], onUpdate: NoAction, map: "FK_IC_EmailCompania_IC_Compania")
}

model IC_Embargo {
  IdEmbargo                  BigInt              @id(map: "PK_Embargo")
  IdEmpresa                  Int                 @db.SmallInt
  noprestamo                 String              @db.VarChar(50)
  IdJuicio                   Int                 @db.SmallInt
  IdMoneda                   Int                 @db.SmallInt
  Comentario                 String?             @db.NVarChar(Max)
  MontoEmbargo               Float?              @db.Money
  NoDescuento                Int?
  MontoMensualEmbargoSalario Float?              @db.Money
  MontoEmbargadoCuentas      Float?              @db.Money
  IdEmpresasCliente          BigInt?
  IdCobrador                 BigInt
  FechaRegistro              DateTime?           @db.DateTime
  IC_Cobrador                IC_Cobrador         @relation(fields: [IdCobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_EmbargoCobrador")
  Ic_Juicio                  Ic_Juicio           @relation(fields: [IdEmpresa, IdMoneda, noprestamo, IdJuicio], references: [IdEmpresa, IdMoneda, NoPrestamo, IdJuicio], onUpdate: NoAction, map: "FK_EmbargoJuicio")
  IC_EmpresasCliente         IC_EmpresasCliente? @relation(fields: [IdEmpresasCliente], references: [IdEmpresasCliente], onDelete: NoAction, onUpdate: NoAction, map: "FK_EmbargoEmpresaCliente")
}

model IC_Empresa {
  idEmpresa                             Int                                     @id(map: "PK_IC_Empresa") @db.SmallInt
  Nombre                                String?                                 @db.VarChar(300)
  NIT                                   String                                  @db.VarChar(50)
  Direccion                             String?                                 @db.VarChar(300)
  Telefono                              String?                                 @db.VarChar(60)
  estado                                Boolean?
  GNIDEMPRESA                           Int?                                    @db.SmallInt
  AFECTAPAGOS                           Boolean?
  DIASPROMESA                           Int?                                    @db.SmallInt
  DIASREPROGRAMACION                    Int?                                    @db.SmallInt
  DIASDOMICILIARES                      Int?                                    @db.SmallInt
  DIASRECOLECCION                       Int?                                    @db.SmallInt
  DIASCARTACOBRO                        Int?                                    @db.SmallInt
  CARTERA                               Boolean?
  CONVENIO                              Boolean                                 @default(false, map: "DF_IC_Empresa_CONVENIO")
  JUICIO                                Boolean?
  ConvenioComentario                    String?                                 @db.NText
  Comentario1                           String?                                 @db.NText
  Comentario2                           String?                                 @db.NText
  LogoEmpresarial                       Bytes?                                  @db.Image
  AprobarConvenioAutomatico             Boolean?
  DeudorPagaHonorarios                  Boolean?
  PorcentajeHonorarios                  Decimal?                                @db.Decimal(4, 4)
  PorcentajeIVA                         Decimal?                                @db.Decimal(4, 2)
  GN_EMPRESA                            GN_EMPRESA?                             @relation(fields: [GNIDEMPRESA], references: [GNIDEMPRESA], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Empresa_GN_EMPRESA")
  cdCobradorxRuta                       cdCobradorxRuta[]
  GNMUNI_EQ                             GNMUNI_EQ[]
  IC_Agencia                            IC_Agencia[]
  ic_bitacora_archivos                  ic_bitacora_archivos[]
  ic_carta                              ic_carta[]
  IC_ClasificacionCartera               IC_ClasificacionCartera[]
  IC_ConfiguracionDistribucion          IC_ConfiguracionDistribucion[]
  IC_ConsultaExpediente                 IC_ConsultaExpediente[]
  IC_Cuenta                             IC_Cuenta[]
  IC_DescuentoConvenio                  IC_DescuentoConvenio[]
  ic_DistribucionJuridico               ic_DistribucionJuridico[]               @ignore
  ic_EmpresaXCobrador                   ic_EmpresaXCobrador[]
  ic_equivalencia_muni                  ic_equivalencia_muni[]
  IC_EquivalenciaResultadoAccionDetalle IC_EquivalenciaResultadoAccionDetalle[]
  IC_Formato                            IC_Formato[]
  ic_formato_carta                      ic_formato_carta[]
  Ic_HistoriaAplicacionInteres          Ic_HistoriaAplicacionInteres[]
  ic_JuzgadoCartera                     ic_JuzgadoCartera[]
  Ic_modeloFiniquito                    Ic_modeloFiniquito[]
  IC_MonedaXEmpresa                     IC_MonedaXEmpresa[]
  IC_Morosidad                          IC_Morosidad[]
  IC_PasoConvenio                       IC_PasoConvenio[]
  IC_PERFIL                             IC_PERFIL[]
  IC_PermisosClasificacionPerfil        IC_PermisosClasificacionPerfil[]
  ic_PersonaCancelo                     ic_PersonaCancelo[]
  IC_Producto                           IC_Producto[]
  ic_rendimiento_banrural               ic_rendimiento_banrural[]
  IC_ResultadoAccion                    IC_ResultadoAccion[]
  Ic_Serie                              Ic_Serie[]
  IC_SituacionCobro                     IC_SituacionCobro[]
  IC_TipoDocumento                      IC_TipoDocumento[]
  IC_TipoMovimiento                     IC_TipoMovimiento[]
  IC_TipoPago                           IC_TipoPago[]
  reporte_header                        reporte_header[]
}

model IC_EmpresasCliente {
  IdEmpresasCliente           BigInt                        @id(map: "PK_EmpresasCliente") @default(autoincrement())
  Descripcion                 String                        @db.NVarChar(Max)
  Direccion                   String                        @db.NVarChar(Max)
  Estatus                     Boolean
  IC_Embargo                  IC_Embargo[]
  Ic_HistorialTrabajosCliente Ic_HistorialTrabajosCliente[]
  Ic_InformacionNotificacion  Ic_InformacionNotificacion[]
  IC_TelefonosEmpresaCliente  IC_TelefonosEmpresaCliente[]
}

model ic_EmpresaXCobrador {
  idCobrador  BigInt
  idEmpresa   Int         @db.SmallInt
  Estado      Boolean     @default(true, map: "dfEstado")
  IC_Cobrador IC_Cobrador @relation(fields: [idCobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_ic_EmpresaXCobrador_IC_Cobrador")
  IC_Empresa  IC_Empresa  @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_ic_EmpresaXCobrador_IC_Empresa")

  @@id([idCobrador, idEmpresa], map: "PK_ic_EmpresaXCobrador")
}

model ic_equivalencia_muni {
  id_equivalencia Int         @id(map: "PK__ic_equiv__D66A35C27B9B496D")
  id_empresa      Int?        @db.SmallInt
  muni_empresa    String?     @db.NVarChar(500)
  muni_sistema    String?     @db.NVarChar(500)
  dpto_sistema    String?     @db.NVarChar(500)
  IC_Empresa      IC_Empresa? @relation(fields: [id_empresa], references: [idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK__ic_equiva__id_em__070CFC19")
}

model IC_EquivalenciaResultadoAccionDetalle {
  idEmpresa                 Int                         @db.SmallInt
  idEquivalencia            Int
  Descripcion               String                      @default("", map: "DF_IC_EquivalenciaResultadoAccionDetalle_Descripcion") @db.VarChar(50)
  IC_Empresa                IC_Empresa                  @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_EquivalenciaResultadoAccionDetalle_IC_Empresa")
  IC_ResultadoAccionDetalle IC_ResultadoAccionDetalle[]

  @@id([idEmpresa, idEquivalencia], map: "PK_IC_EquivalenciaResultadoAccionDetalle")
}

model IC_EstadoCliente {
  idEstadoCliente String       @id(map: "PK_IC_EstadoCliente") @db.VarChar(100)
  Descripcion     String?      @db.VarChar(50)
  Estado          Boolean?
  IC_Cliente      IC_Cliente[]
}

model ic_EstatusBoleta {
  Idestatus      Int              @id(map: "PK__ic_Estat__16C4434DF4BA6B1D") @default(autoincrement())
  Descripcion    String?          @db.VarChar(50)
  Estatus        Boolean?
  Ic_Boleta_Pago Ic_Boleta_Pago[]
}

model Ic_EstatusMedida {
  IdEstatusMedida            Int                          @db.SmallInt
  IdMedida                   Int                          @db.SmallInt
  IdEmpresa                  Int                          @db.SmallInt
  Descripcion                String                       @db.VarChar(150)
  Estado                     Boolean
  FechaRegistro              DateTime?                    @db.DateTime
  UsuarioRegistro            BigInt
  SolicitaNotificacion       Boolean?
  SolicitaInfoTransaccion    Boolean?
  Transaccion                Boolean?
  IC_Cobrador                IC_Cobrador                  @relation(fields: [UsuarioRegistro], references: [idCobrador], onUpdate: NoAction, map: "FK_EstatusMedidaCobrador")
  Ic_HistorialEstatusMedidas Ic_HistorialEstatusMedidas[]
  Ic_InformacionTransaccion  Ic_InformacionTransaccion[]

  @@id([IdEstatusMedida, IdMedida, IdEmpresa], map: "PK_EstatusMedida")
}

model Ic_EtiquetaJurdico {
  idEtiqueta     Int      @id(map: "PK_Ic_EtiquetaJurdico") @default(autoincrement())
  Descripcion    String?  @db.VarChar(50)
  AbreEtiqueta   String?  @db.VarChar(50)
  CierraEtiqueta String?  @db.VarChar(50)
  Html           Boolean?
  Estado         Boolean?
}

model IC_Finiquito {
  idEmpresa         Int                @db.SmallInt
  idMoneda          Int                @db.SmallInt
  noPrestamo        String             @db.VarChar(50)
  noFiniquito       Int
  usuarioImpresion  String?            @db.VarChar(50)
  fechaImpresion    DateTime?          @db.DateTime
  Host              String?            @db.VarChar(50)
  App               String?            @db.VarChar(50)
  idCancelado       Int?               @db.SmallInt
  ic_PersonaCancelo ic_PersonaCancelo? @relation(fields: [idEmpresa, idCancelado], references: [idEmpresa, idCancelado], onUpdate: NoAction, map: "FK_IC_Finiquito_ic_PersonaCancelo")
  IC_Cuenta         IC_Cuenta          @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_Finiquito_IC_Cuenta")

  @@id([idEmpresa, idMoneda, noPrestamo, noFiniquito], map: "PK_IC_Finiquito")
}

model IC_FormaDePago {
  idFormaPago    Int              @id(map: "PK__IC_Forma__952893F643EE9D62") @default(autoincrement())
  idEmpresa      Int?
  Descripcion    String?          @db.VarChar(50)
  Estatus        Boolean?
  Ic_Boleta_Pago Ic_Boleta_Pago[]
}

model IC_Formato {
  IdEmpresa        Int                @db.SmallInt
  IdFormato        String             @db.Char(3)
  Descripcion      String             @db.VarChar(50)
  Estado           Boolean
  PapelAncho       BigInt?
  PapelAltura      BigInt?
  Duplica          Boolean?
  Separacion       Int?
  IC_Empresa       IC_Empresa         @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_Formato_IC_Empresa")
  Ic_CampoXFormato Ic_CampoXFormato[]

  @@id([IdEmpresa, IdFormato], map: "PK_IC_Formato")
}

model ic_formato_carta {
  idFormato   Int        @default(autoincrement()) @db.SmallInt
  idEmpresa   Int        @db.SmallInt
  descripcion String?    @db.VarChar(200)
  estado      Boolean
  IC_Empresa  IC_Empresa @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "fk_ic_formato_carta__IC_Empresa")

  @@id([idFormato, idEmpresa], map: "PK__ic_forma__37B9A53CE8FD4B3D")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_Fuente_Investigacion {
  idFuente    Int     @default(autoincrement()) @db.SmallInt
  descripcion String? @db.VarChar(100)
  nombre      String? @db.VarChar(100)

  @@ignore
}

model IC_Gestion {
  idGestion                                                     BigInt                     @id(map: "PK_co_Gestion")
  idEmpresa                                                     Int                        @default(1, map: "DF_IC_Gestion_idEmpresa") @db.SmallInt
  idMoneda                                                      Int?                       @default(1, map: "DF_IC_Gestion_idMoneda") @db.SmallInt
  noPrestamo                                                    String?                    @db.VarChar(50)
  idCobrador                                                    Int?
  fechaGestion                                                  DateTime                   @db.DateTime
  horaInicio                                                    DateTime?                  @db.DateTime
  horaFin                                                       DateTime?                  @db.DateTime
  idResultadoAccionDetalle                                      Int?                       @db.SmallInt
  idSituacionCobro                                              Int?
  idCambio                                                      BigInt?
  observacionesGestion                                          String?                    @db.NVarChar(Max)
  GestionValida                                                 Int?
  NOVUELTA                                                      Int?
  HoraInicioMod                                                 DateTime?                  @db.DateTime
  HoraFinMod                                                    DateTime?                  @db.DateTime
  IdConsulta                                                    BigInt?
  IC_ConsultaExpediente                                         IC_ConsultaExpediente?     @relation(fields: [IdConsulta], references: [IdConsulta], onDelete: NoAction, onUpdate: NoAction, map: "FK_ConsultaExpedienteGestion")
  IC_Cuenta_IC_CuentaToIC_Gestion_idEmpresa_idMoneda_noPrestamo IC_Cuenta?                 @relation("IC_CuentaToIC_Gestion_idEmpresa_idMoneda_noPrestamo", fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_Gestion_IC_Cuenta")
  IC_ResultadoAccionDetalle                                     IC_ResultadoAccionDetalle? @relation(fields: [idResultadoAccionDetalle], references: [idResultadoAccionDetalle], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Gestion_IC_ResultadoAccionDetalle")
  IC_SituacionCobro                                             IC_SituacionCobro?         @relation(fields: [idSituacionCobro, idEmpresa], references: [idSituacionCobro, idEmpresa], onUpdate: NoAction, map: "FK_IC_Gestion_IC_SituacionCobro")
  IC_Cuenta_IC_Cuenta_IDGESTIONULTIMAToIC_Gestion               IC_Cuenta[]                @relation("IC_Cuenta_IDGESTIONULTIMAToIC_Gestion")
  IC_Cuenta_IC_Cuenta_ID_Primera_GestionToIC_Gestion            IC_Cuenta[]                @relation("IC_Cuenta_ID_Primera_GestionToIC_Gestion")
  IC_LLamadasPorGestion                                         IC_LLamadasPorGestion[]
  IC_PromesaPago                                                IC_PromesaPago[]
  IC_visita                                                     IC_visita[]

  @@index([idResultadoAccionDetalle], map: "IC_Gestiondetalle")
  @@index([idEmpresa, idSituacionCobro], map: "IC_Gestionsituacion")
  @@index([fechaGestion, idEmpresa, idMoneda, noPrestamo, idResultadoAccionDetalle], map: "IDX_IC_ResultadoAccionDetalle")
  @@index([idCobrador, fechaGestion, idEmpresa, idMoneda], map: "IX_GestionCobrador")
  @@index([noPrestamo, fechaGestion, idEmpresa, idMoneda], map: "IX_Gestion_noPrestamo")
  @@index([fechaGestion], map: "i_fechagestion")
}

model Ic_HistoriaAplicacionInteres {
  idEmpresa    Int        @db.SmallInt
  MonthProceso Int
  YearProceso  Int
  Usuario      String?    @db.VarChar(50)
  FechaProceso DateTime?  @db.DateTime
  Host         String?    @db.VarChar(50)
  IC_Empresa   IC_Empresa @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_Ic_HistoriaAplicacionInteres_IC_Empresa")

  @@id([idEmpresa, MonthProceso, YearProceso], map: "PK_Ic_HistoriaAplicacionInteres")
}

model Ic_HistorialEstatusMedidas {
  IdHistorialEstatusMedida   BigInt                      @id(map: "PK_EstatusMedidasHistorial") @default(autoincrement())
  IdMedidaProceso            BigInt
  IdEstatusMedida            Int                         @db.SmallInt
  IdMedida                   Int                         @db.SmallInt
  IdEmpresa                  Int                         @db.SmallInt
  IdInformacionNotificacion  Int?                        @db.SmallInt
  FechaRegistro              DateTime                    @db.DateTime
  UsuarioSolicita            BigInt
  IdInformacionTransaccion   BigInt?
  Ic_EstatusMedida           Ic_EstatusMedida            @relation(fields: [IdEstatusMedida, IdMedida, IdEmpresa], references: [IdEstatusMedida, IdMedida, IdEmpresa], onUpdate: NoAction, map: "FK_MEDIDASMEDIDASESTATUS")
  Ic_InformacionNotificacion Ic_InformacionNotificacion? @relation(fields: [IdInformacionNotificacion], references: [IdInformacionNotificacion], onDelete: NoAction, onUpdate: NoAction, map: "FK_MEDIDASESTATUSNOTIFICACION")
  Ic_InformacionTransaccion  Ic_InformacionTransaccion?  @relation(fields: [IdInformacionTransaccion], references: [IdInformacionTransaccion], onDelete: NoAction, onUpdate: NoAction, map: "FK_InformacionTransaccionHistorialEstatusM")
  IC_Cobrador                IC_Cobrador                 @relation(fields: [UsuarioSolicita], references: [idCobrador], onUpdate: NoAction, map: "FK_HistoEstatusMedCobrador")
}

model Ic_HistorialTrabajosCliente {
  IdHistorialTrabajos BigInt             @id(map: "PK_HistorialTrabajosCliente") @default(autoincrement())
  IdEmpresasCliente   BigInt
  IdCliente           BigInt
  IdEmpresa           Int                @db.SmallInt
  Descripcion         String             @db.NVarChar(Max)
  Puesto              String             @db.NVarChar(Max)
  Direccion           String             @db.NVarChar(Max)
  Estatus             Boolean
  IC_Cliente          IC_Cliente         @relation(fields: [IdCliente, IdEmpresa], references: [idCliente, idEmpresa], onUpdate: NoAction, map: "FK_HistorialTrabajos_Cliente")
  IC_EmpresasCliente  IC_EmpresasCliente @relation(fields: [IdEmpresasCliente], references: [IdEmpresasCliente], onUpdate: NoAction, map: "FK_EmpresasCliente_HistorialTrabajos")
}

model IC_HistoricoNotaPermanente {
  IdHistoricoNota Int         @id(map: "PK_HistoricoNotaPermanente") @default(autoincrement())
  IdEmpresa       Int         @db.SmallInt
  IdMoneda        Int         @db.SmallInt
  Noprestamo      String      @db.VarChar(50)
  NotaPermanente  String      @db.VarChar(Max)
  IdCobrador      BigInt
  FechaRegistro   DateTime?   @db.DateTime
  Estatus         Boolean
  IC_Cobrador     IC_Cobrador @relation(fields: [IdCobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_HistoricoNotaCobrador")
  IC_Cuenta       IC_Cuenta   @relation(fields: [IdEmpresa, IdMoneda, Noprestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_HistoricoNotaPermanenteCuenta")
}

model IC_HistoricoRazonMora {
  IdHistoricoRazonMora Int          @id(map: "PK_HistoricoRazonMora") @default(autoincrement())
  IdEmpresa            Int          @db.SmallInt
  IdMoneda             Int          @db.SmallInt
  Noprestamo           String       @db.VarChar(50)
  IdRazonMora          Int          @db.SmallInt
  FechaRegistro        DateTime?    @db.DateTime
  idCobrador           BigInt
  Estatus              Boolean
  IC_Cuenta            IC_Cuenta    @relation(fields: [IdEmpresa, IdMoneda, Noprestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_HistoricoCuentaEmpresa")
  IC_RazonMora         IC_RazonMora @relation(fields: [IdRazonMora, IdEmpresa], references: [IdRazonMora, IdEmpresa], onUpdate: NoAction, map: "FK_Historico_RazonMora")
  IC_Cobrador          IC_Cobrador  @relation(fields: [idCobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_HistoricoCuentaCobrador")

  @@index([IdEmpresa, IdMoneda, Noprestamo], map: "idx_historico_razon_mora")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Ic_InformacionCuenta {
  cacredito           String  @db.VarChar(50)
  caestatus           String? @db.VarChar(50)
  caformapago         String? @db.VarChar(50)
  catasainteres       String? @db.VarChar(50)
  camontoprestamo     String? @db.VarChar(50)
  cafechavencimiento  String? @db.VarChar(50)
  cacuotanivelada     String? @db.VarChar(50)
  cacapital           String? @db.VarChar(50)
  cainteres           String? @db.VarChar(50)
  caultfechapago      String? @db.VarChar(50)
  caUltimomontopagado String? @db.VarChar(50)
  casaldocapital      String? @db.VarChar(50)
  casaldointerespro   String? @db.VarChar(50)
  casaldootros        String? @db.VarChar(50)
  cacuotaspagadas     String? @db.VarChar(50)
  cacuotasatrasadas   String? @db.VarChar(50)
  cacuotaspagadasmora String? @db.VarChar(50)
  cadiasatraso        String? @db.VarChar(50)
  caclientebco        String? @db.VarChar(50)
  caprestamobco       String? @db.VarChar(50)
  camontovencido      String? @db.VarChar(50)
  cafechaprimercuota  String? @db.VarChar(50)
  casaldointeres      String? @db.VarChar(50)

  @@ignore
}

model Ic_InformacionNotificacion {
  IdInformacionNotificacion  Int                          @id(map: "PK_InfoNotificacion") @db.SmallInt
  IdEmpresasCliente          BigInt?
  FechaNotificacion          DateTime?                    @db.DateTime
  DescripcionNotificacion    String?                      @db.NVarChar(300)
  UsuarioRegistro            BigInt
  FechaRegistro              DateTime                     @db.DateTime
  IC_EmpresasCliente         IC_EmpresasCliente?          @relation(fields: [IdEmpresasCliente], references: [IdEmpresasCliente], onDelete: NoAction, onUpdate: NoAction, map: "FK_NotificacionEmpresa")
  IC_Cobrador                IC_Cobrador                  @relation(fields: [UsuarioRegistro], references: [idCobrador], onUpdate: NoAction, map: "FK_InfoNotificacionCobrador")
  Ic_HistorialEstatusMedidas Ic_HistorialEstatusMedidas[]
  Ic_MedidasProceso          Ic_MedidasProceso[]
}

model Ic_InformacionTransaccion {
  IdInformacionTransaccion   BigInt                       @id(map: "PK_InformacionTransaccion")
  IdEstatusMedida            Int?                         @db.SmallInt
  IdMedida                   Int?                         @db.SmallInt
  IdEmpresa                  Int?                         @db.SmallInt
  FechaTransaccion           DateTime?                    @db.DateTime
  MontoTransaccion           Float?                       @db.Money
  IdCobrador                 BigInt?
  FechaRegistra              DateTime?                    @db.DateTime
  IC_Cobrador                IC_Cobrador?                 @relation(fields: [IdCobrador], references: [idCobrador], onDelete: NoAction, onUpdate: NoAction, map: "FK_InfoTransCobrador")
  Ic_EstatusMedida           Ic_EstatusMedida?            @relation(fields: [IdEstatusMedida, IdMedida, IdEmpresa], references: [IdEstatusMedida, IdMedida, IdEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_InfoTransEstatusMedida")
  Ic_HistorialEstatusMedidas Ic_HistorialEstatusMedidas[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Ic_intentoLogueo {
  Usuario String?   @db.VarChar(50)
  Pass    Bytes?    @db.Binary(50)
  Host    String?   @db.VarChar(50)
  App     String?   @db.VarChar(150)
  Fecha   DateTime? @db.DateTime
  Comment String?   @db.VarChar(50)

  @@ignore
}

model IC_InventarioTablas {
  IdInventarioTabla              BigInt                           @id(map: "PK_InventarioTablas") @default(autoincrement())
  Descripcion                    String                           @db.NVarChar(200)
  Estatus                        Boolean
  Alias                          String?                          @db.NVarChar(200)
  IdObjeto                       Int
  IC_PermisosClasificacionPerfil IC_PermisosClasificacionPerfil[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_Investigacion_Expediente {
  idEmpresa          Int        @db.SmallInt
  idMoneda           Int        @db.SmallInt
  idCliente          BigInt
  noPrestamo         String     @db.VarChar(50)
  fechaActualizacion DateTime?  @db.DateTime
  idFuente           Int?
  IC_Cliente         IC_Cliente @relation(fields: [idCliente, idEmpresa], references: [idCliente, idEmpresa], onUpdate: NoAction, map: "FK_ic_investigacion_expediente_IC_Cliente")
  IC_Cuenta          IC_Cuenta  @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_ic_investigacion_expediente_IC_Cuenta")

  @@index([idEmpresa, idCliente], map: "idx_ic_investigacion_expediente_empresa_cliente")
  @@ignore
}

model IC_InvestigacionBases {
  IdInvestigacionBases Int  @id(map: "PK_ic_investigacionbases")
  idEmpresa            Int  @db.SmallInt
  MesActualiza         Int?
}

model Ic_Juez {
  IdJuez    Int         @id(map: "PK_Ic_Juez") @db.SmallInt
  Nombre    String      @db.VarChar(150)
  Estado    Boolean
  Ic_Juicio Ic_Juicio[]
}

model Ic_Juicio {
  IdEmpresa             Int                   @db.SmallInt
  IdMoneda              Int                   @db.SmallInt
  NoPrestamo            String                @db.VarChar(50)
  IdJuicio              Int                   @db.SmallInt
  IdJuzgado             Int?                  @db.SmallInt
  IdJuez                Int?                  @db.SmallInt
  IdDireccionHistoria   BigInt?
  Idpaso                Int                   @db.SmallInt
  Idcobrador            BigInt
  Juicio                String                @default("", map: "DF_Ic_Juicio_Juicio") @db.VarChar(50)
  FechaInicio           DateTime              @db.DateTime
  fechafin              DateTime              @default(dbgenerated("0"), map: "DF_Ic_Juicio_fechafin") @db.DateTime
  FechaAproxCancelacion DateTime              @default(dbgenerated("0"), map: "DF_Ic_Juicio_FechaAproxCancelacion") @db.DateTime
  Finalizado            Boolean               @default(false, map: "DF_Ic_Juicio_Finalizado")
  Recordatorio          Boolean               @default(false, map: "DF_Ic_Juicio_Recordatorio")
  Comentario            String?               @default("", map: "DF_Ic_Juicio_Comentario") @db.VarChar(8000)
  FechaOperacion        DateTime?             @db.DateTime
  IdTipoCuenta          Int?                  @db.SmallInt
  IdNotificador         Int?                  @db.SmallInt
  IdOficial             Int?                  @db.SmallInt
  CostasProcesales      Float?                @db.Money
  cdDireccionHistoria   cdDireccionHistoria?  @relation(fields: [IdDireccionHistoria], references: [idDireccionHistoria], onDelete: NoAction, onUpdate: NoAction, map: "FK_Ic_Juicio_cdDireccionHistoria")
  IC_Cuenta             IC_Cuenta             @relation(fields: [IdEmpresa, IdMoneda, NoPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_Ic_Juicio_IC_Cuenta")
  Ic_PasoJuridico       Ic_PasoJuridico       @relation(fields: [IdEmpresa, Idpaso], references: [idEmpresa, idPaso], onUpdate: NoAction, map: "FK_Ic_Juicio_Ic_PasoJuridico")
  Ic_Juez               Ic_Juez?              @relation(fields: [IdJuez], references: [IdJuez], onDelete: NoAction, onUpdate: NoAction, map: "FK_Ic_Juicio_Ic_Juez")
  Ic_Juzgado            Ic_Juzgado?           @relation(fields: [IdJuzgado], references: [IdJuzgado], onDelete: NoAction, onUpdate: NoAction, map: "FK_Ic_Juicio_Ic_Juzgado")
  IC_Cobrador           IC_Cobrador           @relation(fields: [Idcobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_Ic_Juicio_IC_Cobrador")
  IC_Embargo            IC_Embargo[]
  Ic_MedidasProceso     Ic_MedidasProceso[]
  Ic_MovimientoJuicio   Ic_MovimientoJuicio[]

  @@id([IdEmpresa, IdMoneda, NoPrestamo, IdJuicio], map: "PK_Ic_Juicio_1")
}

model Ic_Juzgado {
  IdJuzgado         Int                 @id(map: "PK_Ic_Juzgado") @db.SmallInt
  Nombre            String              @db.VarChar(100)
  Direccion         String              @db.VarChar(100)
  Telefono          String              @db.VarChar(30)
  Estado            Boolean
  Ic_Juicio         Ic_Juicio[]
  ic_JuzgadoCartera ic_JuzgadoCartera[]
}

model ic_JuzgadoCartera {
  IdJuzgado  Int        @db.SmallInt
  idEmpresa  Int        @db.SmallInt
  Nombre     String     @db.VarChar(200)
  Estado     Boolean
  Ic_Juzgado Ic_Juzgado @relation(fields: [IdJuzgado], references: [IdJuzgado], onUpdate: NoAction, map: "FK_JuzgadoCartera")
  IC_Empresa IC_Empresa @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_JuzgadoEmpresa")

  @@unique([Nombre, idEmpresa], map: "UC_JuzgadoEmpresCartera")
}

model IC_LLamadasPorGestion {
  idLLamada            BigInt                @id(map: "PK__IC_LLamadasPorGe__5026DB83")
  idGestion            BigInt?
  idReferencia         BigInt?
  horaInicial          DateTime              @db.DateTime
  horafin              DateTime?             @db.DateTime
  IdTipoOrigen         Int?
  IC_TipoOrigenLLamada IC_TipoOrigenLLamada? @relation(fields: [IdTipoOrigen], references: [IdTipoOrigen], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_LLamadasPorGestionTipoOL")
  IC_Gestion           IC_Gestion?           @relation(fields: [idGestion], references: [idGestion], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_LLamadasPorGestion_IC_Gestion")
  IC_Referencia        IC_Referencia?        @relation(fields: [idReferencia], references: [idReferencia], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_LLamadasPorGestion_IC_Referencia")

  @@index([idGestion], map: "idx_ic_gestion")
}

model IC_Login {
  InicioActividad DateTime     @db.DateTime
  FinActividad    DateTime     @db.DateTime
  Id_Actividad    Int
  idCobrador      BigInt
  hostname        String?      @db.VarChar(50)
  IC_Actividad    IC_Actividad @relation(fields: [Id_Actividad], references: [Id_Actividad], onUpdate: NoAction, map: "FK_IC_Login_IC_Actividad")
  IC_Cobrador     IC_Cobrador  @relation(fields: [idCobrador], references: [idCobrador], onUpdate: NoAction, map: "FK_IC_Login_IC_Cobrador")

  @@id([InicioActividad, FinActividad, Id_Actividad, idCobrador], map: "PK_IC_Login")
}

model Ic_MedidasJuicio {
  IdEmpresa          Int                 @db.SmallInt
  IdMedida           Int                 @db.SmallInt
  Descripcion        String              @db.VarChar(150)
  Estado             Boolean?
  FechaRegistro      DateTime?           @db.DateTime
  UsuarioRegistro    String?             @db.VarChar(50)
  IdTipoTransaccion  Int?                @db.SmallInt
  IC_TIPOTRANSACCION IC_TIPOTRANSACCION? @relation(fields: [IdTipoTransaccion], references: [IdTipoTransaccion], onDelete: NoAction, onUpdate: NoAction, map: "FK_MedidasTipoTransaccion")
  Ic_MedidasProceso  Ic_MedidasProceso[]

  @@id([IdEmpresa, IdMedida], map: "PK__Ic_Medid__92C66DD95F6F7F18")
}

model Ic_MedidasProceso {
  IdMedidaProceso            BigInt                      @id(map: "PK_MedidasProceso") @default(autoincrement())
  IdEmpresa                  Int                         @db.SmallInt
  NoPrestamo                 String                      @db.VarChar(50)
  IdJuicio                   Int                         @db.SmallInt
  IdMoneda                   Int                         @db.SmallInt
  IdMedida                   Int                         @db.SmallInt
  FechaRegistro              DateTime?                   @db.DateTime
  UsuarioRegistro            BigInt
  IdInformacionNotificacion  Int?                        @db.SmallInt
  Ic_MedidasJuicio           Ic_MedidasJuicio            @relation(fields: [IdEmpresa, IdMedida], references: [IdEmpresa, IdMedida], onUpdate: NoAction, map: "FK_MedidasPMedidasJ")
  Ic_Juicio                  Ic_Juicio                   @relation(fields: [IdEmpresa, IdMoneda, NoPrestamo, IdJuicio], references: [IdEmpresa, IdMoneda, NoPrestamo, IdJuicio], onUpdate: NoAction, map: "FK_MedidasProcesoJuicio")
  Ic_InformacionNotificacion Ic_InformacionNotificacion? @relation(fields: [IdInformacionNotificacion], references: [IdInformacionNotificacion], onDelete: NoAction, onUpdate: NoAction, map: "FK_MedidasPNotificacion")
  IC_Cobrador                IC_Cobrador                 @relation(fields: [UsuarioRegistro], references: [idCobrador], onUpdate: NoAction, map: "FK_MedidaProcesoCobrador")
}

model IC_Mes {
  IdMes  Int      @id(map: "PK_Mes") @db.SmallInt
  Nombre String?  @db.VarChar(50)
  Estado Boolean?
}

model Ic_modeloFiniquito {
  idEmpresa               Int                       @db.SmallInt
  Fiador                  Boolean
  IC_Empresa              IC_Empresa                @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_Ic_modeloFiniquito_IC_Empresa")
  Ic_ModeloFiniquitoLinea Ic_ModeloFiniquitoLinea[]

  @@id([idEmpresa, Fiador], map: "PK_Ic_modeloFiniquito")
}

model Ic_ModeloFiniquitoLinea {
  idEmpresa          Int                @db.SmallInt
  fiador             Boolean
  idLinea            Int                @default(autoincrement())
  texto              String             @db.NText
  estado             Boolean
  Ic_modeloFiniquito Ic_modeloFiniquito @relation(fields: [idEmpresa, fiador], references: [idEmpresa, Fiador], onUpdate: NoAction, map: "FK_Ic_ModeloFiniquitoLinea_Ic_modeloFiniquito")

  @@id([idEmpresa, fiador, idLinea], map: "PK_Ic_ModeloFiniquitoLinea")
}

model IC_ModeloJuridico {
  idEmpresa   Int      @db.SmallInt
  idModelo    Int
  estado      Boolean?
  Descripcion String?  @db.VarChar(50)
  Text        String?  @db.VarChar(Max)

  @@id([idEmpresa, idModelo], map: "PK_IC_ModeloJuridico")
}

model ic_Moneda {
  idMoneda                                                             Int                     @id(map: "PK_ic_moneda") @db.SmallInt
  moneda                                                               String?                 @db.VarChar(50)
  descripcion                                                          String?                 @db.VarChar(50)
  monedaBase                                                           Boolean?
  exl_process_header_exl_process_header_IdMonedaToic_Moneda            exl_process_header[]    @relation("exl_process_header_IdMonedaToic_Moneda")
  exl_process_header_exl_process_header_IdMonedaEquivalenteToic_Moneda exl_process_header[]    @relation("exl_process_header_IdMonedaEquivalenteToic_Moneda")
  IC_ConsultaExpediente                                                IC_ConsultaExpediente[]
  IC_Cuenta                                                            IC_Cuenta[]
  IC_MonedaXEmpresa                                                    IC_MonedaXEmpresa[]
}

model IC_MonedaXEmpresa {
  idEmpresa  Int        @db.SmallInt
  idMoneda   Int        @db.SmallInt
  IC_Empresa IC_Empresa @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK__IC_MONEDA__idEmp__361CF0BD")
  ic_Moneda  ic_Moneda  @relation(fields: [idMoneda], references: [idMoneda], onUpdate: NoAction, map: "FK__IC_MONEDA__idMon__371114F6")

  @@id([idEmpresa, idMoneda], map: "PK_IC_MONEDAXEMPRESA")
}

model IC_Morosidad {
  IdMorosidad          Int                    @db.SmallInt
  IdEmpresa            Int                    @db.SmallInt
  Descripcion          String                 @db.NVarChar(200)
  Estado               Boolean?
  IC_Empresa           IC_Empresa             @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_MorosidadEmpresa")
  IC_Cuenta            IC_Cuenta[]
  IC_DescuentoConvenio IC_DescuentoConvenio[]

  @@id([IdMorosidad, IdEmpresa], map: "PK_Morosidad")
}

model IC_Movimiento {
  IdEmpresa              Int                      @db.SmallInt
  IdMoneda               Int                      @db.SmallInt
  IdMovimiento           BigInt                   @default(autoincrement())
  NoPrestamo             String                   @db.VarChar(50)
  IdTipoMov              String?                  @db.Char(3)
  IdTipoDoc              String?                  @db.Char(3)
  SerieDoc               String?                  @db.VarChar(50)
  NumeroDoc              String?                  @db.VarChar(50)
  NoDocumento            String?                  @db.VarChar(100)
  Capital                Float?                   @db.Money
  interes                Float?                   @db.Money
  Mora                   Float?                   @db.Money
  Total                  Float?                   @db.Money
  FechaMovimiento        DateTime?                @db.DateTime
  FechaOperacion         DateTime?                @db.DateTime
  Usuario                String?                  @db.VarChar(50)
  Comentario             String?                  @db.NText
  Observaciones          String?                  @db.VarChar(250)
  idPeriodoPago          Int?
  IC_Cuenta              IC_Cuenta                @relation(fields: [IdEmpresa, IdMoneda, NoPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_Movimiento_IC_Cuenta")
  IC_TipoDocumento       IC_TipoDocumento?        @relation(fields: [IdEmpresa, IdTipoDoc], references: [IdEmpresa, IdTipoDoc], onUpdate: NoAction, map: "FK_IC_Movimiento_IC_TipoDocumento")
  IC_TipoMovimiento      IC_TipoMovimiento?       @relation(fields: [IdEmpresa, IdTipoMov], references: [IdEmpresa, IdTipoMov], onUpdate: NoAction, map: "FK_IC_Movimiento_IC_TipoMovimiento")
  IC_PeridodoPago        IC_PeridodoPago?         @relation(fields: [idPeriodoPago], references: [idPeriodoPago], onDelete: NoAction, onUpdate: NoAction, map: "FK_Ic_movimiento_IC_PeridodoPago")
  ic_eficiencia_historia ic_eficiencia_historia[]
  IC_MovimientoD         IC_MovimientoD[]

  @@id([IdEmpresa, IdMoneda, IdMovimiento, NoPrestamo], map: "PK_IC_Movimiento")
  @@index([IdEmpresa, NoPrestamo, FechaMovimiento], map: "idx_ic_movimiento")
}

model IC_MovimientoD {
  IdEmpresa     Int           @db.SmallInt
  IdMoneda      Int           @db.SmallInt
  IdMovimiento  BigInt
  Noprestamo    String        @db.VarChar(50)
  IdTipoPago    String        @db.Char(3)
  NoCuota       Int
  NoDocumento   String        @db.VarChar(100)
  IdBanco       String?       @db.Char(3)
  Fecha         DateTime?     @db.DateTime
  Capital       Float?        @db.Money
  interes       Float?        @db.Money
  Mora          Float?        @db.Money
  Total         Float?        @db.Money
  reversado     Boolean?
  comentario    String?       @db.NText
  IC_Movimiento IC_Movimiento @relation(fields: [IdEmpresa, IdMoneda, IdMovimiento, Noprestamo], references: [IdEmpresa, IdMoneda, IdMovimiento, NoPrestamo], onUpdate: NoAction, map: "FK_IC_MovimientoD_IC_Movimiento")
  IC_TipoPago   IC_TipoPago   @relation(fields: [IdEmpresa, IdTipoPago], references: [IdEmpresa, IdTipoPago], onUpdate: NoAction, map: "FK_IC_MovimientoD_IC_TipoPago")

  @@id([IdEmpresa, IdMoneda, IdMovimiento, Noprestamo, IdTipoPago, NoCuota, NoDocumento], map: "PK_IC_MovimientoD")
}

model Ic_MovimientoJuicio {
  IdEmpresa             Int       @db.SmallInt
  IdMoneda              Int       @db.SmallInt
  NoPrestamo            String    @db.VarChar(50)
  IdJuicio              Int       @db.SmallInt
  idMovimiento          Int
  IdJuzgado             Int?      @db.SmallInt
  IdJuez                Int?      @db.SmallInt
  IdDireccionHistoria   BigInt?
  Idpaso                Int       @db.SmallInt
  Idcobrador            BigInt
  Juicio                String    @db.VarChar(50)
  FechaInicio           DateTime  @db.DateTime
  fechafin              DateTime  @db.DateTime
  FechaAproxCancelacion DateTime  @default(dbgenerated("0"), map: "DF_Ic_Juicio_FechaAproxCancelacionDET") @db.DateTime
  Finalizado            Boolean   @default(false, map: "DF_Ic_Juicio_FinalizadoDET")
  Recordatorio          Boolean   @default(false, map: "DF_Ic_Juicio_RecordatorioDET")
  Comentario            String?   @default("", map: "DF_Ic_Juicio_ComentarioDET") @db.VarChar(8000)
  FechaMovimiento       DateTime? @db.DateTime
  hostName              String?   @db.VarChar(100)
  AppName               String?   @db.VarChar(100)
  Accion                String?   @db.VarChar(15)
  FechaOperacion        DateTime? @db.DateTime
  Ic_Juicio             Ic_Juicio @relation(fields: [IdEmpresa, IdMoneda, NoPrestamo, IdJuicio], references: [IdEmpresa, IdMoneda, NoPrestamo, IdJuicio], onUpdate: NoAction, map: "FK_Ic_MovimientoJuicio_Ic_Juicio")

  @@id([IdEmpresa, IdMoneda, NoPrestamo, IdJuicio, idMovimiento], map: "PK_Ic_MovimientoJuicio")
}

model Ic_Notificador {
  IdNotificador   Int       @id(map: "PK__Ic_Notif__0B12B8EF66A305C8") @db.SmallInt
  Descripcion     String?   @db.VarChar(150)
  Estado          Boolean?
  FechaRegistro   DateTime? @db.DateTime
  UsuarioRegistro String?   @db.VarChar(50)
}

model Ic_Oficial {
  IdOficial       Int       @id(map: "PK__Ic_Ofici__814823A50B38A0C8") @db.SmallInt
  Descripcion     String?   @db.VarChar(150)
  Estado          Boolean?
  FechaRegistro   DateTime? @db.DateTime
  UsuarioRegistro String?   @db.VarChar(50)
}

model IC_Pago {
  idEmpresa          Int       @db.SmallInt
  idMoneda           Int       @default(1, map: "DF_IC_Pago_idMoneda") @db.SmallInt
  noPrestamo         String    @db.VarChar(50)
  numeroDocumento    String    @db.VarChar(50)
  fechaProceso       DateTime  @db.DateTime
  capitalPagado      Float?    @db.Money
  interesPagado      Float?    @db.Money
  moraPagada         Float?    @db.Money
  comisionPagada     Float?    @db.Money
  otros              Float?    @db.Money
  montoProceso       Float?    @db.Money
  descripcion        String?   @db.VarChar(150)
  Host               String?   @db.VarChar(50)
  fechaActualizacion DateTime? @db.DateTime
  Usuario            String?   @db.VarChar(50)
  App                String?   @db.VarChar(50)
  IC_Cuenta          IC_Cuenta @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_Pago_IC_Cuenta")

  @@id([idEmpresa, idMoneda, noPrestamo, numeroDocumento], map: "PK_IC_Pago")
  @@index([noPrestamo, idEmpresa, idMoneda, fechaProceso], map: "IX_IC_Pago")
}

model IC_PagoDetalle {
  idEmpresa                  Int       @db.SmallInt
  idMoneda                   Int       @db.SmallInt
  noPrestamo                 String    @db.VarChar(50)
  numCuenta                  String    @db.VarChar(50)
  fechaProceso               DateTime  @db.DateTime
  montoCapital               Float?    @db.Money
  montoInteresesVencidos     Float?    @db.Money
  montoInteresesDelMes       Float?    @db.Money
  MontoGastosAdministrativos Float?    @db.Money
  totalPagado                Float?    @db.Money
  host                       String?   @db.VarChar(30)
  usuario                    String?   @db.VarChar(30)
  fechaActualizacion         DateTime? @db.DateTime
  agencia                    String?   @db.VarChar(100)
  noCuota                    Int?
  referencia                 String?   @db.VarChar(50)
  IC_Cuenta                  IC_Cuenta @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_PagoDetalle_IC_Cuenta")

  @@id([idEmpresa, idMoneda, noPrestamo, numCuenta, fechaProceso], map: "PK_IC_PagoDetalle")
}

model ic_Parametro {
  idParametro                Int                          @id(map: "PK__ic_Parametro__66603565")
  descripcion                String                       @db.VarChar(50)
  tabla                      String?                      @db.VarChar(50)
  campo                      String?                      @db.VarChar(50)
  UnionConTabla              String?                      @db.VarChar(2000)
  tipoDato                   Int?
  tablaOrigen                String?                      @db.VarChar(200)
  camposOrigen               String?                      @db.VarChar(300)
  filtraXempresaCampos       Int?
  JOININCLUIDO               Boolean?
  ic_ParametroXConfiguracion ic_ParametroXConfiguracion[]
}

model ic_ParametroXConfiguracion {
  idParametroXConfiguracion    Int                           @id(map: "PK_ic_ParametroXConfiguracion")
  idEmpresa                    Int                           @db.SmallInt
  idTipoDistribucion           Int
  idConfiguracionDistribucion  BigInt?
  idParametro                  Int
  sqlCondicion                 String?                       @db.VarChar(500)
  sqlDescriptivo               String?                       @db.VarChar(500)
  usuario                      String?                       @db.VarChar(50)
  Orden                        Int?
  IC_ConfiguracionDistribucion IC_ConfiguracionDistribucion? @relation(fields: [idEmpresa, idTipoDistribucion, idConfiguracionDistribucion], references: [idEmpresa, idTipoDistribucion, idConfiguracionDistribucion], onUpdate: NoAction, map: "FK_ic_ParametroXConfiguracion_IC_ConfiguracionDistribucion")
  ic_Parametro                 ic_Parametro                  @relation(fields: [idParametro], references: [idParametro], onUpdate: NoAction, map: "FK_ic_ParametroXConfiguracion_ic_Parametro")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model ic_ParametroxConfiguracionHistoria {
  idParametroxConfiguracion   Int?
  idEmpresa                   Int?      @db.SmallInt
  idTipoDistribucion          Int?
  idConfiguracionDistribucion BigInt?
  idParametro                 Int?
  sqlCondicion                String?   @db.VarChar(500)
  sqlDescriptivo              String?   @db.VarChar(500)
  usuario                     String?   @db.VarChar(50)
  Orden                       Int?
  Host                        String?   @db.VarChar(50)
  App                         String?   @db.NVarChar(200)
  Fechatran                   DateTime? @db.DateTime
  TipoTran                    String?   @db.VarChar(50)

  @@ignore
}

model IC_PasoConvenio {
  idEmpresa       Int        @default(0, map: "DF_IC_PasoConvenio_idEmpresa") @db.SmallInt
  idPaso          Int        @default(0, map: "DF_IC_PasoConvenio_idPaso") @db.SmallInt
  Descripcion     String     @default("", map: "DF_IC_PasoConvenio_Descripcion") @db.VarChar(100)
  IdPasoSiguiente Int        @default(0, map: "DF_Table_1_IdPasoAnterior") @db.SmallInt
  idPasoAnterior  Int        @db.SmallInt
  Estado          Boolean    @default(true, map: "DF_IC_PasoConvenio_Estado")
  Aprobado        Boolean    @default(false, map: "DF_IC_PasoConvenio_Aprobado")
  Denegado        Boolean    @default(false, map: "DF_IC_PasoConvenio_Denegado")
  Evaluacion      Boolean    @default(false, map: "DF_IC_PasoConvenio_Evaluacion")
  Cancelado       Boolean?
  IC_Empresa      IC_Empresa @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_PasoConvenio_IC_Empresa")

  @@id([idEmpresa, idPaso], map: "PK_IC_PasoConvenio")
}

model Ic_PasoJuridico {
  idEmpresa            Int         @db.SmallInt
  idPaso               Int         @db.SmallInt
  Descripcion          String      @db.VarChar(100)
  PasoSiguiente        Int?        @db.SmallInt
  PasoAnterior         Int?        @db.SmallInt
  Imprime              Boolean
  SolicitaComentario   Boolean
  CambioStatusCuenta   Boolean
  Codstatus            String      @db.VarChar(50)
  SolicitaJuicio       Boolean
  PermiteModificarPaso Boolean
  TomaDecision         Boolean     @default(false, map: "DF_Ic_PasoJuridico_TomaDecision")
  PosiblesPasos        String      @default("", map: "DF_Ic_PasoJuridico_PosiblesPasos") @db.VarChar(100)
  Colorea              Boolean
  Estado               Boolean?
  PasoFinal            Boolean?    @default(false, map: "DF_Ic_PasoJuridico_PasoFinal")
  SolicitaMedida       Boolean?
  Diligenciamiento     Boolean?
  Transaccion          Boolean?
  Ic_Juicio            Ic_Juicio[]

  @@id([idEmpresa, idPaso], map: "PK_PasoJuridico")
}

model IC_PERFIL {
  idPerfil                       BigInt                           @id(map: "PK__IC_PERFIL__52593CB8")
  perDescripcion                 String?                          @db.VarChar(200)
  idEmpresa                      Int?                             @db.SmallInt
  MultipleOrigenLlamada          Boolean                          @default(false, map: "dfOrigenLllamda")
  ClasificacionPerfil            Boolean                          @default(false, map: "dfClasificacionPerfil")
  IC_Empresa                     IC_Empresa?                      @relation(fields: [idEmpresa], references: [idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK__ic_perfil__idEmp__0A338187")
  IC_Cobrador                    IC_Cobrador[]
  IC_PermisosClasificacionPerfil IC_PermisosClasificacionPerfil[]
  IC_PROGRAMASXPERFIL            IC_PROGRAMASXPERFIL[]
}

model IC_PeridodoPago {
  idPeriodoPago Int             @id(map: "PK__IC_Perid__D9FC612C48D5A911") @default(autoincrement())
  Descripcion   String?         @db.VarChar(50)
  FechaCreacion DateTime?       @db.DateTime
  IC_Movimiento IC_Movimiento[]
}

model IC_PermisosClasificacionPerfil {
  IdPermisos          BigInt              @id(map: "PK_PermisosOrigen") @default(autoincrement())
  IdPerfil            BigInt
  IdEmpresa           Int                 @db.SmallInt
  IdInventarioTabla   BigInt
  Permitido           Boolean
  estatus             Boolean
  IC_Empresa          IC_Empresa          @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_PermisosEmpresa")
  IC_InventarioTablas IC_InventarioTablas @relation(fields: [IdInventarioTabla], references: [IdInventarioTabla], onUpdate: NoAction, map: "FK_PermisosInventarioTabla")
  IC_PERFIL           IC_PERFIL           @relation(fields: [IdPerfil], references: [idPerfil], onUpdate: NoAction, map: "FK_PermisosPerfil")
}

model ic_PersonaCancelo {
  idEmpresa    Int            @db.SmallInt
  idCancelado  Int            @db.SmallInt
  Descripcion  String?        @db.VarChar(50)
  Estado       Boolean?
  IC_Empresa   IC_Empresa     @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_ic_PersonaCancelo_IC_Empresa")
  IC_Finiquito IC_Finiquito[]

  @@id([idEmpresa, idCancelado], map: "PK_ic_PersonaCancelo")
}

model IC_PlanPago {
  IdEmpresa            Int         @db.SmallInt
  idMoneda             Int         @db.SmallInt
  noPrestamo           String      @db.VarChar(50)
  IdConvenio           Int
  NoCuota              Int
  Capital              Float?      @db.Money
  Interes              Float?      @db.Money
  Mora                 Float?      @db.Money
  Total                Float?      @db.Money
  Abono                Float?      @default(0, map: "DF_IC_PlanPago_Abono") @db.Money
  Saldo                Float?      @default(0, map: "DF_IC_PlanPago_Saldo") @db.Money
  NoDocumento          String?     @db.VarChar(100)
  FechaVence           DateTime?   @db.DateTime
  Cancelado            Boolean?
  FechaCancelado       DateTime?   @db.DateTime
  CAPITALHIST          Float?      @db.Money
  INTERESHIST          Float?      @db.Money
  MORAHIST             Float?      @db.Money
  Honorarios           Float?      @db.Money
  IVA                  Float?      @db.Money
  DeudorPagaHonorarios Boolean?
  FechaPagoCuota       DateTime?   @db.Date
  CostasProcesales     Float?      @db.Money
  IC_Convenio          IC_Convenio @relation(fields: [IdEmpresa, idMoneda, noPrestamo, IdConvenio], references: [idEmpresa, idMoneda, noPrestamo, idConvenio], onUpdate: NoAction, map: "FK_IC_PlanPago_IC_Convenio")

  @@id([IdEmpresa, idMoneda, noPrestamo, IdConvenio, NoCuota], map: "PK_IC_PlanPago")
}

model ic_print_history {
  id_process          Int
  address_id          BigInt
  collector_id        BigInt
  route_id            Int?                @db.SmallInt
  created_date        DateTime?           @db.DateTime
  modified_date       DateTime?           @db.DateTime
  sn_optacheck        Boolean?
  sn_print            Boolean?
  user_id             String?             @db.VarChar(50)
  sn_liquidation      Boolean?
  comment             String?             @db.VarChar(500)
  sn_reprint          Boolean
  cdDireccionHistoria cdDireccionHistoria @relation(fields: [address_id], references: [idDireccionHistoria], onUpdate: NoAction, map: "fk_ic_print_history__cddireccionhistoria")
  IC_Cobrador         IC_Cobrador         @relation(fields: [collector_id], references: [idCobrador], onUpdate: NoAction, map: "fk_ic_print_history__ic_cobrador")
  cdRuta              cdRuta?             @relation(fields: [route_id], references: [id_ruta], onDelete: NoAction, onUpdate: NoAction, map: "fk_ic_print_history__cdruta")

  @@id([id_process, address_id, collector_id], map: "PK__ic_print_history")
  @@index([address_id], map: "idx_ic_print_history_address_id")
  @@index([id_process], map: "idx_ic_print_history_id_process")
  @@index([modified_date], map: "idx_modified_date")
}

model IC_Producto {
  idEmpresa        Int         @db.SmallInt
  idProducto       String      @db.VarChar(50)
  descripcion      String      @db.Char(50)
  Mora             Int?        @db.SmallInt
  Interes          Int?        @db.SmallInt
  Capital          Int?        @db.SmallInt
  maxcuotaconvenio Int?        @db.SmallInt
  IC_Empresa       IC_Empresa  @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK__IC_PRODUC__idEmp__6D6D25A7")
  IC_Cuenta        IC_Cuenta[]

  @@id([idProducto, idEmpresa], map: "PK_co_Producto")
}

model IC_ProductoOrigen {
  IdProductoOrigen     Int                    @id(map: "PK_ProductoOrigen")
  NombreProductoOrigen String                 @db.NVarChar(150)
  Estatus              Boolean
  IC_Cuenta            IC_Cuenta[]
  IC_DescuentoConvenio IC_DescuentoConvenio[]
}

model IC_Profesion {
  idProfesion Int          @id(map: "PK_IC_Profesion") @default(autoincrement())
  Descripcion String?      @db.VarChar(50)
  Estado      Boolean?
  IC_Cliente  IC_Cliente[]
}

model IC_PROGRAMASXPERFIL {
  idPerfil    BigInt
  id_programa Int         @db.SmallInt
  IC_PERFIL   IC_PERFIL   @relation(fields: [idPerfil], references: [idPerfil], onUpdate: NoAction, map: "FK_IC_PROGRAMASXPERFIL_IC_PERFIL")
  GN_PROGRAMA GN_PROGRAMA @relation(fields: [id_programa], references: [Id_Programa], onUpdate: NoAction, map: "FK_IC_PROGRAMASXPERFIL_GN_PROGRAMA")

  @@id([idPerfil, id_programa], map: "PK_IC_PROGRAMASXPERFIL")
}

model IC_PromesaPago {
  idPromesaPago BigInt       @id(map: "PK_co_PromesaPago")
  idEmpresa     Int          @default(1, map: "DF_IC_PromesaPago_idEmpresa") @db.SmallInt
  idMoneda      Int?         @default(1, map: "DF_IC_PromesaPago_idMoneda") @db.SmallInt
  noPrestamo    String?      @db.VarChar(50)
  idCobrador    BigInt?
  fechaGestion  DateTime?    @db.DateTime
  fechaPromesa  DateTime?    @db.DateTime
  monto         Decimal?     @db.Decimal(19, 4)
  comentario    String?      @db.VarChar(5000)
  estado        Int?
  idGestion     BigInt?
  IdConvenio    Int?
  IC_Cobrador   IC_Cobrador? @relation(fields: [idCobrador], references: [idCobrador], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_PromesaPago_IC_Cobrador")
  IC_Cuenta     IC_Cuenta?   @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_PromesaPago_IC_Cuenta")
  IC_Convenio   IC_Convenio? @relation(fields: [idEmpresa, idMoneda, noPrestamo, IdConvenio], references: [idEmpresa, idMoneda, noPrestamo, idConvenio], onUpdate: NoAction, map: "FK_Convenio_PromesasPago")
  IC_Gestion    IC_Gestion?  @relation(fields: [idGestion], references: [idGestion], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_PROMESAPAGO_IC_GESTION")

  @@index([fechaPromesa, monto, idGestion], map: "IDX_IC_PromesaPago")
  @@index([noPrestamo, idEmpresa, idMoneda, fechaGestion, fechaPromesa], map: "IX_IC_PromesaPago")
  @@index([fechaPromesa, monto], map: "idx_promesapago")
}

model IC_Puesto {
  Idpuesto            Int       @id(map: "PK_IC_Puesto")
  NombrePuesto        String?   @db.VarChar(1000)
  FechaRegistro       DateTime? @db.DateTime
  UsuarioRegistro     String?   @db.VarChar(100)
  FechaBaja           DateTime? @db.DateTime
  UsuarioBaja         String?   @db.VarChar(100)
  FechaModificacion   DateTime? @db.DateTime
  UsuarioModificacion String?   @db.VarChar(100)
  Estado              Boolean?
}

model IC_RazonMora {
  IdRazonMora           Int                     @db.SmallInt
  IdEmpresa             Int                     @db.SmallInt
  Descripcion           String                  @db.VarChar(Max)
  Estatus               Boolean
  IC_HistoricoRazonMora IC_HistoricoRazonMora[]

  @@id([IdRazonMora, IdEmpresa], map: "PK_RazonMora")
}

model IC_Referencia {
  idReferencia           BigInt                  @id(map: "PK_IC_Referencia") @default(autoincrement())
  idEmpresa              Int                     @db.SmallInt
  idCliente              BigInt
  idTipoReferencia       Int?
  nombreReferencia       String?                 @db.VarChar(300)
  telefonoReferencia     String?                 @db.VarChar(100)
  lugarTrabajoReferencia String?                 @db.VarChar(300)
  direccionReferencia    String?                 @db.VarChar(300)
  parentesco             String?                 @db.VarChar(100)
  original               Int?                    @default(0, map: "DF__IC_REFERE__origi__2803DB90") @db.SmallInt
  refStatus              Boolean?                @default(true, map: "DF__IC_REFERE__refSt__58A712EB")
  HORAINICIO             Int?
  HORAFIN                Int?
  FechaHoraRegistro      DateTime?               @db.DateTime
  FechaActualizacion     DateTime?               @db.DateTime
  Efectivo               Boolean?
  idCobrador             BigInt?
  idReferenciaOrigen     Int?                    @db.SmallInt
  idCobradorInactiva     BigInt?
  FechaInactiva          DateTime?               @db.DateTime
  IC_Cliente             IC_Cliente              @relation(fields: [idCliente, idEmpresa], references: [idCliente, idEmpresa], onUpdate: NoAction, map: "FK_IC_Referencia_IC_Cliente")
  IC_ReferenciaOrigen    IC_ReferenciaOrigen?    @relation(fields: [idReferenciaOrigen], references: [idReferenciaOrigen], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Referencia_IC_ReferenciaOrigen")
  IC_TipoReferencia      IC_TipoReferencia?      @relation(fields: [idTipoReferencia], references: [idTipoReferencia], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Referencia_IC_TipoReferencia")
  IC_LLamadasPorGestion  IC_LLamadasPorGestion[]

  @@index([idCliente, idEmpresa, refStatus], map: "IDX_IC_REFERENCIA")
  @@index([idCliente, idEmpresa], map: "IX_IC_Referencia")
}

model IC_ReferenciaOrigen {
  idReferenciaOrigen Int             @id(map: "PK_IC_REFERENCIAORIGEN") @db.SmallInt
  Descripcion        String?         @db.VarChar(50)
  Estado             Boolean?
  IC_Referencia      IC_Referencia[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model ic_registro_errores_carga {
  id_evento     Int?
  id_empresa    Int?
  id_moneda     Int?
  no_prestamo   String?   @db.NVarChar(60)
  cod_error     Int?
  cod_severidad Int?
  cod_estado    Int?
  procedimiento String?   @db.NVarChar(60)
  linea_error   Int?
  msj_error     String?   @db.NVarChar(Max)
  tipo_error    String?   @db.NVarChar(60)
  fecha_proceso DateTime? @db.DateTime

  @@ignore
}

model IC_RegistroIgss {
  IdRegistroIgss      Int                @id(map: "PK_IC_RegistroIgss")
  IdRelacionLaboral   Int
  FechaContribucion   DateTime?          @db.Date
  FechaRegistro       DateTime?          @db.DateTime
  UsuarioRegistro     String?            @db.VarChar(100)
  FechaBaja           DateTime?          @db.DateTime
  UsurioBaja          String?            @db.VarChar(100)
  FechaModificacion   DateTime?          @db.DateTime
  UsuarioModificacion String?            @db.VarChar(100)
  Estado              Boolean?
  IC_RelacionLaboral  IC_RelacionLaboral @relation(fields: [IdRelacionLaboral], references: [IdRelacionLaboral], onUpdate: NoAction, map: "FK_IC_RegistroIgss_IC_RelacionLaboral")
}

model IC_RelacionLaboral {
  IdRelacionLaboral   Int               @id(map: "PK_IC_RelacionLaboral")
  IdCliente           Int
  IdCompania          Int
  IdPuesto            Int?
  FechaIngreso        DateTime?         @db.DateTime
  FechaEgreso         DateTime?         @db.DateTime
  FechaRegistro       DateTime?         @db.DateTime
  UsuarioRegistro     String?           @db.VarChar(100)
  FechaBaja           DateTime?         @db.DateTime
  UsuarioBaja         String?           @db.VarChar(100)
  FechaModificacion   DateTime?         @db.DateTime
  UsuarioModificacion String?           @db.VarChar(100)
  Estado              Boolean?
  IC_RegistroIgss     IC_RegistroIgss[]

  @@index([IdRelacionLaboral, IdCliente, IdCompania], map: "idx_IC_RelacionLaboral")
}

model ic_rendimiento_bam {
  IdEmpresa               Int                      @db.SmallInt
  IdMoneda                Int                      @db.SmallInt
  NoPrestamo              String                   @db.VarChar(50)
  Mes                     DateTime                 @db.Date
  CicloCorriente          Int?                     @db.SmallInt
  IdClasificacionCartera  Int?                     @db.SmallInt
  ObjetivoQ               Float?                   @db.Money
  Objetivo_               Float?                   @map("Objetivo$") @db.Money
  ObjetivoGlobal          Float?                   @db.Money
  PagosQ                  Float?                   @db.Money
  Pagos_                  Float?                   @map("Pagos$") @db.Money
  PagosGlobal             Float?                   @db.Money
  IC_ClasificacionCartera IC_ClasificacionCartera? @relation(fields: [IdEmpresa, IdClasificacionCartera], references: [idEmpresa, idClasificacionCartera], onUpdate: NoAction, map: "FK_IC_RENDIMIENTO_BAM__IC_CLASIFICACION_CARTERA")

  @@id([IdEmpresa, IdMoneda, NoPrestamo, Mes], map: "PK_IC_RENDIMIENTO_BAM")
}

model ic_rendimiento_banrural {
  IdEmpresa                                                                      Int                  @db.SmallInt
  NoPrestamo                                                                     String               @db.VarChar(50)
  DireccionesTotales                                                             Int?                 @db.SmallInt
  DireccionesHabilitadas                                                         Int?                 @db.SmallInt
  DireccionesNoHabilitadas                                                       Int?                 @db.SmallInt
  DireccionesSinRuta                                                             Int?                 @db.SmallInt
  DireccionesVisitadas                                                           Int?                 @db.SmallInt
  GestionesLlamadaMes                                                            Int?                 @db.SmallInt
  GestionesVisitaMes                                                             Int?                 @db.SmallInt
  FechaAsignacion                                                                DateTime?            @db.DateTime
  ContagioMedicion                                                               Float?               @db.Money
  ContagioInicioMes                                                              Float?               @db.Money
  ContagioActual                                                                 Float?               @db.Money
  PagosMesQ                                                                      Float?               @db.Money
  EstatusCuenta                                                                  String?              @db.VarChar(50)
  EstatusBanco                                                                   String?              @db.VarChar(50)
  RegionCuenta                                                                   String?              @db.VarChar(50)
  UltimaGestionLlamada                                                           DateTime?            @db.DateTime
  UltimaGestionVisita                                                            DateTime?            @db.DateTime
  UltimaGestionInvestigacion                                                     DateTime?            @db.DateTime
  FechaRendimiento                                                               DateTime             @db.DateTime
  Ciclo                                                                          Int?                 @db.SmallInt
  Observaciones                                                                  String?              @db.VarChar(100)
  PendienteFTP                                                                   Int?                 @db.SmallInt
  FechaCorte                                                                     DateTime?            @db.DateTime
  PagosAsignacionQ                                                               Boolean?
  PagosAsignacion_                                                               Boolean?             @map("PagosAsignacion$")
  AgenciaCobertura                                                               Int?                 @db.SmallInt
  IC_Agencia                                                                     IC_Agencia?          @relation(fields: [AgenciaCobertura, IdEmpresa], references: [idAgencia, idEmpresa], onUpdate: NoAction, map: "fk_rendimiento_agencia")
  IC_StatusCompromiso_IC_StatusCompromisoToic_rendimiento_banrural_EstatusBanco  IC_StatusCompromiso? @relation("IC_StatusCompromisoToic_rendimiento_banrural_EstatusBanco", fields: [EstatusBanco], references: [codStatus], onDelete: NoAction, onUpdate: NoAction, map: "FK__ic_rendim__Estat__536FBE87")
  IC_StatusCompromiso_IC_StatusCompromisoToic_rendimiento_banrural_EstatusCuenta IC_StatusCompromiso? @relation("IC_StatusCompromisoToic_rendimiento_banrural_EstatusCuenta", fields: [EstatusCuenta], references: [codStatus], onDelete: NoAction, onUpdate: NoAction, map: "FK__ic_rendim__Estat__527B9A4E")
  IC_Empresa                                                                     IC_Empresa           @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK__ic_rendim__IdEmp__51877615")

  @@id([IdEmpresa, NoPrestamo, FechaRendimiento], map: "pk_ic_rendimiento_banrural")
}

model IC_Reprogramacion {
  idReprogramacion    BigInt       @id(map: "PK_IC_Reprogramaciones")
  idEmpresa           Int          @default(1, map: "DF_IC_Reprogramacion_idEmpresa") @db.SmallInt
  idMoneda            Int?         @default(1, map: "DF_IC_Reprogramacion_idMoneda") @db.SmallInt
  noPrestamo          String?      @db.VarChar(50)
  idCobrador          BigInt?
  fechaGestion        DateTime?    @db.DateTime
  fechaReprogramacion DateTime?    @db.DateTime
  Observaciones       String?      @db.VarChar(500)
  Gestionado          Int?         @default(0, map: "DF_IC_Reprogramacion_Gestionado") @db.SmallInt
  idGestion           BigInt?
  IC_Cobrador         IC_Cobrador? @relation(fields: [idCobrador], references: [idCobrador], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_Reprogramacion_IC_Cobrador")
  IC_Cuenta           IC_Cuenta?   @relation(fields: [idEmpresa, idMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_IC_Reprogramacion_IC_Cuenta")

  @@index([noPrestamo, idEmpresa, idMoneda, fechaGestion, fechaReprogramacion], map: "IX_IC_Reprogramacion")
}

model IC_ResultadoAccion {
  idEmpresa                       Int                               @db.SmallInt
  idResultadoAccion               Int
  resDescripcion                  String?                           @db.VarChar(50)
  Estado                          Int?
  GestionDomiciliar               Int?
  GestionInvestigacion            Int?
  IC_Empresa                      IC_Empresa                        @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_ResultadoAccion_IC_Empresa")
  IC_ResultadoAccionClasificacion IC_ResultadoAccionClasificacion[]

  @@id([idEmpresa, idResultadoAccion], map: "PK_IC_ResultadoAccion")
}

model IC_ResultadoAccionClasificacion {
  IdResultadoAccionClasificacion Int                         @id(map: "PK_co_ResultadoAccion") @db.SmallInt
  idEmpresa                      Int?                        @db.SmallInt
  idResultadoAccion              Int?
  Descripcion                    String                      @db.VarChar(250)
  tipoAccion                     Int?
  Estado                         Int?
  IC_ResultadoAccion             IC_ResultadoAccion?         @relation(fields: [idEmpresa, idResultadoAccion], references: [idEmpresa, idResultadoAccion], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_ResultadoAccionClasificacion_IC_ResultadoAccion")
  ic_codigo_homologado           ic_codigo_homologado[]
  IC_ResultadoAccionDetalle      IC_ResultadoAccionDetalle[]
}

model IC_ResultadoAccionDetalle {
  idResultadoAccionDetalle              Int                                    @id(map: "PK_IC_ResultadoAccionDetalle") @db.SmallInt
  idResultadoAccionClasificacion        Int                                    @db.SmallInt
  descripcion                           String                                 @db.VarChar(100)
  estado                                Boolean
  efectividad                           Boolean                                @default(true, map: "DF_IC_ResultadoAccionDetalle_efectividad")
  idEmpresa                             Int?                                   @db.SmallInt
  idEquivalencia                        Int?
  IC_EquivalenciaResultadoAccionDetalle IC_EquivalenciaResultadoAccionDetalle? @relation(fields: [idEmpresa, idEquivalencia], references: [idEmpresa, idEquivalencia], onDelete: NoAction, onUpdate: NoAction, map: "FK_IC_ResultadoAccionDetalle_IC_EquivalenciaResultadoAccionDetalle")
  IC_ResultadoAccionClasificacion       IC_ResultadoAccionClasificacion        @relation(fields: [idResultadoAccionClasificacion], references: [IdResultadoAccionClasificacion], onUpdate: NoAction, map: "FK_IC_ResultadoAccionDetalle_IC_ResultadoAccionClasificacion")
  ic_codigo_homologado                  ic_codigo_homologado[]
  ic_codigo_homologado_ctp              ic_codigo_homologado_ctp[]
  IC_Gestion                            IC_Gestion[]

  @@index([idResultadoAccionClasificacion], map: "IDX_IC_ResultadoAccionDetalle")
}

model Ic_Serie {
  IdEmpresa        Int              @db.SmallInt
  Serie            String           @db.Char(10)
  idTipoDoc        String           @db.Char(3)
  Descripcion      String?          @db.NVarChar(50)
  RangoD           BigInt
  RandoH           BigInt
  Estado           Boolean          @default(true, map: "DF_Ic_Serie_Estado")
  Imprime          Boolean?
  idFormato        String?          @db.Char(3)
  IC_Empresa       IC_Empresa       @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_Ic_Serie_IC_Empresa")
  IC_TipoDocumento IC_TipoDocumento @relation(fields: [IdEmpresa, idTipoDoc], references: [IdEmpresa, IdTipoDoc], onUpdate: NoAction, map: "FK_Ic_Serie_IC_TipoDocumento2")

  @@id([IdEmpresa, idTipoDoc, Serie], map: "PK__Ic_Serie__5AD97420")
}

model IC_SituacionCobro {
  idEmpresa                Int                        @db.SmallInt
  idSituacionCobro         Int
  descripcion              String?                    @db.VarChar(180)
  Estado                   Int?
  IC_Empresa               IC_Empresa                 @relation(fields: [idEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_SituacionCobro_IC_Empresa")
  ic_codigo_homologado_ctp ic_codigo_homologado_ctp[]
  IC_Gestion               IC_Gestion[]

  @@id([idSituacionCobro, idEmpresa], map: "PK_co_SituacionCobro")
}

model IC_SituacionExpediente {
  IdSituacionExpediente          Int                              @id(map: "PK_SituacionExpediente") @db.SmallInt
  Descripcion                    String                           @db.NVarChar(100)
  Estado                         Boolean
  IC_SituacionExpedienteHistoria IC_SituacionExpedienteHistoria[]
}

model IC_SituacionExpedienteHistoria {
  IdSituacionExpedienteHistoria BigInt                 @id(map: "PK_SituacionExpedienteHistoria") @default(autoincrement())
  FechaOperacion                DateTime               @db.DateTime
  noPrestamo                    String                 @db.VarChar(50)
  IdEmpresa                     Int                    @db.SmallInt
  IdMoneda                      Int                    @db.SmallInt
  IdSituacionExpediente         Int                    @db.SmallInt
  Descripcion                   String?                @db.VarChar(Max)
  FechaRegistro                 DateTime?              @db.DateTime
  IC_Cuenta                     IC_Cuenta              @relation(fields: [IdEmpresa, IdMoneda, noPrestamo], references: [idEmpresa, idMoneda, noPrestamo], onUpdate: NoAction, map: "FK_SituacionExHist")
  IC_SituacionExpediente        IC_SituacionExpediente @relation(fields: [IdSituacionExpediente], references: [IdSituacionExpediente], onUpdate: NoAction, map: "FK_SituacionExpediente")

  @@index([FechaOperacion, noPrestamo, IdEmpresa, IdMoneda, IdSituacionExpediente], map: "IDX_IC_SituacionExpedienteHistoria")
}

model IC_SituacionxResultadoaccion {
  idEmpresa                      Int @db.SmallInt
  idResultadoAccionClasificacion Int @db.SmallInt
  idSituacionCobro               Int @db.SmallInt

  @@id([idEmpresa, idResultadoAccionClasificacion, idSituacionCobro], map: "PK_IC_SituacionxResultadoaccion")
}

model IC_StatusCompromiso {
  codStatus                                                                          String                      @id(map: "PK_ESTATUS_COMPROMISOS") @db.VarChar(50)
  descripcionStatus                                                                  String                      @db.Char(50)
  cobradorQueAplica                                                                  String?                     @db.Char(2)
  PuedeGestionar                                                                     Boolean?
  ic_account_status_history                                                          ic_account_status_history[]
  IC_Cuenta                                                                          IC_Cuenta[]
  ic_rendimiento_banrural_IC_StatusCompromisoToic_rendimiento_banrural_EstatusBanco  ic_rendimiento_banrural[]   @relation("IC_StatusCompromisoToic_rendimiento_banrural_EstatusBanco")
  ic_rendimiento_banrural_IC_StatusCompromisoToic_rendimiento_banrural_EstatusCuenta ic_rendimiento_banrural[]   @relation("IC_StatusCompromisoToic_rendimiento_banrural_EstatusCuenta")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_TablaInteres {
  idempresa   Int    @db.SmallInt
  idproducto  Int    @db.SmallInt
  correlativo Int
  dedia       Int
  adia        Int
  demonto     Int
  amonto      Int
  tipocobro   String @db.Char(1)
  monto       Float  @db.Money

  @@ignore
}

model IC_TelefonoCompania {
  IdTelefonoCompania  Int         @id(map: "PK_IC_TelefonoCompania")
  NumeroTelefono      String?     @db.VarChar(100)
  FechaRegistro       DateTime?   @db.DateTime
  UsuarioRegistro     String?     @db.VarChar(100)
  FechaBaja           DateTime?   @db.DateTime
  UsuarioBaja         String?     @db.VarChar(100)
  FechaModificacion   DateTime?   @db.DateTime
  UsuarioModificacion String?     @db.VarChar(100)
  IdCompania          Int
  Estado              Boolean?
  Observacion         String?     @db.VarChar(150)
  IC_Compania         IC_Compania @relation(fields: [IdCompania], references: [IdCompania], onUpdate: NoAction, map: "FK_IC_TelefonoCompania_IC_Compania")
}

model IC_TelefonosEmpresaCliente {
  IdTelefonos        BigInt             @id(map: "PK_TelefonoEmpresasCliente") @default(autoincrement())
  Telefono           String?            @db.NVarChar(12)
  IdEmpresasCliente  BigInt
  Estatus            Boolean
  IdCodigoPais       BigInt
  CodigoArea         String?            @db.VarChar(50)
  IC_CodigoPais      IC_CodigoPais      @relation(fields: [IdCodigoPais], references: [IdCodigoPais], onUpdate: NoAction, map: "FK_CodigoPais_Telefonos")
  IC_EmpresasCliente IC_EmpresasCliente @relation(fields: [IdEmpresasCliente], references: [IdEmpresasCliente], onUpdate: NoAction, map: "FK_EmpresasCliente_TelefonosEmpresaCliente")
}

model ic_tipo_cliente {
  cod_tipo_cliente Int      @id(map: "PK__ic_tipo___304F7B4D300F11AC") @db.SmallInt
  id_empresa       Int?     @db.SmallInt
  id_cliente       BigInt?
  descripcion      String?  @db.VarChar(150)
  estado           Boolean?
}

model IC_Tipocobrador {
  idTipocobrador Int           @id(map: "PK_IC_Tipocobrador")
  Descripcion    String        @db.VarChar(50)
  IC_Cobrador    IC_Cobrador[]
}

model Ic_TipoCuenta {
  IdTipoCuenta    Int       @id(map: "PK__Ic_TipoC__9CCA2850B1F7C209") @db.SmallInt
  Descripcion     String?   @db.VarChar(150)
  Estado          Boolean?
  FechaRegistro   DateTime? @db.DateTime
  UsuarioRegistro String?   @db.VarChar(50)
}

model IC_TipoDocumento {
  IdEmpresa     Int             @db.SmallInt
  IdTipoDoc     String          @db.Char(3)
  Descripcion   String?         @db.VarChar(100)
  Estado        Boolean?
  IC_Empresa    IC_Empresa      @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_TipoDocumento_IC_Empresa")
  IC_Movimiento IC_Movimiento[]
  Ic_Serie      Ic_Serie[]

  @@id([IdEmpresa, IdTipoDoc], map: "PK_IC_TipoDocumento")
}

model IC_TipoGestion {
  IdTipoGestion Int         @id(map: "PK_TipoGestion") @db.SmallInt
  Descripcion   String?     @db.VarChar(50)
  Estado        Boolean?
  IC_Cuenta     IC_Cuenta[]
}

model IC_TipoMovimiento {
  IdEmpresa     Int             @db.SmallInt
  IdTipoMov     String          @db.Char(3)
  Descripcion   String?         @db.VarChar(100)
  Operacion     String?         @db.Char(12)
  Estado        Boolean?
  IC_Empresa    IC_Empresa      @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_TipoMovimiento_IC_Empresa")
  IC_Movimiento IC_Movimiento[]

  @@id([IdEmpresa, IdTipoMov], map: "PK_IC_TipoMovimiento")
}

model IC_TipoOrigenLLamada {
  IdTipoOrigen          Int                     @id(map: "PK_TipoOrigenLLamada") @default(autoincrement())
  Descricion            String                  @db.NVarChar(200)
  Estado                Boolean                 @default(true, map: "DF__IC_TipoOr__Estad__5BA6A883")
  IC_LLamadasPorGestion IC_LLamadasPorGestion[]
}

model IC_TipoPago {
  IdEmpresa      Int              @db.SmallInt
  IdTipoPago     String           @db.Char(3)
  Descripcion    String?          @db.VarChar(100)
  Estado         Boolean?
  UsaBanco       Boolean?
  IC_Empresa     IC_Empresa       @relation(fields: [IdEmpresa], references: [idEmpresa], onUpdate: NoAction, map: "FK_IC_TipoPago_IC_Empresa")
  IC_MovimientoD IC_MovimientoD[]

  @@id([IdEmpresa, IdTipoPago], map: "PK_IC_TipoPago")
}

model IC_TipoReferencia {
  idTipoReferencia Int             @id(map: "PK_co_TipoReferencia")
  descripcion      String?         @db.VarChar(50)
  IC_Referencia    IC_Referencia[]
}

model IC_TIPOTRANSACCION {
  IdTipoTransaccion Int                @id(map: "PK_TIPOTRANSACCION") @db.SmallInt
  Descripcion       String             @db.NVarChar(100)
  Estado            Boolean
  Ic_MedidasJuicio  Ic_MedidasJuicio[]
}

model ic_TipoTransaccionBoleta {
  idtransaccion  Int              @id(map: "PK__ic_TipoT__4EA33110E4215595") @default(autoincrement())
  idEmpresa      Int?
  Descripcion    String?          @db.VarChar(50)
  Estatus        Boolean?
  Ic_Boleta_Pago Ic_Boleta_Pago[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_Tmp_ClientesBuscados {
  Usuario        String  @db.VarChar(50)
  idCliente      BigInt  @default(autoincrement())
  nombreCompleto String? @db.VarChar(400)
  identificacion String? @db.VarChar(32)
  nit            String? @db.VarChar(25)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model IC_Tmp_ReportesCoincidencias {
  Usuario    String? @db.VarChar(50)
  idEmpresa  Int?    @db.SmallInt
  noPrestamo String? @db.VarChar(50)

  @@ignore
}

model IC_visita {
  idVisita            BigInt              @id(map: "PK__IC_visita__6521F869")
  idGestion           BigInt
  idDireccionHistoria BigInt
  fechaVisita         DateTime?           @db.DateTime
  montoPago           Float?              @db.Money
  EstatusVisita       Int?
  TipoVisita          Int?
  fechaRespuesta      DateTime?           @db.DateTime
  GestorImpreso       String?             @db.VarChar(50)
  FechaImpresion      DateTime?           @db.DateTime
  IDCOBRADOR          BigInt?
  IDGESTIONRESPUESTA  BigInt?
  IC_Cobrador         IC_Cobrador?        @relation(fields: [IDCOBRADOR], references: [idCobrador], onDelete: NoAction, onUpdate: NoAction, map: "FK__IC_VISITA__IDCOB__7BD05397")
  cdDireccionHistoria cdDireccionHistoria @relation(fields: [idDireccionHistoria], references: [idDireccionHistoria], onUpdate: NoAction, map: "FK_IC_visita_cdDireccionHistoria")
  IC_Gestion          IC_Gestion          @relation(fields: [idGestion], references: [idGestion], onUpdate: NoAction, map: "FK__IC_visita__idGes__66161CA2")
  IC_CartaXVisita     IC_CartaXVisita[]
}

model IC_VUELTACARTERA {
  IDCORRELATIVO                BigInt                       @default(autoincrement())
  IDEMPRESA                    Int                          @db.SmallInt
  idConfiguracionDistribucion  BigInt
  idTipoDistribucion           Int
  IDCOBRADOR                   BigInt
  NODEVUELTA                   Int?                         @db.SmallInt
  FECHAINICIOVUELTA            DateTime?                    @db.DateTime
  FECHAFINVUELTA               DateTime?                    @db.DateTime
  ESTADO                       Boolean?
  IC_Cobrador                  IC_Cobrador                  @relation(fields: [IDCOBRADOR], references: [idCobrador], onUpdate: NoAction, map: "FK_IC_VUELTACARTERA_IC_Cobrador")
  IC_ConfiguracionDistribucion IC_ConfiguracionDistribucion @relation(fields: [IDEMPRESA, idTipoDistribucion, idConfiguracionDistribucion], references: [idEmpresa, idTipoDistribucion, idConfiguracionDistribucion], onUpdate: NoAction, map: "FK_IC_VUELTACARTERA_IC_ConfiguracionDistribucion")

  @@id([IDCORRELATIVO, IDEMPRESA, IDCOBRADOR, idConfiguracionDistribucion, idTipoDistribucion], map: "PK__IC_VUELTACARTERA__3FD07829")
}

model IC_Zona {
  IdZona               Int                    @id(map: "PK_IC_Zona")
  NombreZona           String?                @db.VarChar(1000)
  IC_Colonia           IC_Colonia[]
  IC_DireccionCompania IC_DireccionCompania[]
}

model PU_Contactos {
  id                String           @id(map: "PK__PU_Conta__3213E83F65735664") @default(dbgenerated("newid()"), map: "DF__PU_Contactos__id__08119CAB") @db.UniqueIdentifier
  nombreCompleto    String           @db.VarChar(150)
  origenInformacion Int
  tipoContacto      Int
  idPerfil          String           @db.UniqueIdentifier
  PU_Perfil         PU_Perfil        @relation(fields: [idPerfil], references: [id], onUpdate: NoAction, map: "FK__PU_Contac__idPer__0905C0E4")
  PU_TiposOrigen    PU_TiposOrigen   @relation(fields: [origenInformacion], references: [id], onUpdate: NoAction, map: "FK__PU_Contac__orige__09F9E51D")
  PU_TiposContacto  PU_TiposContacto @relation(fields: [tipoContacto], references: [id], onUpdate: NoAction, map: "FK__PU_Contac__tipoC__0AEE0956")
}

model PU_Correos {
  id                String         @id(map: "PK__PU_Corre__3213E83FD58045EE") @default(dbgenerated("newid()"), map: "DF__PU_Correos__id__6F45EEE1") @db.UniqueIdentifier
  correo            String         @db.VarChar(150)
  idPerfil          String         @db.UniqueIdentifier
  origenInformacion Int
  PU_Perfil         PU_Perfil      @relation(fields: [idPerfil], references: [id], onUpdate: NoAction, map: "FK__PU_Correo__idPer__703A131A")
  PU_TiposOrigen    PU_TiposOrigen @relation(fields: [origenInformacion], references: [id], onUpdate: NoAction, map: "FK__PU_Correo__orige__712E3753")
}

model PU_Direcciones {
  id                String         @id(map: "PK__PU_Direc__3213E83F8D2FB8EA") @default(dbgenerated("newid()"), map: "DF__PU_Direccion__id__034CE78E") @db.UniqueIdentifier
  departamento      String         @db.VarChar(50)
  municipio         String         @db.VarChar(50)
  zona              Int
  colonia           String?        @db.VarChar(50)
  direccion         String         @db.VarChar(150)
  referencia        String?        @db.VarChar(150)
  origenInformacion Int
  idPerfil          String         @db.UniqueIdentifier
  PU_Perfil         PU_Perfil      @relation(fields: [idPerfil], references: [id], onUpdate: NoAction, map: "FK__PU_Direcc__idPer__04410BC7")
  PU_TiposOrigen    PU_TiposOrigen @relation(fields: [origenInformacion], references: [id], onUpdate: NoAction, map: "FK__PU_Direcc__orige__05353000")
}

model PU_Documentos {
  id                String            @id(map: "PK__PU_Docum__3213E83F81F65186") @default(dbgenerated("newid()"), map: "DF__PU_Documento__id__6A8139C4") @db.UniqueIdentifier
  tipo              Int
  documento         String            @db.VarChar(25)
  idPerfil          String            @db.UniqueIdentifier
  PU_Perfil         PU_Perfil         @relation(fields: [idPerfil], references: [id], onUpdate: NoAction, map: "FK__PU_Docume__idPer__6B755DFD")
  PU_TiposDocumento PU_TiposDocumento @relation(fields: [tipo], references: [id], onUpdate: NoAction, map: "FK__PU_Documen__tipo__6C698236")
}

model PU_Empleos {
  id                                       String         @id(map: "PK__PU_Emple__3213E83FFB1CA50E") @default(dbgenerated("newid()"), map: "DF__PU_Empleos__id__7D940E38") @db.UniqueIdentifier
  empresa                                  String         @db.UniqueIdentifier
  puesto                                   String         @db.VarChar(50)
  fechaInicio                              DateTime       @db.Date
  fechaFin                                 DateTime?      @db.Date
  idPerfil                                 String         @db.UniqueIdentifier
  origenInformacion                        Int
  PU_Perfil_PU_Empleos_empresaToPU_Perfil  PU_Perfil      @relation("PU_Empleos_empresaToPU_Perfil", fields: [empresa], references: [id], onUpdate: NoAction, map: "FK__PU_Empleo__empre__00707AE3")
  PU_Perfil_PU_Empleos_idPerfilToPU_Perfil PU_Perfil      @relation("PU_Empleos_idPerfilToPU_Perfil", fields: [idPerfil], references: [id], onUpdate: NoAction, map: "FK__PU_Empleo__idPer__7E883271")
  PU_TiposOrigen                           PU_TiposOrigen @relation(fields: [origenInformacion], references: [id], onUpdate: NoAction, map: "FK__PU_Empleo__orige__7F7C56AA")
}

model PU_Generos {
  id        Int         @id(map: "PK__PU_Gener__3213E83F900C2AA6") @default(autoincrement())
  genero    String      @db.VarChar(50)
  PU_Perfil PU_Perfil[]
}

model PU_Nombres {
  id        String    @id(map: "PK__PU_Nombr__3213E83F5C6AE4ED") @default(dbgenerated("newid()"), map: "DF__PU_Nombres__id__79C37D54") @db.UniqueIdentifier
  nombre    String    @db.VarChar(50)
  idPerfil  String    @db.UniqueIdentifier
  PU_Perfil PU_Perfil @relation(fields: [idPerfil], references: [id], onUpdate: NoAction, map: "FK__PU_Nombre__idPer__7AB7A18D")
}

model PU_Perfil {
  id                                        String              @id(map: "PK__PU_Perfi__3213E83F661CC905") @default(dbgenerated("newid()"), map: "DF__PU_Perfil__id__63D43C35") @db.UniqueIdentifier
  genero                                    Int?
  primerApellido                            String?             @db.VarChar(50)
  segundoApellido                           String?             @db.VarChar(50)
  tipo                                      Int
  razonSocial                               String?             @db.VarChar(150)
  fecha                                     DateTime?           @db.Date
  observaciones                             String?             @db.VarChar(500)
  nombreEjecutivo                           BigInt
  personaUnica                              Boolean?            @default(false, map: "DF__PU_Perfil__perso__64C8606E")
  PU_Generos                                PU_Generos?         @relation(fields: [genero], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__PU_Perfil__gener__65BC84A7")
  IC_Cobrador                               IC_Cobrador         @relation(fields: [nombreEjecutivo], references: [idCobrador], onUpdate: NoAction, map: "FK__PU_Perfil__nombr__67A4CD19")
  PU_TiposPersona                           PU_TiposPersona     @relation(fields: [tipo], references: [id], onUpdate: NoAction, map: "FK__PU_Perfil__tipo__66B0A8E0")
  PU_Contactos                              PU_Contactos[]
  PU_Correos                                PU_Correos[]
  PU_Direcciones                            PU_Direcciones[]
  PU_Documentos                             PU_Documentos[]
  PU_Empleos_PU_Empleos_empresaToPU_Perfil  PU_Empleos[]        @relation("PU_Empleos_empresaToPU_Perfil")
  PU_Empleos_PU_Empleos_idPerfilToPU_Perfil PU_Empleos[]        @relation("PU_Empleos_idPerfilToPU_Perfil")
  PU_Nombres                                PU_Nombres[]
  PU_ReferenciasWeb                         PU_ReferenciasWeb[]
  PU_Telefonos                              PU_Telefonos[]
}

model PU_ReferenciasWeb {
  id                String            @id(map: "PK__PU_Refer__3213E83F2D26DC33") @default(dbgenerated("newid()"), map: "DF__PU_Referenci__id__0DCA7601") @db.UniqueIdentifier
  tipo              Int
  origenInformacion Int
  link              String            @db.VarChar(150)
  idPerfil          String            @db.UniqueIdentifier
  PU_Perfil         PU_Perfil         @relation(fields: [idPerfil], references: [id], onUpdate: NoAction, map: "FK__PU_Refere__idPer__0EBE9A3A")
  PU_TiposOrigen    PU_TiposOrigen    @relation(fields: [origenInformacion], references: [id], onUpdate: NoAction, map: "FK__PU_Refere__orige__0FB2BE73")
  PU_TiposPaginaWeb PU_TiposPaginaWeb @relation(fields: [tipo], references: [id], onUpdate: NoAction, map: "FK__PU_Referen__tipo__10A6E2AC")
}

model PU_Telefonos {
  id                String           @id(map: "PK__PU_Telef__3213E83F5827D113") @default(dbgenerated("newid()"), map: "DF__PU_Telefonos__id__740AA3FE") @db.UniqueIdentifier
  codigoPais        String           @db.VarChar(10)
  telefono          String           @db.VarChar(15)
  tipoTelefono      Int
  idPerfil          String           @db.UniqueIdentifier
  origenInformacion Int
  PU_Perfil         PU_Perfil        @relation(fields: [idPerfil], references: [id], onUpdate: NoAction, map: "FK__PU_Telefo__idPer__74FEC837")
  PU_TiposOrigen    PU_TiposOrigen   @relation(fields: [origenInformacion], references: [id], onUpdate: NoAction, map: "FK__PU_Telefo__orige__75F2EC70")
  PU_TiposTelefono  PU_TiposTelefono @relation(fields: [tipoTelefono], references: [id], onUpdate: NoAction, map: "FK__PU_Telefo__tipoT__76E710A9")
}

model PU_TiposAccion {
  id     Int     @id(map: "PK__PU_Tipos__3213E83F7BC6A97D") @default(autoincrement())
  accion String? @db.VarChar(50)
}

model PU_TiposContacto {
  id           Int            @id(map: "PK__PU_Tipos__3213E83F6C42DCA1") @default(autoincrement())
  tipoContacto String         @db.VarChar(50)
  PU_Contactos PU_Contactos[]
}

model PU_TiposDocumento {
  id            Int             @id(map: "PK__PU_Tipos__3213E83FE4FEA5D7") @default(autoincrement())
  tipoDocumento String          @db.VarChar(50)
  PU_Documentos PU_Documentos[]
}

model PU_TiposOrigen {
  id                Int                 @id(map: "PK__PU_Tipos__3213E83F29DD9857") @default(autoincrement())
  tipoOrigen        String              @db.VarChar(50)
  PU_Contactos      PU_Contactos[]
  PU_Correos        PU_Correos[]
  PU_Direcciones    PU_Direcciones[]
  PU_Empleos        PU_Empleos[]
  PU_ReferenciasWeb PU_ReferenciasWeb[]
  PU_Telefonos      PU_Telefonos[]
}

model PU_TiposPaginaWeb {
  id                Int                 @id(map: "PK__PU_Tipos__3213E83F48C22A24") @default(autoincrement())
  tipoPaginaWeb     String              @db.VarChar(50)
  PU_ReferenciasWeb PU_ReferenciasWeb[]
}

model PU_TiposPersona {
  id          Int         @id(map: "PK__PU_Tipos__3213E83F899FBB0F") @default(autoincrement())
  tipoPersona String      @db.VarChar(50)
  PU_Perfil   PU_Perfil[]
}

model PU_TiposTabla {
  id        Int    @id(map: "PK__PU_Tipos__3213E83F79CE93D0") @default(autoincrement())
  tipoTabla String @db.VarChar(50)
}

model PU_TiposTelefono {
  id           Int            @id(map: "PK__PU_Tipos__3213E83F79C5F1E8") @default(autoincrement())
  tipoTelefono String         @db.VarChar(50)
  PU_Telefonos PU_Telefonos[]
}

model reporte_bitacora {
  id_evento        BigInt          @id(map: "PK_ReporteBitacora") @default(autoincrement())
  id_reporte       Int?
  id_usuario       BigInt?
  fecha_generacion DateTime?       @db.DateTime
  reporte_header   reporte_header? @relation(fields: [id_reporte], references: [id_reporte], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReportesBitacoras_Reportes")
  IC_Cobrador      IC_Cobrador?    @relation(fields: [id_usuario], references: [idCobrador], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReportesBitacoras_Usuarios")
}

model reporte_detalle {
  id_reporte         Int
  nro_columna        Int
  txt_nombre_col     String?          @db.VarChar(250)
  id_tipo_dato       Int?
  txt_nombre_reporte String?          @db.VarChar(250)
  nro_orden          Int?
  sn_total           Int?
  sn_muestra         Int?
  sn_activo          Int?
  reporte_header     reporte_header   @relation(fields: [id_reporte], references: [id_reporte], onUpdate: NoAction, map: "fk_reporte_header_detalle")
  ttipo_dato         ttipo_dato?      @relation(fields: [id_tipo_dato], references: [id_tipo_dato], onDelete: NoAction, onUpdate: NoAction, map: "fk_detalle_tipo_dato")
  reporte_filtro     reporte_filtro[]

  @@id([id_reporte, nro_columna], map: "pk_reporte_detalle")
}

model reporte_filtro {
  id_reporte       Int
  nro_filtro       Int
  nro_columna      Int
  id_tipo_operador Int?
  txt_valor        String?         @db.VarChar(250)
  sn_default       Int?
  sn_activo        Int?
  sn_multiple      Boolean?        @default(false, map: "DF__reporte_f__sn_mu__1DF2C376")
  id_comando       Int?
  sn_anidado       Boolean?        @default(false, map: "DF__reporte_f__sn_an__1EE6E7AF")
  txt_patron       String?         @db.VarChar(20)
  sn_obligatorio   Int?
  te_comando_sql   te_comando_sql? @relation(fields: [id_comando], references: [id_comando], onDelete: NoAction, onUpdate: NoAction, map: "fk_filtro_comando")
  reporte_detalle  reporte_detalle @relation(fields: [id_reporte, nro_columna], references: [id_reporte, nro_columna], onUpdate: NoAction, map: "fk_reporte_columna_filtro")
  ttipo_operador   ttipo_operador? @relation(fields: [id_tipo_operador], references: [id_tipo_operador], onDelete: NoAction, onUpdate: NoAction, map: "fk_reporte_filtro_operador")

  @@id([id_reporte, nro_filtro, nro_columna], map: "pk_reporte_filtro")
}

model reporte_header {
  id_reporte                Int                        @id(map: "pk_reporte_header")
  txt_titulo                String?                    @db.VarChar(250)
  txt_subtitulo             String?                    @db.VarChar(250)
  txt_origen                String?                    @db.VarChar(250)
  cod_usuario_creacion      String?                    @db.VarChar(50)
  fec_creacion              DateTime?                  @db.DateTime
  sn_activo                 Int?
  sn_muestratitulo          Boolean?
  txt_nombreHoja            String?                    @db.VarChar(250)
  IdTipoClasificacion       Int?
  idEmpresa                 Int?                       @db.SmallInt
  reporte_tipoClasificacion reporte_tipoClasificacion? @relation(fields: [IdTipoClasificacion], references: [IdTipoClasificacion], onDelete: NoAction, onUpdate: NoAction, map: "FK_ClasificacionTipoHeader")
  IC_Empresa                IC_Empresa?                @relation(fields: [idEmpresa], references: [idEmpresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_EmpresaReporteHeader")
  reporte_bitacora          reporte_bitacora[]
  reporte_detalle           reporte_detalle[]
  reporte_usuario           reporte_usuario[]
  trole_report              trole_report[]
}

model reporte_tipoClasificacion {
  IdTipoClasificacion Int              @id(map: "PK_tipoclasificacionreport")
  Descripcion         String           @db.VarChar(100)
  Estado              Boolean
  reporte_header      reporte_header[]
}

model reporte_usuario {
  cod_usuario    String         @db.VarChar(25)
  id_reporte     Int
  sn_activo      Int?
  reporte_header reporte_header @relation(fields: [id_reporte], references: [id_reporte], onUpdate: NoAction, map: "fk_reporte")

  @@id([cod_usuario, id_reporte], map: "pk_reporte_usuario")
}

model te_comando_sql {
  id_comando        Int                @id(map: "pk_te_comando_sql")
  txt_comando_sql   String?            @db.VarChar(1000)
  id_tipo_comando   Int?
  sn_activo         Int?
  user_creation     String?            @db.VarChar(25)
  fec_creation      DateTime?          @db.DateTime
  txt_titulo        String?            @db.VarChar(100)
  ttipo_comando_sql ttipo_comando_sql? @relation(fields: [id_tipo_comando], references: [id_tipo_comando], onDelete: NoAction, onUpdate: NoAction, map: "fk_ttipo_comando_sql")
  reporte_filtro    reporte_filtro[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_Boletas19167 {
  process_id         Int?
  row_id             Int
  F10                String? @db.VarChar(1250)
  F11                String? @db.VarChar(1250)
  F12                String? @db.VarChar(1250)
  F13                String? @db.VarChar(1250)
  F14                String? @db.VarChar(1250)
  F15                String? @db.VarChar(1250)
  F16                String? @db.VarChar(1250)
  F17                String? @db.VarChar(1250)
  F18                String? @db.VarChar(1250)
  F19                String? @db.VarChar(1250)
  F2                 String? @db.VarChar(1250)
  F20                String? @db.VarChar(1250)
  F21                String? @db.VarChar(1250)
  F22                String? @db.VarChar(1250)
  F3                 String? @db.VarChar(1250)
  F4                 String? @db.VarChar(1250)
  F5                 String? @db.VarChar(1250)
  F6                 String? @db.VarChar(1250)
  F7                 String? @db.VarChar(1250)
  F8                 String? @db.VarChar(1250)
  F9                 String? @db.VarChar(1250)
  REPORTE_DE_BOLETAS String? @map("REPORTE DE BOLETAS") @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_carga19192 {
  process_id             Int?
  row_id                 Int?
  Agencia_Cobro          String?   @db.VarChar(1250)
  Area                   String?   @db.VarChar(1250)
  Cedula                 String?   @db.VarChar(1250)
  Cod_estatus            Int?
  Col_De_Empresa         String?   @db.VarChar(1250)
  Colonia                String?   @db.VarChar(1250)
  Colonia_Aval           String?   @db.VarChar(1250)
  Colonia_Empresa_Aval   String?   @db.VarChar(1250)
  Comentariosolicitud    String?   @db.VarChar(1250)
  Cuotasatrasadas        Int?
  Cuotaspactadas         Int?
  Cuotaspagadas          Int?
  Cuotaspagosmora        Int?
  Departamento           String?   @db.VarChar(1250)
  Departamento_Aval      String?   @db.VarChar(1250)
  Departamento_Emp_Aval  String?   @db.VarChar(1250)
  Departamento_Empresa   String?   @db.VarChar(1250)
  Diasdeatraso           String?   @db.VarChar(1250)
  Direccion              String?   @db.VarChar(1250)
  Direccion_Aval         String?   @db.VarChar(1250)
  Direccion_Empresa      String?   @db.VarChar(1250)
  Direccion_Empresa_Aval String?   @db.VarChar(1250)
  Empresa_Aval           String?   @db.VarChar(1250)
  Fecha_actualizacion    DateTime? @db.SmallDateTime
  Fecha_Nacimiento_Aval  DateTime? @db.SmallDateTime
  Fechacancelacion       DateTime? @db.SmallDateTime
  Fechacastigado         DateTime? @db.SmallDateTime
  Fechainicioprestamo    DateTime? @db.SmallDateTime
  FechaNacimiento        DateTime? @db.SmallDateTime
  Fechaproximopago       DateTime? @db.SmallDateTime
  Fechaultimopago        DateTime? @db.SmallDateTime
  Gastosdecobranza       String?   @db.VarChar(1250)
  Id_Aval                Int?
  Id_Empresa             Int?
  Id_Empresa_Aval        Int?
  IdclienteEmpresa       Int?
  Idcobrador             Int?
  Idempresa              Int?
  Idmoneda               Int?
  idproducto             Int?
  Idtipo_Empresa         Int?
  Idtipo_Empresa_Aval    Int?
  Interes                Decimal?  @db.Decimal(18, 6)
  Juicio                 String?   @db.VarChar(1250)
  Mensualidad            Decimal?  @db.Decimal(18, 6)
  Montoultimopago        Decimal?  @db.Decimal(18, 6)
  Morosidad              String?   @db.VarChar(1250)
  Municipio              String?   @db.VarChar(1250)
  Municipio_Aval         String?   @db.VarChar(1250)
  Municipio_Emp_Aval     String?   @db.VarChar(1250)
  Municipio_Empresa      String?   @db.VarChar(1250)
  Nit                    String?   @db.VarChar(1250)
  Nombre_Aval            String?   @db.VarChar(1250)
  Nombre_Empresa         String?   @db.VarChar(1250)
  Nombrecompleto         String?   @db.VarChar(1250)
  Noprestamo             String?   @db.VarChar(1250)
  Primerapellido         String?   @db.VarChar(1250)
  Primernombre           String?   @db.VarChar(1250)
  Producto               String?   @db.VarChar(1250)
  Puesto                 String?   @db.VarChar(1250)
  Ref_1                  String?   @db.VarChar(1250)
  Ref_2                  String?   @db.VarChar(1250)
  Ref_3                  String?   @db.VarChar(1250)
  Ref_4                  String?   @db.VarChar(1250)
  Ref_Aval_1             String?   @db.VarChar(1250)
  Ref_Aval_2             String?   @db.VarChar(1250)
  Region                 String?   @db.VarChar(1250)
  Saldo_Actual           Decimal?  @db.Decimal(18, 6)
  Saldo_Capital          Decimal?  @db.Decimal(18, 6)
  Segundoapellido        String?   @db.VarChar(1250)
  Segundonombre          String?   @db.VarChar(1250)
  Tasa                   Decimal?  @db.Decimal(18, 6)
  Tel_Aval_Laboral_1     String?   @db.VarChar(1250)
  Tel_Aval_Laboral_2     String?   @db.VarChar(1250)
  Tel_Aval_Otro_1        String?   @db.VarChar(1250)
  Tel_Aval_Otro_2        String?   @db.VarChar(1250)
  Tel_Aval_Otro_3        String?   @db.VarChar(1250)
  Tel_Aval_Personal      String?   @db.VarChar(1250)
  Tel_Otro_1             String?   @db.VarChar(1250)
  Tel_Otro_2             String?   @db.VarChar(1250)
  Tel_Otro_3             String?   @db.VarChar(1250)
  Tel_Personal_1         String?   @db.VarChar(1250)
  Tel_Personal_2         String?   @db.VarChar(1250)
  Tel_Personal_3         String?   @db.VarChar(1250)
  Tel_Ref_1              String?   @db.VarChar(1250)
  Tel_Ref_2              String?   @db.VarChar(1250)
  Tel_Ref_3              String?   @db.VarChar(1250)
  Tel_Ref_4              String?   @db.VarChar(1250)
  Tel_Ref_Aval_1         String?   @db.VarChar(1250)
  Tel_Ref_Aval_2         String?   @db.VarChar(1250)
  TipoCuenta             String?   @db.VarChar(1250)
  TipoGestion            String?   @db.VarChar(1250)
  Zona                   String?   @db.VarChar(1250)
  Zona_Aval              String?   @db.VarChar(1250)
  Zona_Empresa           String?   @db.VarChar(1250)
  Zona_Empresa_Aval      String?   @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_carga19193 {
  process_id             Int?
  row_id                 Int?
  Agencia_Cobro          String?   @db.VarChar(1250)
  Area                   String?   @db.VarChar(1250)
  Cedula                 String?   @db.VarChar(1250)
  Cod_estatus            Int?
  Col_De_Empresa         String?   @db.VarChar(1250)
  Colonia                String?   @db.VarChar(1250)
  Colonia_Aval           String?   @db.VarChar(1250)
  Colonia_Empresa_Aval   String?   @db.VarChar(1250)
  Comentariosolicitud    String?   @db.VarChar(1250)
  Cuotasatrasadas        Int?
  Cuotaspactadas         Int?
  Cuotaspagadas          Int?
  Cuotaspagosmora        Int?
  Departamento           String?   @db.VarChar(1250)
  Departamento_Aval      String?   @db.VarChar(1250)
  Departamento_Emp_Aval  String?   @db.VarChar(1250)
  Departamento_Empresa   String?   @db.VarChar(1250)
  Diasdeatraso           String?   @db.VarChar(1250)
  Direccion              String?   @db.VarChar(1250)
  Direccion_Aval         String?   @db.VarChar(1250)
  Direccion_Empresa      String?   @db.VarChar(1250)
  Direccion_Empresa_Aval String?   @db.VarChar(1250)
  Empresa_Aval           String?   @db.VarChar(1250)
  Fecha_actualizacion    DateTime? @db.SmallDateTime
  Fecha_Nacimiento_Aval  DateTime? @db.SmallDateTime
  Fechacancelacion       DateTime? @db.SmallDateTime
  Fechacastigado         DateTime? @db.SmallDateTime
  Fechainicioprestamo    DateTime? @db.SmallDateTime
  FechaNacimiento        DateTime? @db.SmallDateTime
  Fechaproximopago       DateTime? @db.SmallDateTime
  Fechaultimopago        DateTime? @db.SmallDateTime
  Gastosdecobranza       String?   @db.VarChar(1250)
  Id_Aval                Int?
  Id_Empresa             Int?
  Id_Empresa_Aval        Int?
  IdclienteEmpresa       Int?
  Idcobrador             Int?
  Idempresa              Int?
  Idmoneda               Int?
  idproducto             Int?
  Idtipo_Empresa         Int?
  Idtipo_Empresa_Aval    Int?
  Interes                Decimal?  @db.Decimal(18, 6)
  Juicio                 String?   @db.VarChar(1250)
  Mensualidad            Decimal?  @db.Decimal(18, 6)
  Montoultimopago        Decimal?  @db.Decimal(18, 6)
  Morosidad              String?   @db.VarChar(1250)
  Municipio              String?   @db.VarChar(1250)
  Municipio_Aval         String?   @db.VarChar(1250)
  Municipio_Emp_Aval     String?   @db.VarChar(1250)
  Municipio_Empresa      String?   @db.VarChar(1250)
  Nit                    String?   @db.VarChar(1250)
  Nombre_Aval            String?   @db.VarChar(1250)
  Nombre_Empresa         String?   @db.VarChar(1250)
  Nombrecompleto         String?   @db.VarChar(1250)
  Noprestamo             String?   @db.VarChar(1250)
  Primerapellido         String?   @db.VarChar(1250)
  Primernombre           String?   @db.VarChar(1250)
  Producto               String?   @db.VarChar(1250)
  Puesto                 String?   @db.VarChar(1250)
  Ref_1                  String?   @db.VarChar(1250)
  Ref_2                  String?   @db.VarChar(1250)
  Ref_3                  String?   @db.VarChar(1250)
  Ref_4                  String?   @db.VarChar(1250)
  Ref_Aval_1             String?   @db.VarChar(1250)
  Ref_Aval_2             String?   @db.VarChar(1250)
  Region                 String?   @db.VarChar(1250)
  Saldo_Actual           Decimal?  @db.Decimal(18, 6)
  Saldo_Capital          Decimal?  @db.Decimal(18, 6)
  Segundoapellido        String?   @db.VarChar(1250)
  Segundonombre          String?   @db.VarChar(1250)
  Tasa                   Decimal?  @db.Decimal(18, 6)
  Tel_Aval_Laboral_1     String?   @db.VarChar(1250)
  Tel_Aval_Laboral_2     String?   @db.VarChar(1250)
  Tel_Aval_Otro_1        String?   @db.VarChar(1250)
  Tel_Aval_Otro_2        String?   @db.VarChar(1250)
  Tel_Aval_Otro_3        String?   @db.VarChar(1250)
  Tel_Aval_Personal      String?   @db.VarChar(1250)
  Tel_Otro_1             String?   @db.VarChar(1250)
  Tel_Otro_2             String?   @db.VarChar(1250)
  Tel_Otro_3             String?   @db.VarChar(1250)
  Tel_Personal_1         String?   @db.VarChar(1250)
  Tel_Personal_2         String?   @db.VarChar(1250)
  Tel_Personal_3         String?   @db.VarChar(1250)
  Tel_Ref_1              String?   @db.VarChar(1250)
  Tel_Ref_2              String?   @db.VarChar(1250)
  Tel_Ref_3              String?   @db.VarChar(1250)
  Tel_Ref_4              String?   @db.VarChar(1250)
  Tel_Ref_Aval_1         String?   @db.VarChar(1250)
  Tel_Ref_Aval_2         String?   @db.VarChar(1250)
  TipoCuenta             String?   @db.VarChar(1250)
  TipoGestion            String?   @db.VarChar(1250)
  Zona                   String?   @db.VarChar(1250)
  Zona_Aval              String?   @db.VarChar(1250)
  Zona_Empresa           String?   @db.VarChar(1250)
  Zona_Empresa_Aval      String?   @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_carga19194 {
  process_id             Int?
  row_id                 Int?
  Agencia_Cobro          String?   @db.VarChar(1250)
  Area                   String?   @db.VarChar(1250)
  Cedula                 String?   @db.VarChar(1250)
  Cod_estatus            Int?
  Col_De_Empresa         String?   @db.VarChar(1250)
  Colonia                String?   @db.VarChar(1250)
  Colonia_Aval           String?   @db.VarChar(1250)
  Colonia_Empresa_Aval   String?   @db.VarChar(1250)
  Comentariosolicitud    String?   @db.VarChar(1250)
  Cuotasatrasadas        Int?
  Cuotaspactadas         Int?
  Cuotaspagadas          Int?
  Cuotaspagosmora        Int?
  Departamento           String?   @db.VarChar(1250)
  Departamento_Aval      String?   @db.VarChar(1250)
  Departamento_Emp_Aval  String?   @db.VarChar(1250)
  Departamento_Empresa   String?   @db.VarChar(1250)
  Diasdeatraso           String?   @db.VarChar(1250)
  Direccion              String?   @db.VarChar(1250)
  Direccion_Aval         String?   @db.VarChar(1250)
  Direccion_Empresa      String?   @db.VarChar(1250)
  Direccion_Empresa_Aval String?   @db.VarChar(1250)
  Empresa_Aval           String?   @db.VarChar(1250)
  Fecha_actualizacion    DateTime? @db.SmallDateTime
  Fecha_Nacimiento_Aval  DateTime? @db.SmallDateTime
  Fechacancelacion       DateTime? @db.SmallDateTime
  Fechacastigado         DateTime? @db.SmallDateTime
  Fechainicioprestamo    DateTime? @db.SmallDateTime
  FechaNacimiento        DateTime? @db.SmallDateTime
  Fechaproximopago       DateTime? @db.SmallDateTime
  Fechaultimopago        DateTime? @db.SmallDateTime
  Gastosdecobranza       String?   @db.VarChar(1250)
  Id_Aval                Int?
  Id_Empresa             Int?
  Id_Empresa_Aval        Int?
  IdclienteEmpresa       Int?
  Idcobrador             Int?
  Idempresa              Int?
  Idmoneda               Int?
  idproducto             Int?
  Idtipo_Empresa         Int?
  Idtipo_Empresa_Aval    Int?
  Interes                Decimal?  @db.Decimal(18, 6)
  Juicio                 String?   @db.VarChar(1250)
  Mensualidad            Decimal?  @db.Decimal(18, 6)
  Montoultimopago        Decimal?  @db.Decimal(18, 6)
  Morosidad              String?   @db.VarChar(1250)
  Municipio              String?   @db.VarChar(1250)
  Municipio_Aval         String?   @db.VarChar(1250)
  Municipio_Emp_Aval     String?   @db.VarChar(1250)
  Municipio_Empresa      String?   @db.VarChar(1250)
  Nit                    String?   @db.VarChar(1250)
  Nombre_Aval            String?   @db.VarChar(1250)
  Nombre_Empresa         String?   @db.VarChar(1250)
  Nombrecompleto         String?   @db.VarChar(1250)
  Noprestamo             String?   @db.VarChar(1250)
  Primerapellido         String?   @db.VarChar(1250)
  Primernombre           String?   @db.VarChar(1250)
  Producto               String?   @db.VarChar(1250)
  Puesto                 String?   @db.VarChar(1250)
  Ref_1                  String?   @db.VarChar(1250)
  Ref_2                  String?   @db.VarChar(1250)
  Ref_3                  String?   @db.VarChar(1250)
  Ref_4                  String?   @db.VarChar(1250)
  Ref_Aval_1             String?   @db.VarChar(1250)
  Ref_Aval_2             String?   @db.VarChar(1250)
  Region                 String?   @db.VarChar(1250)
  Saldo_Actual           Decimal?  @db.Decimal(18, 6)
  Saldo_Capital          Decimal?  @db.Decimal(18, 6)
  Segundoapellido        String?   @db.VarChar(1250)
  Segundonombre          String?   @db.VarChar(1250)
  Tasa                   Decimal?  @db.Decimal(18, 6)
  Tel_Aval_Laboral_1     String?   @db.VarChar(1250)
  Tel_Aval_Laboral_2     String?   @db.VarChar(1250)
  Tel_Aval_Otro_1        String?   @db.VarChar(1250)
  Tel_Aval_Otro_2        String?   @db.VarChar(1250)
  Tel_Aval_Otro_3        String?   @db.VarChar(1250)
  Tel_Aval_Personal      String?   @db.VarChar(1250)
  Tel_Otro_1             String?   @db.VarChar(1250)
  Tel_Otro_2             String?   @db.VarChar(1250)
  Tel_Otro_3             String?   @db.VarChar(1250)
  Tel_Personal_1         String?   @db.VarChar(1250)
  Tel_Personal_2         String?   @db.VarChar(1250)
  Tel_Personal_3         String?   @db.VarChar(1250)
  Tel_Ref_1              String?   @db.VarChar(1250)
  Tel_Ref_2              String?   @db.VarChar(1250)
  Tel_Ref_3              String?   @db.VarChar(1250)
  Tel_Ref_4              String?   @db.VarChar(1250)
  Tel_Ref_Aval_1         String?   @db.VarChar(1250)
  Tel_Ref_Aval_2         String?   @db.VarChar(1250)
  TipoCuenta             String?   @db.VarChar(1250)
  TipoGestion            String?   @db.VarChar(1250)
  Zona                   String?   @db.VarChar(1250)
  Zona_Aval              String?   @db.VarChar(1250)
  Zona_Empresa           String?   @db.VarChar(1250)
  Zona_Empresa_Aval      String?   @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_carga19195 {
  process_id             Int?
  row_id                 Int?
  Agencia_Cobro          String?   @db.VarChar(1250)
  Area                   String?   @db.VarChar(1250)
  Cedula                 String?   @db.VarChar(1250)
  Cod_estatus            Int?
  Col_De_Empresa         String?   @db.VarChar(1250)
  Colonia                String?   @db.VarChar(1250)
  Colonia_Aval           String?   @db.VarChar(1250)
  Colonia_Empresa_Aval   String?   @db.VarChar(1250)
  Comentariosolicitud    String?   @db.VarChar(1250)
  Cuotasatrasadas        Int?
  Cuotaspactadas         Int?
  Cuotaspagadas          Int?
  Cuotaspagosmora        Int?
  Departamento           String?   @db.VarChar(1250)
  Departamento_Aval      String?   @db.VarChar(1250)
  Departamento_Emp_Aval  String?   @db.VarChar(1250)
  Departamento_Empresa   String?   @db.VarChar(1250)
  Diasdeatraso           String?   @db.VarChar(1250)
  Direccion              String?   @db.VarChar(1250)
  Direccion_Aval         String?   @db.VarChar(1250)
  Direccion_Empresa      String?   @db.VarChar(1250)
  Direccion_Empresa_Aval String?   @db.VarChar(1250)
  Empresa_Aval           String?   @db.VarChar(1250)
  Fecha_actualizacion    DateTime? @db.SmallDateTime
  Fecha_Nacimiento_Aval  DateTime? @db.SmallDateTime
  Fechacancelacion       DateTime? @db.SmallDateTime
  Fechacastigado         DateTime? @db.SmallDateTime
  Fechainicioprestamo    DateTime? @db.SmallDateTime
  FechaNacimiento        DateTime? @db.SmallDateTime
  Fechaproximopago       DateTime? @db.SmallDateTime
  Fechaultimopago        DateTime? @db.SmallDateTime
  Gastosdecobranza       String?   @db.VarChar(1250)
  Id_Aval                Int?
  Id_Empresa             Int?
  Id_Empresa_Aval        Int?
  IdclienteEmpresa       Int?
  Idcobrador             Int?
  Idempresa              Int?
  Idmoneda               Int?
  idproducto             Int?
  Idtipo_Empresa         Int?
  Idtipo_Empresa_Aval    Int?
  Interes                Decimal?  @db.Decimal(18, 6)
  Juicio                 String?   @db.VarChar(1250)
  Mensualidad            Decimal?  @db.Decimal(18, 6)
  Montoultimopago        Decimal?  @db.Decimal(18, 6)
  Morosidad              String?   @db.VarChar(1250)
  Municipio              String?   @db.VarChar(1250)
  Municipio_Aval         String?   @db.VarChar(1250)
  Municipio_Emp_Aval     String?   @db.VarChar(1250)
  Municipio_Empresa      String?   @db.VarChar(1250)
  Nit                    String?   @db.VarChar(1250)
  Nombre_Aval            String?   @db.VarChar(1250)
  Nombre_Empresa         String?   @db.VarChar(1250)
  Nombrecompleto         String?   @db.VarChar(1250)
  Noprestamo             String?   @db.VarChar(1250)
  Primerapellido         String?   @db.VarChar(1250)
  Primernombre           String?   @db.VarChar(1250)
  Producto               String?   @db.VarChar(1250)
  Puesto                 String?   @db.VarChar(1250)
  Ref_1                  String?   @db.VarChar(1250)
  Ref_2                  String?   @db.VarChar(1250)
  Ref_3                  String?   @db.VarChar(1250)
  Ref_4                  String?   @db.VarChar(1250)
  Ref_Aval_1             String?   @db.VarChar(1250)
  Ref_Aval_2             String?   @db.VarChar(1250)
  Region                 String?   @db.VarChar(1250)
  Saldo_Actual           Decimal?  @db.Decimal(18, 6)
  Saldo_Capital          Decimal?  @db.Decimal(18, 6)
  Segundoapellido        String?   @db.VarChar(1250)
  Segundonombre          String?   @db.VarChar(1250)
  Tasa                   Decimal?  @db.Decimal(18, 6)
  Tel_Aval_Laboral_1     String?   @db.VarChar(1250)
  Tel_Aval_Laboral_2     String?   @db.VarChar(1250)
  Tel_Aval_Otro_1        String?   @db.VarChar(1250)
  Tel_Aval_Otro_2        String?   @db.VarChar(1250)
  Tel_Aval_Otro_3        String?   @db.VarChar(1250)
  Tel_Aval_Personal      String?   @db.VarChar(1250)
  Tel_Otro_1             String?   @db.VarChar(1250)
  Tel_Otro_2             String?   @db.VarChar(1250)
  Tel_Otro_3             String?   @db.VarChar(1250)
  Tel_Personal_1         String?   @db.VarChar(1250)
  Tel_Personal_2         String?   @db.VarChar(1250)
  Tel_Personal_3         String?   @db.VarChar(1250)
  Tel_Ref_1              String?   @db.VarChar(1250)
  Tel_Ref_2              String?   @db.VarChar(1250)
  Tel_Ref_3              String?   @db.VarChar(1250)
  Tel_Ref_4              String?   @db.VarChar(1250)
  Tel_Ref_Aval_1         String?   @db.VarChar(1250)
  Tel_Ref_Aval_2         String?   @db.VarChar(1250)
  TipoCuenta             String?   @db.VarChar(1250)
  TipoGestion            String?   @db.VarChar(1250)
  Zona                   String?   @db.VarChar(1250)
  Zona_Aval              String?   @db.VarChar(1250)
  Zona_Empresa           String?   @db.VarChar(1250)
  Zona_Empresa_Aval      String?   @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_cuentas19300 {
  process_id            Int?
  row_id                Int
  asdasd                String? @db.VarChar(1250)
  idCliente             String? @db.VarChar(1250)
  idEmpresa             String? @db.VarChar(1250)
  identificacionCliente String? @db.VarChar(1250)
  lugarTrabajo          String? @db.VarChar(1250)
  nit                   String? @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_cuentas19301 {
  process_id     Int?
  row_id         Int
  idCliente      String? @db.VarChar(1250)
  idEmpresa      String? @db.VarChar(1250)
  lugarTrabajo   String? @db.VarChar(1250)
  nombreCompleto String? @db.VarChar(1250)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_reasignacion {
  process_id Int?
  row_id     Int
  idcobrador String? @db.VarChar(1000)
  idempresa  String? @db.VarChar(1000)
  idmoneda   String? @db.VarChar(1000)
  noprestamo String? @db.VarChar(1000)

  @@ignore
}

model ticono {
  cod_icono     Int             @id(map: "pk_ticono")
  txt_desc      String          @db.VarChar(25)
  txt_icono     String          @db.VarChar(50)
  sn_activo     Int?            @default(-1, map: "DF__ticono__sn_activ__2B9F624A")
  tmenu_sistema tmenu_sistema[]
}

model tmenu_sistema {
  id             Int          @id(map: "pk_menu_sistema")
  txt_nombre     String?      @db.VarChar(100)
  txt_action     String?      @db.VarChar(50)
  txt_controller String?      @db.VarChar(50)
  cod_icono      Int?
  father_id      Int?
  sn_activo      Boolean?
  sn_visible     Boolean?
  ticono         ticono?      @relation(fields: [cod_icono], references: [cod_icono], onDelete: NoAction, onUpdate: NoAction, map: "fk_menu_sistema_icono")
  trole_menu     trole_menu[]
}

model trole {
  role_id      String         @id(map: "PK__trole__760965CCDD1353FF") @db.UniqueIdentifier
  descriptiion String?        @db.VarChar(50)
  state        Boolean?
  trole_menu   trole_menu[]
  trole_report trole_report[]
  tuser_role   tuser_role[]
}

model trole_menu {
  role_id       String        @db.UniqueIdentifier
  menu_id       Int
  tmenu_sistema tmenu_sistema @relation(fields: [menu_id], references: [id], onUpdate: NoAction, map: "fk_trole_menu__tmenu_sistema")
  trole         trole         @relation(fields: [role_id], references: [role_id], onUpdate: NoAction, map: "fk_trole_menu__trole")

  @@id([role_id, menu_id], map: "pk_trole_menu")
}

model trole_report {
  role_id        String         @db.UniqueIdentifier
  report_id      Int
  reporte_header reporte_header @relation(fields: [report_id], references: [id_reporte], onUpdate: NoAction, map: "fk_trole_report__reporte_header")
  trole          trole          @relation(fields: [role_id], references: [role_id], onUpdate: NoAction, map: "fk_trole_report__trole")

  @@id([role_id, report_id], map: "pk_trole_report")
}

model ttabla_ult_nro {
  txt_nom_tabla String @id(map: "pk_ttabla_ult_nro") @db.VarChar(30)
  ult_nro_tabla Int?
}

model ttipo_comando_sql {
  id_tipo_comando Int              @id(map: "PK__ttipo_co__BA54A77D51D7F1AA")
  txt_desc        String?          @db.VarChar(50)
  sn_activo       Int?
  te_comando_sql  te_comando_sql[]
}

model ttipo_dato {
  id_tipo_dato    Int               @id(map: "pk_ttipo_dato")
  txt_desc        String?           @db.VarChar(100)
  txt_formato     String?           @db.VarChar(250)
  sn_activo       Int?
  reporte_detalle reporte_detalle[]
}

model ttipo_operador {
  id_tipo_operador Int              @id(map: "pk_ttipo_operador")
  txt_desc         String?          @db.VarChar(50)
  txt_desc_abrev   String?          @db.VarChar(5)
  sn_activo        Int?
  reporte_filtro   reporte_filtro[]
}

model tuser_role {
  role_id     String      @db.UniqueIdentifier
  user_id     BigInt
  trole       trole       @relation(fields: [role_id], references: [role_id], onUpdate: NoAction, map: "fk_tuser_role__trole")
  IC_Cobrador IC_Cobrador @relation(fields: [user_id], references: [idCobrador], onUpdate: NoAction, map: "fk_tuser_role__ic_cobrador")

  @@id([role_id, user_id], map: "pk_tuser_role")
}
